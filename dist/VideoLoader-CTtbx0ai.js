import{E as c,A as l}from"./app.js";const o=l.getInstance();class v extends c{constructor(t,i={}){super(),o&&typeof o=="object"&&!o.moduleLoader&&!o.scroll&&(o.timeout||o.lazyLoad!==void 0||o.rootMargin||o.threshold)&&(i=o,o=null),this.video=t.tagName==="VIDEO"?t:t.querySelector("video"),this.instance=t,this.isMobile=window.innerWidth<=992,this.options={timeout:i.timeout||(this.isMobile?1e4:15e3),lazyLoad:i.lazyLoad!==!1,rootMargin:i.rootMargin||(this.isMobile?"50px":"100px"),threshold:i.threshold||.1},this.isLoaded=!1,this.isInView=!1,this.observer=null,this.loadingIndicator=null,this.isLowPowerMode=this.detectLowPowerMode(),this.video._videoLoaderInstance=this,this.isWebGLVideo=this.detectWebGLVideo(),this.source=this.video.querySelector("source");const e=this.source.getAttribute("data-src-mobile")||this.source.dataset.srcMobile,s=this.source.getAttribute("data-src")||this.source.dataset.src;this.src=this.isMobile&&e?e:s,(!this.options.lazyLoad||this.isWebGLVideo)&&this.source.setAttribute("src",this.src),this.init()}detectWebGLVideo(){const t=[".double-video",".cases_video",".preview_img",".talk_full"],i=this.video===this.instance?this.video.parentElement:this.instance;return t.some(e=>{const s=e.substring(1);if(i&&i.classList.contains(s))return!0;let r=i==null?void 0:i.parentElement;for(;r;){if(r.classList.contains(s))return!0;r=r.parentElement}return!1})}getCustomAspectRatio(){const t=[".double-video",".case_split-video"],i=this.video===this.instance?this.video.parentElement:this.instance,e=this.findContainerWithClass(i,t);if(!e)return null;const s=e.dataset.aspectMobile,r=e.dataset.aspect;let a,h;if(this.isMobile&&s?(a=s,h="data-aspect-mobile"):r&&(a=r,h="data-aspect"),a){const d=this.parseAspectRatio(a);if(d)return{width:d.width,height:d.height,ratio:d.ratio,source:h}}const n=this.getAspectRatioFromCSS(e);return n?{width:n.width,height:n.height,ratio:n.ratio,source:"CSS aspect-ratio"}:null}findContainerWithClass(t,i){let e=t;for(;e;){for(const s of i){const r=s.substring(1);if(e.classList&&e.classList.contains(r))return e}e=e.parentElement}return null}parseAspectRatio(t){if(!t)return null;if(t.includes(":")){const[e,s]=t.split(":").map(Number);if(e&&s)return{width:e,height:s,ratio:e/s}}if(t.includes("/")){const[e,s]=t.split("/").map(Number);if(e&&s)return{width:e,height:s,ratio:e/s}}const i=parseFloat(t);return!isNaN(i)&&i>0?{ratio:i,width:null,height:null}:null}getAspectRatioFromCSS(t){try{const e=window.getComputedStyle(t).getPropertyValue("aspect-ratio");return!e||e==="auto"?null:this.parseAspectRatio(e.replace(/\s+/g,""))}catch(i){return console.warn("Failed to read CSS aspect-ratio:",i),null}}init(){if(this.video.readyState>=3){this.isLoaded=!0,this.trigger("loaded"),this.setupDOMPlayback();return}!this.isMobile&&(this.isWebGLVideo||!this.options.lazyLoad)?this.startLoading():this.setupIntersectionObserver()}detectLowPowerMode(){if(window.matchMedia&&window.matchMedia("(prefers-reduced-motion: reduce)").matches)return!0;if(navigator.connection){const t=navigator.connection;return t.saveData||t.effectiveType==="slow-2g"||t.effectiveType==="2g"}return!1}setupIntersectionObserver(){if(!("IntersectionObserver"in window)){this.startLoading();return}this.observer=new IntersectionObserver(t=>{t.forEach(i=>{i.isIntersecting&&!this.isLoaded&&!this.isInView&&(this.isInView=!0,this.startLoading())})},{rootMargin:this.options.rootMargin,threshold:this.options.threshold}),this.observer.observe(this.video)}startLoading(){performance.now(),this.source.getAttribute("src")||this.source.setAttribute("src",this.src),this.setOptimalPreloadBehavior(),this.video.load(),this.addEventListeners(),this.startTimeout()}setOptimalPreloadBehavior(){this.isMobile||this.isLowPowerMode?(this.video.preload="metadata",this.setupUserInteractionUpgrade()):this.video.preload="auto"}setupUserInteractionUpgrade(){const t=i=>{this.video.preload="auto",this.video.load(),document.removeEventListener("touchstart",t,{passive:!0}),document.removeEventListener("click",t)};document.addEventListener("touchstart",i=>t(),{passive:!0,once:!0}),document.addEventListener("click",i=>t(),{once:!0})}addEventListeners(){this.video.addEventListener("canplaythrough",()=>{this.onVideoLoaded()},{once:!0}),this.video.addEventListener("error",t=>{this.onVideoError(t)},{once:!0})}startTimeout(){this.timeout=setTimeout(()=>{this.isLoaded||(console.warn("Video load timeout - proceeding anyway"),this.onVideoLoaded(!0))},this.options.timeout)}onVideoLoaded(){if(this.isLoaded)return;this.isLoaded=!0,clearTimeout(this.timeout),this.observer&&(this.observer.disconnect(),this.observer=null);const t=this.isMobile?this.getCustomAspectRatio():null;t&&t.width&&t.height?(this.width=t.width,this.height=t.height):(this.width=this.video.videoWidth,this.height=this.video.videoHeight),this.setupDOMPlayback(),this.trigger("loaded")}setupDOMPlayback(){this.isWebGLVideo||(this.video.getAttribute("autoplay")==="true"?this.playVideo():(this.video.currentTime=0,this.video.pause(),this.playVideo())),this.video.classList.add("loaded")}playVideo(){this.video.paused&&this.video.play().catch(t=>{console.warn("Video autoplay failed:",t)})}onVideoError(t){clearTimeout(this.timeout),console.error("Error loading video:",t),this.observer&&(this.observer.disconnect(),this.observer=null),this.trigger("error")}waitForLoad(){return new Promise((t,i)=>{if(this.isLoaded){t(this.video);return}this.on("loaded",()=>t(this.video)),this.on("error",e=>i(e.error))})}destroy(){clearTimeout(this.timeout),this.observer&&(this.observer.disconnect(),this.observer=null),this.video&&(this.video._videoLoaderInstance=null,this.video.paused||this.video.pause()),this.off(),this.video=null,this.source=null}}export{v as default};
