var qM=Object.defineProperty;var YM=(k,Ki,Vs)=>Ki in k?qM(k,Ki,{enumerable:!0,configurable:!0,writable:!0,value:Vs}):k[Ki]=Vs;var pe=(k,Ki,Vs)=>YM(k,typeof Ki!="symbol"?Ki+"":Ki,Vs);(function(){"use strict";var k=typeof document<"u"?document.currentScript:null;const Ki="modulepreload",Vs=function(r,e){return new URL(r,e).href},$M={},Oe=function(e,t,i){let n=Promise.resolve();function s(o){const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=o,window.dispatchEvent(a),!a.defaultPrevented)throw o}return n.then(o=>{for(const a of o||[])a.status==="rejected"&&s(a.reason);return e().catch(s)})};function Tp(r,e){for(var t=0;t<e.length;t++){var i=e[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(r,typeof(n=(function(s,o){if(typeof s!="object"||s===null)return s;var a=s[Symbol.toPrimitive];if(a!==void 0){var l=a.call(s,"string");if(typeof l!="object")return l;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(s)})(i.key))=="symbol"?n:String(n),i)}var n}function ml(r,e,t){return e&&Tp(r.prototype,e),Object.defineProperty(r,"prototype",{writable:!1}),r}function Si(){return Si=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(r[i]=t[i])}return r},Si.apply(this,arguments)}function Yr(r,e){r.prototype=Object.create(e.prototype),r.prototype.constructor=r,Hs(r,e)}function gl(r){return gl=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},gl(r)}function Hs(r,e){return Hs=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,i){return t.__proto__=i,t},Hs(r,e)}function Ap(){if(typeof Reflect>"u"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function vl(r,e,t){return vl=Ap()?Reflect.construct.bind():function(i,n,s){var o=[null];o.push.apply(o,n);var a=new(Function.bind.apply(i,o));return s&&Hs(a,s.prototype),a},vl.apply(null,arguments)}function yl(r){var e=typeof Map=="function"?new Map:void 0;return yl=function(t){if(t===null||Function.toString.call(t).indexOf("[native code]")===-1)return t;if(typeof t!="function")throw new TypeError("Super expression must either be null or a function");if(e!==void 0){if(e.has(t))return e.get(t);e.set(t,i)}function i(){return vl(t,arguments,gl(this).constructor)}return i.prototype=Object.create(t.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),Hs(i,t)},yl(r)}function Ep(r){if(r===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}var Qi,Cp=function(){this.before=void 0,this.beforeLeave=void 0,this.leave=void 0,this.afterLeave=void 0,this.beforeEnter=void 0,this.enter=void 0,this.afterEnter=void 0,this.after=void 0};(function(r){r[r.off=0]="off",r[r.error=1]="error",r[r.warning=2]="warning",r[r.info=3]="info",r[r.debug=4]="debug"})(Qi||(Qi={}));var yh=Qi.off,_n=(function(){function r(t){this.t=void 0,this.t=t}r.getLevel=function(){return yh},r.setLevel=function(t){return yh=Qi[t]};var e=r.prototype;return e.error=function(){this.i(console.error,Qi.error,[].slice.call(arguments))},e.warn=function(){this.i(console.warn,Qi.warning,[].slice.call(arguments))},e.info=function(){this.i(console.info,Qi.info,[].slice.call(arguments))},e.debug=function(){this.i(console.log,Qi.debug,[].slice.call(arguments))},e.i=function(t,i,n){i<=r.getLevel()&&t.apply(console,["["+this.t+"] "].concat(n))},r})();function ss(r){return r.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1")}function xh(r){return r&&r.sensitive?"":"i"}var Mi={container:"container",history:"history",namespace:"namespace",prefix:"data-barba",prevent:"prevent",wrapper:"wrapper"},bn=new((function(){function r(){this.o=Mi,this.u=void 0,this.h={after:null,before:null,parent:null}}var e=r.prototype;return e.toString=function(t){return t.outerHTML},e.toDocument=function(t){return this.u||(this.u=new DOMParser),this.u.parseFromString(t,"text/html")},e.toElement=function(t){var i=document.createElement("div");return i.innerHTML=t,i},e.getHtml=function(t){return t===void 0&&(t=document),this.toString(t.documentElement)},e.getWrapper=function(t){return t===void 0&&(t=document),t.querySelector("["+this.o.prefix+'="'+this.o.wrapper+'"]')},e.getContainer=function(t){return t===void 0&&(t=document),t.querySelector("["+this.o.prefix+'="'+this.o.container+'"]')},e.removeContainer=function(t){document.body.contains(t)&&(this.v(t),t.parentNode.removeChild(t))},e.addContainer=function(t,i){var n=this.getContainer()||this.h.before;n?this.l(t,n):this.h.after?this.h.after.parentNode.insertBefore(t,this.h.after):this.h.parent?this.h.parent.appendChild(t):i.appendChild(t)},e.getSibling=function(){return this.h},e.getNamespace=function(t){t===void 0&&(t=document);var i=t.querySelector("["+this.o.prefix+"-"+this.o.namespace+"]");return i?i.getAttribute(this.o.prefix+"-"+this.o.namespace):null},e.getHref=function(t){if(t.tagName&&t.tagName.toLowerCase()==="a"){if(typeof t.href=="string")return t.href;var i=t.getAttribute("href")||t.getAttribute("xlink:href");if(i)return this.resolveUrl(i.baseVal||i)}return null},e.resolveUrl=function(){var t=[].slice.call(arguments).length;if(t===0)throw new Error("resolveUrl requires at least one argument; got none.");var i=document.createElement("base");if(i.href=arguments[0],t===1)return i.href;var n=document.getElementsByTagName("head")[0];n.insertBefore(i,n.firstChild);for(var s,o=document.createElement("a"),a=1;a<t;a++)o.href=arguments[a],i.href=s=o.href;return n.removeChild(i),s},e.l=function(t,i){i.parentNode.insertBefore(t,i.nextSibling)},e.v=function(t){return this.h={after:t.nextElementSibling,before:t.previousElementSibling,parent:t.parentElement},this.h},r})()),Rp=(function(){function r(){this.p=void 0,this.m=[],this.P=-1}var e=r.prototype;return e.init=function(t,i){this.p="barba";var n={data:{},ns:i,scroll:{x:window.scrollX,y:window.scrollY},url:t};this.P=0,this.m.push(n);var s={from:this.p,index:this.P,states:[].concat(this.m)};window.history&&window.history.replaceState(s,"",t)},e.change=function(t,i,n){if(n&&n.state){var s=n.state,o=s.index;i=this.g(this.P-o),this.replace(s.states),this.P=o}else this.add(t,i);return i},e.add=function(t,i,n,s){var o=n??this.R(i),a={data:s??{},ns:"tmp",scroll:{x:window.scrollX,y:window.scrollY},url:t};switch(o){case"push":this.P=this.size,this.m.push(a);break;case"replace":this.set(this.P,a)}var l={from:this.p,index:this.P,states:[].concat(this.m)};switch(o){case"push":window.history&&window.history.pushState(l,"",t);break;case"replace":window.history&&window.history.replaceState(l,"",t)}},e.store=function(t,i){var n=i||this.P,s=this.get(n);s.data=Si({},s.data,t),this.set(n,s);var o={from:this.p,index:this.P,states:[].concat(this.m)};window.history.replaceState(o,"")},e.update=function(t,i){var n=i||this.P,s=Si({},this.get(n),t);this.set(n,s)},e.remove=function(t){t?this.m.splice(t,1):this.m.pop(),this.P--},e.clear=function(){this.m=[],this.P=-1},e.replace=function(t){this.m=t},e.get=function(t){return this.m[t]},e.set=function(t,i){return this.m[t]=i},e.R=function(t){var i="push",n=t,s=Mi.prefix+"-"+Mi.history;return n.hasAttribute&&n.hasAttribute(s)&&(i=n.getAttribute(s)),i},e.g=function(t){return Math.abs(t)>1?t>0?"forward":"back":t===0?"popstate":t>0?"back":"forward"},ml(r,[{key:"current",get:function(){return this.m[this.P]}},{key:"previous",get:function(){return this.P<1?null:this.m[this.P-1]}},{key:"size",get:function(){return this.m.length}}]),r})(),_h=new Rp,$r=function(r,e){try{var t=(function(){if(!e.next.html)return Promise.resolve(r).then(function(i){var n=e.next;if(i){var s=bn.toElement(i.html);n.namespace=bn.getNamespace(s),n.container=bn.getContainer(s),n.url=i.url,n.html=i.html,_h.update({ns:n.namespace});var o=bn.toDocument(i.html);document.title=o.title}})})();return Promise.resolve(t&&t.then?t.then(function(){}):void 0)}catch(i){return Promise.reject(i)}},bh=function r(e,t,i){return e instanceof RegExp?(function(n,s){if(!s)return n;for(var o=/\((?:\?<(.*?)>)?(?!\?)/g,a=0,l=o.exec(n.source);l;)s.push({name:l[1]||a++,prefix:"",suffix:"",modifier:"",pattern:""}),l=o.exec(n.source);return n})(e,t):Array.isArray(e)?(function(n,s,o){var a=n.map(function(l){return r(l,s,o).source});return new RegExp("(?:".concat(a.join("|"),")"),xh(o))})(e,t,i):(function(n,s,o){return(function(a,l,c){c===void 0&&(c={});for(var h=c.strict,d=h!==void 0&&h,u=c.start,f=u===void 0||u,m=c.end,v=m===void 0||m,g=c.encode,p=g===void 0?function(H){return H}:g,x=c.delimiter,y=x===void 0?"/#?":x,_=c.endsWith,C="[".concat(ss(_===void 0?"":_),"]|$"),T="[".concat(ss(y),"]"),A=f?"^":"",I=0,S=a;I<S.length;I++){var b=S[I];if(typeof b=="string")A+=ss(p(b));else{var L=ss(p(b.prefix)),D=ss(p(b.suffix));if(b.pattern)if(l&&l.push(b),L||D)if(b.modifier==="+"||b.modifier==="*"){var F=b.modifier==="*"?"?":"";A+="(?:".concat(L,"((?:").concat(b.pattern,")(?:").concat(D).concat(L,"(?:").concat(b.pattern,"))*)").concat(D,")").concat(F)}else A+="(?:".concat(L,"(").concat(b.pattern,")").concat(D,")").concat(b.modifier);else A+=b.modifier==="+"||b.modifier==="*"?"((?:".concat(b.pattern,")").concat(b.modifier,")"):"(".concat(b.pattern,")").concat(b.modifier);else A+="(?:".concat(L).concat(D,")").concat(b.modifier)}}if(v)d||(A+="".concat(T,"?")),A+=c.endsWith?"(?=".concat(C,")"):"$";else{var B=a[a.length-1],Y=typeof B=="string"?T.indexOf(B[B.length-1])>-1:B===void 0;d||(A+="(?:".concat(T,"(?=").concat(C,"))?")),Y||(A+="(?=".concat(T,"|").concat(C,")"))}return new RegExp(A,xh(c))})((function(a,l){l===void 0&&(l={});for(var c=(function(D){for(var F=[],B=0;B<D.length;){var Y=D[B];if(Y!=="*"&&Y!=="+"&&Y!=="?")if(Y!=="\\")if(Y!=="{")if(Y!=="}")if(Y!==":")if(Y!=="(")F.push({type:"CHAR",index:B,value:D[B++]});else{var H=1,Q="";if(D[te=B+1]==="?")throw new TypeError('Pattern cannot start with "?" at '.concat(te));for(;te<D.length;)if(D[te]!=="\\"){if(D[te]===")"){if(--H==0){te++;break}}else if(D[te]==="("&&(H++,D[te+1]!=="?"))throw new TypeError("Capturing groups are not allowed at ".concat(te));Q+=D[te++]}else Q+=D[te++]+D[te++];if(H)throw new TypeError("Unbalanced pattern at ".concat(B));if(!Q)throw new TypeError("Missing pattern at ".concat(B));F.push({type:"PATTERN",index:B,value:Q}),B=te}else{for(var q="",te=B+1;te<D.length;){var ce=D.charCodeAt(te);if(!(ce>=48&&ce<=57||ce>=65&&ce<=90||ce>=97&&ce<=122||ce===95))break;q+=D[te++]}if(!q)throw new TypeError("Missing parameter name at ".concat(B));F.push({type:"NAME",index:B,value:q}),B=te}else F.push({type:"CLOSE",index:B,value:D[B++]});else F.push({type:"OPEN",index:B,value:D[B++]});else F.push({type:"ESCAPED_CHAR",index:B++,value:D[B++]});else F.push({type:"MODIFIER",index:B,value:D[B++]})}return F.push({type:"END",index:B,value:""}),F})(a),h=l.prefixes,d=h===void 0?"./":h,u="[^".concat(ss(l.delimiter||"/#?"),"]+?"),f=[],m=0,v=0,g="",p=function(D){if(v<c.length&&c[v].type===D)return c[v++].value},x=function(D){var F=p(D);if(F!==void 0)return F;var B=c[v],Y=B.index;throw new TypeError("Unexpected ".concat(B.type," at ").concat(Y,", expected ").concat(D))},y=function(){for(var D,F="";D=p("CHAR")||p("ESCAPED_CHAR");)F+=D;return F};v<c.length;){var _=p("CHAR"),C=p("NAME"),T=p("PATTERN");if(C||T)d.indexOf(I=_||"")===-1&&(g+=I,I=""),g&&(f.push(g),g=""),f.push({name:C||m++,prefix:I,suffix:"",pattern:T||u,modifier:p("MODIFIER")||""});else{var A=_||p("ESCAPED_CHAR");if(A)g+=A;else if(g&&(f.push(g),g=""),p("OPEN")){var I=y(),S=p("NAME")||"",b=p("PATTERN")||"",L=y();x("CLOSE"),f.push({name:S||(b?m++:""),pattern:S&&!b?u:b,prefix:I,suffix:L,modifier:p("MODIFIER")||""})}else x("END")}}return f})(n,o),s,o)})(e,t,i)},Pp={__proto__:null,update:$r,nextTick:function(){return new Promise(function(r){window.requestAnimationFrame(r)})},pathToRegexp:bh},wh=function(){return window.location.origin},Gs=function(r){return r===void 0&&(r=window.location.href),en(r).port},en=function(r){var e,t=r.match(/:\d+/);if(t===null)/^http/.test(r)&&(e=80),/^https/.test(r)&&(e=443);else{var i=t[0].substring(1);e=parseInt(i,10)}var n,s=r.replace(wh(),""),o={},a=s.indexOf("#");a>=0&&(n=s.slice(a+1),s=s.slice(0,a));var l=s.indexOf("?");return l>=0&&(o=Sh(s.slice(l+1)),s=s.slice(0,l)),{hash:n,path:s,port:e,query:o}},Sh=function(r){return r.split("&").reduce(function(e,t){var i=t.split("=");return e[i[0]]=i[1],e},{})},xl=function(r){return r===void 0&&(r=window.location.href),r.replace(/(\/#.*|\/|#.*)$/,"")},Ip={__proto__:null,getHref:function(){return window.location.href},getAbsoluteHref:function(r,e){return e===void 0&&(e=document.baseURI),new URL(r,e).href},getOrigin:wh,getPort:Gs,getPath:function(r){return r===void 0&&(r=window.location.href),en(r).path},getQuery:function(r,e){return e===void 0&&(e=!1),e?JSON.stringify(en(r).query):en(r).query},getHash:function(r){return en(r).hash},parse:en,parseQuery:Sh,clean:xl};function Lp(r,e,t,i,n){return e===void 0&&(e=2e3),new Promise(function(s,o){var a=new XMLHttpRequest;a.onreadystatechange=function(){if(a.readyState===XMLHttpRequest.DONE){if(a.status===200){var l=a.responseURL!==""&&a.responseURL!==r?a.responseURL:r;s({html:a.responseText,url:Si({href:l},en(l))}),i.update(r,{status:"fulfilled",target:l})}else if(a.status){var c={status:a.status,statusText:a.statusText};t(r,c),o(c),i.update(r,{status:"rejected"})}}},a.ontimeout=function(){var l=new Error("Timeout error ["+e+"]");t(r,l),o(l),i.update(r,{status:"rejected"})},a.onerror=function(){var l=new Error("Fetch error");t(r,l),o(l),i.update(r,{status:"rejected"})},a.open("GET",r),a.timeout=e,a.setRequestHeader("Accept","text/html,application/xhtml+xml,application/xml"),a.setRequestHeader("x-barba","yes"),n.all().forEach(function(l,c){a.setRequestHeader(c,l)}),a.send()})}function Up(r){return!!r&&(typeof r=="object"||typeof r=="function")&&typeof r.then=="function"}function rs(r,e){return e===void 0&&(e={}),function(){var t=arguments,i=!1,n=new Promise(function(s,o){e.async=function(){return i=!0,function(l,c){l?o(l):s(c)}};var a=r.apply(e,[].slice.call(t));i||(Up(a)?a.then(s,o):s(a))});return n}}var tn=new((function(r){function e(){var i;return(i=r.call(this)||this).logger=new _n("@barba/core"),i.all=["ready","page","reset","currentAdded","currentRemoved","nextAdded","nextRemoved","beforeOnce","once","afterOnce","before","beforeLeave","leave","afterLeave","beforeEnter","enter","afterEnter","after"],i.registered=new Map,i.init(),i}Yr(e,r);var t=e.prototype;return t.init=function(){var i=this;this.registered.clear(),this.all.forEach(function(n){i[n]||(i[n]=function(s,o){i.registered.has(n)||i.registered.set(n,new Set),i.registered.get(n).add({ctx:o||{},fn:s})})})},t.do=function(i){var n=arguments,s=this;if(this.registered.has(i)){var o=Promise.resolve();return this.registered.get(i).forEach(function(a){o=o.then(function(){return rs(a.fn,a.ctx).apply(void 0,[].slice.call(n,1))})}),o.catch(function(a){s.logger.debug("Hook error ["+i+"]"),s.logger.error(a)})}return Promise.resolve()},t.clear=function(){var i=this;this.all.forEach(function(n){delete i[n]}),this.init()},t.help=function(){this.logger.info("Available hooks: "+this.all.join(","));var i=[];this.registered.forEach(function(n,s){return i.push(s)}),this.logger.info("Registered hooks: "+i.join(","))},e})(Cp)),Mh=(function(){function r(e){if(this.k=void 0,this.O=[],typeof e=="boolean")this.k=e;else{var t=Array.isArray(e)?e:[e];this.O=t.map(function(i){return bh(i)})}}return r.prototype.checkHref=function(e){if(typeof this.k=="boolean")return this.k;var t=en(e).path;return this.O.some(function(i){return i.exec(t)!==null})},r})(),Dp=(function(r){function e(i){var n;return(n=r.call(this,i)||this).T=new Map,n}Yr(e,r);var t=e.prototype;return t.set=function(i,n,s,o,a){return this.T.set(i,{action:s,request:n,status:o,target:a??i}),{action:s,request:n,status:o,target:a}},t.get=function(i){return this.T.get(i)},t.getRequest=function(i){return this.T.get(i).request},t.getAction=function(i){return this.T.get(i).action},t.getStatus=function(i){return this.T.get(i).status},t.getTarget=function(i){return this.T.get(i).target},t.has=function(i){return!this.checkHref(i)&&this.T.has(i)},t.delete=function(i){return this.T.delete(i)},t.update=function(i,n){var s=Si({},this.T.get(i),n);return this.T.set(i,s),s},e})(Mh),Np=(function(){function r(){this.A=new Map}var e=r.prototype;return e.set=function(t,i){return this.A.set(t,i),{name:i}},e.get=function(t){return this.A.get(t)},e.all=function(){return this.A},e.has=function(t){return this.A.has(t)},e.delete=function(t){return this.A.delete(t)},e.clear=function(){return this.A.clear()},r})(),Op=function(){return!window.history.pushState},Fp=function(r){return!r.el||!r.href},zp=function(r){var e=r.event;return e.which>1||e.metaKey||e.ctrlKey||e.shiftKey||e.altKey},Bp=function(r){var e=r.el;return e.hasAttribute("target")&&e.target==="_blank"},kp=function(r){var e=r.el;return e.protocol!==void 0&&window.location.protocol!==e.protocol||e.hostname!==void 0&&window.location.hostname!==e.hostname},Vp=function(r){var e=r.el;return e.port!==void 0&&Gs()!==Gs(e.href)},Hp=function(r){var e=r.el;return e.getAttribute&&typeof e.getAttribute("download")=="string"},Gp=function(r){return r.el.hasAttribute(Mi.prefix+"-"+Mi.prevent)},Wp=function(r){return!!r.el.closest("["+Mi.prefix+"-"+Mi.prevent+'="all"]')},Xp=function(r){var e=r.href;return xl(e)===xl()&&Gs(e)===Gs()},qp=(function(r){function e(i){var n;return(n=r.call(this,i)||this).suite=[],n.tests=new Map,n.init(),n}Yr(e,r);var t=e.prototype;return t.init=function(){this.add("pushState",Op),this.add("exists",Fp),this.add("newTab",zp),this.add("blank",Bp),this.add("corsDomain",kp),this.add("corsPort",Vp),this.add("download",Hp),this.add("preventSelf",Gp),this.add("preventAll",Wp),this.add("sameUrl",Xp,!1)},t.add=function(i,n,s){s===void 0&&(s=!0),this.tests.set(i,n),s&&this.suite.push(i)},t.run=function(i,n,s,o){return this.tests.get(i)({el:n,event:s,href:o})},t.checkLink=function(i,n,s){var o=this;return this.suite.some(function(a){return o.run(a,i,n,s)})},e})(Mh),_l=(function(r){function e(t,i){var n;return i===void 0&&(i="Barba error"),(n=r.call.apply(r,[this].concat([].slice.call(arguments,2)))||this).error=void 0,n.label=void 0,n.error=t,n.label=i,Error.captureStackTrace&&Error.captureStackTrace(Ep(n),e),n.name="BarbaError",n}return Yr(e,r),e})(yl(Error)),Yp=(function(){function r(t){t===void 0&&(t=[]),this.logger=new _n("@barba/core"),this.all=[],this.page=[],this.once=[],this.j=[{name:"namespace",type:"strings"},{name:"custom",type:"function"}],t&&(this.all=this.all.concat(t)),this.update()}var e=r.prototype;return e.add=function(t,i){t==="rule"?this.j.splice(i.position||0,0,i.value):this.all.push(i),this.update()},e.resolve=function(t,i){var n=this;i===void 0&&(i={});var s=i.once?this.once:this.page;s=s.filter(i.self?function(u){return u.name&&u.name==="self"}:function(u){return!u.name||u.name!=="self"});var o=new Map,a=s.find(function(u){var f=!0,m={};return i.self&&u.name==="self"?(o.set(u,m),!0):(n.j.reverse().forEach(function(v){f&&(f=n.M(u,v,t,m),u.from&&u.to&&(f=n.M(u,v,t,m,"from")&&n.M(u,v,t,m,"to")),u.from&&!u.to&&(f=n.M(u,v,t,m,"from")),!u.from&&u.to&&(f=n.M(u,v,t,m,"to")))}),o.set(u,m),f)}),l=o.get(a),c=[];if(c.push(i.once?"once":"page"),i.self&&c.push("self"),l){var h,d=[a];Object.keys(l).length>0&&d.push(l),(h=this.logger).info.apply(h,["Transition found ["+c.join(",")+"]"].concat(d))}else this.logger.info("No transition found ["+c.join(",")+"]");return a},e.update=function(){var t=this;this.all=this.all.map(function(i){return t.N(i)}).sort(function(i,n){return i.priority-n.priority}).reverse().map(function(i){return delete i.priority,i}),this.page=this.all.filter(function(i){return i.leave!==void 0||i.enter!==void 0}),this.once=this.all.filter(function(i){return i.once!==void 0})},e.M=function(t,i,n,s,o){var a=!0,l=!1,c=t,h=i.name,d=h,u=h,f=h,m=o?c[o]:c,v=o==="to"?n.next:n.current;if(o?m&&m[h]:m[h]){switch(i.type){case"strings":default:var g=Array.isArray(m[d])?m[d]:[m[d]];v[d]&&g.indexOf(v[d])!==-1&&(l=!0),g.indexOf(v[d])===-1&&(a=!1);break;case"object":var p=Array.isArray(m[u])?m[u]:[m[u]];v[u]?(v[u].name&&p.indexOf(v[u].name)!==-1&&(l=!0),p.indexOf(v[u].name)===-1&&(a=!1)):a=!1;break;case"function":m[f](n)?l=!0:a=!1}l&&(o?(s[o]=s[o]||{},s[o][h]=c[o][h]):s[h]=c[h])}return a},e.S=function(t,i,n){var s=0;return(t[i]||t.from&&t.from[i]||t.to&&t.to[i])&&(s+=Math.pow(10,n),t.from&&t.from[i]&&(s+=1),t.to&&t.to[i]&&(s+=2)),s},e.N=function(t){var i=this;t.priority=0;var n=0;return this.j.forEach(function(s,o){n+=i.S(t,s.name,o+1)}),t.priority=n,t},r})();function Ws(r,e){try{var t=r()}catch(i){return e(i)}return t&&t.then?t.then(void 0,e):t}var $p=(function(){function r(t){t===void 0&&(t=[]),this.logger=new _n("@barba/core"),this.store=void 0,this.C=!1,this.store=new Yp(t)}var e=r.prototype;return e.get=function(t,i){return this.store.resolve(t,i)},e.doOnce=function(t){var i=t.data,n=t.transition;try{var s=function(){o.C=!1},o=this,a=n||{};o.C=!0;var l=Ws(function(){return Promise.resolve(o.L("beforeOnce",i,a)).then(function(){return Promise.resolve(o.once(i,a)).then(function(){return Promise.resolve(o.L("afterOnce",i,a)).then(function(){})})})},function(c){o.C=!1,o.logger.debug("Transition error [before/after/once]"),o.logger.error(c)});return Promise.resolve(l&&l.then?l.then(s):s())}catch(c){return Promise.reject(c)}},e.doPage=function(t){var i=t.data,n=t.transition,s=t.page,o=t.wrapper;try{var a=function(u){l.C=!1},l=this,c=n||{},h=c.sync===!0||!1;l.C=!0;var d=Ws(function(){function u(){return Promise.resolve(l.L("before",i,c)).then(function(){function m(g){return Promise.resolve(l.remove(i)).then(function(){return Promise.resolve(l.L("after",i,c)).then(function(){})})}var v=(function(){if(h)return Ws(function(){return Promise.resolve(l.add(i,o)).then(function(){return Promise.resolve(l.L("beforeLeave",i,c)).then(function(){return Promise.resolve(l.L("beforeEnter",i,c)).then(function(){return Promise.resolve(Promise.all([l.leave(i,c),l.enter(i,c)])).then(function(){return Promise.resolve(l.L("afterLeave",i,c)).then(function(){return Promise.resolve(l.L("afterEnter",i,c)).then(function(){})})})})})})},function(y){if(l.H(y))throw new _l(y,"Transition error [sync]")});var g=function(y){return Ws(function(){var _=(function(){if(p!==!1)return Promise.resolve(l.add(i,o)).then(function(){return Promise.resolve(l.L("beforeEnter",i,c)).then(function(){return Promise.resolve(l.enter(i,c,p)).then(function(){return Promise.resolve(l.L("afterEnter",i,c)).then(function(){})})})})})();if(_&&_.then)return _.then(function(){})},function(_){if(l.H(_))throw new _l(_,"Transition error [before/after/enter]")})},p=!1,x=Ws(function(){return Promise.resolve(l.L("beforeLeave",i,c)).then(function(){return Promise.resolve(Promise.all([l.leave(i,c),$r(s,i)]).then(function(y){return y[0]})).then(function(y){return p=y,Promise.resolve(l.L("afterLeave",i,c)).then(function(){})})})},function(y){if(l.H(y))throw new _l(y,"Transition error [before/after/leave]")});return x&&x.then?x.then(g):g()})();return v&&v.then?v.then(m):m()})}var f=(function(){if(h)return Promise.resolve($r(s,i)).then(function(){})})();return f&&f.then?f.then(u):u()},function(u){throw l.C=!1,u.name&&u.name==="BarbaError"?(l.logger.debug(u.label),l.logger.error(u.error),u):(l.logger.debug("Transition error [page]"),l.logger.error(u),u)});return Promise.resolve(d&&d.then?d.then(a):a())}catch(u){return Promise.reject(u)}},e.once=function(t,i){try{return Promise.resolve(tn.do("once",t,i)).then(function(){return i.once?rs(i.once,i)(t):Promise.resolve()})}catch(n){return Promise.reject(n)}},e.leave=function(t,i){try{return Promise.resolve(tn.do("leave",t,i)).then(function(){return i.leave?rs(i.leave,i)(t):Promise.resolve()})}catch(n){return Promise.reject(n)}},e.enter=function(t,i,n){try{return Promise.resolve(tn.do("enter",t,i)).then(function(){return i.enter?rs(i.enter,i)(t,n):Promise.resolve()})}catch(s){return Promise.reject(s)}},e.add=function(t,i){try{return bn.addContainer(t.next.container,i),tn.do("nextAdded",t),Promise.resolve()}catch(n){return Promise.reject(n)}},e.remove=function(t){try{return bn.removeContainer(t.current.container),tn.do("currentRemoved",t),Promise.resolve()}catch(i){return Promise.reject(i)}},e.H=function(t){return t.message?!/Timeout error|Fetch error/.test(t.message):!t.status},e.L=function(t,i,n){try{return Promise.resolve(tn.do(t,i,n)).then(function(){return n[t]?rs(n[t],n)(i):Promise.resolve()})}catch(s){return Promise.reject(s)}},ml(r,[{key:"isRunning",get:function(){return this.C},set:function(t){this.C=t}},{key:"hasOnce",get:function(){return this.store.once.length>0}},{key:"hasSelf",get:function(){return this.store.all.some(function(t){return t.name==="self"})}},{key:"shouldWait",get:function(){return this.store.all.some(function(t){return t.to&&!t.to.route||t.sync})}}]),r})(),Zp=(function(){function r(e){var t=this;this.names=["beforeLeave","afterLeave","beforeEnter","afterEnter"],this.byNamespace=new Map,e.length!==0&&(e.forEach(function(i){t.byNamespace.set(i.namespace,i)}),this.names.forEach(function(i){tn[i](t._(i))}))}return r.prototype._=function(e){var t=this;return function(i){var n=e.match(/enter/i)?i.next:i.current,s=t.byNamespace.get(n.namespace);return s&&s[e]?rs(s[e],s)(i):Promise.resolve()}},r})();Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector),Element.prototype.closest||(Element.prototype.closest=function(r){var e=this;do{if(e.matches(r))return e;e=e.parentElement||e.parentNode}while(e!==null&&e.nodeType===1);return null});var jp={container:null,html:"",namespace:"",url:{hash:"",href:"",path:"",port:null,query:{}}},bl=new((function(){function r(){this.version="2.10.3",this.schemaPage=jp,this.Logger=_n,this.logger=new _n("@barba/core"),this.plugins=[],this.timeout=void 0,this.cacheIgnore=void 0,this.cacheFirstPage=void 0,this.prefetchIgnore=void 0,this.preventRunning=void 0,this.hooks=tn,this.cache=void 0,this.headers=void 0,this.prevent=void 0,this.transitions=void 0,this.views=void 0,this.dom=bn,this.helpers=Pp,this.history=_h,this.request=Lp,this.url=Ip,this.D=void 0,this.B=void 0,this.q=void 0,this.F=void 0}var e=r.prototype;return e.use=function(t,i){var n=this.plugins;n.indexOf(t)>-1?this.logger.warn("Plugin ["+t.name+"] already installed."):typeof t.install=="function"?(t.install(this,i),n.push(t)):this.logger.warn("Plugin ["+t.name+'] has no "install" method.')},e.init=function(t){var i=t===void 0?{}:t,n=i.transitions,s=n===void 0?[]:n,o=i.views,a=o===void 0?[]:o,l=i.schema,c=l===void 0?Mi:l,h=i.requestError,d=i.timeout,u=d===void 0?2e3:d,f=i.cacheIgnore,m=f!==void 0&&f,v=i.cacheFirstPage,g=v!==void 0&&v,p=i.prefetchIgnore,x=p!==void 0&&p,y=i.preventRunning,_=y!==void 0&&y,C=i.prevent,T=C===void 0?null:C,A=i.debug,I=i.logLevel;if(_n.setLevel((A!==void 0&&A)===!0?"debug":I===void 0?"off":I),this.logger.info(this.version),Object.keys(c).forEach(function(L){Mi[L]&&(Mi[L]=c[L])}),this.B=h,this.timeout=u,this.cacheIgnore=m,this.cacheFirstPage=g,this.prefetchIgnore=x,this.preventRunning=_,this.q=this.dom.getWrapper(),!this.q)throw new Error("[@barba/core] No Barba wrapper found");this.I();var S=this.data.current;if(!S.container)throw new Error("[@barba/core] No Barba container found");if(this.cache=new Dp(m),this.headers=new Np,this.prevent=new qp(x),this.transitions=new $p(s),this.views=new Zp(a),T!==null){if(typeof T!="function")throw new Error("[@barba/core] Prevent should be a function");this.prevent.add("preventCustom",T)}this.history.init(S.url.href,S.namespace),g&&this.cache.set(S.url.href,Promise.resolve({html:S.html,url:S.url}),"init","fulfilled"),this.U=this.U.bind(this),this.$=this.$.bind(this),this.X=this.X.bind(this),this.G(),this.plugins.forEach(function(L){return L.init()});var b=this.data;b.trigger="barba",b.next=b.current,b.current=Si({},this.schemaPage),this.hooks.do("ready",b),this.once(b),this.I()},e.destroy=function(){this.I(),this.J(),this.history.clear(),this.hooks.clear(),this.plugins=[]},e.force=function(t){window.location.assign(t)},e.go=function(t,i,n){var s;if(i===void 0&&(i="barba"),this.F=null,this.transitions.isRunning)this.force(t);else if(!(s=i==="popstate"?this.history.current&&this.url.getPath(this.history.current.url)===this.url.getPath(t)&&this.url.getQuery(this.history.current.url,!0)===this.url.getQuery(t,!0):this.prevent.run("sameUrl",null,null,t))||this.transitions.hasSelf)return i=this.history.change(this.cache.has(t)?this.cache.get(t).target:t,i,n),n&&(n.stopPropagation(),n.preventDefault()),this.page(t,i,n??void 0,s)},e.once=function(t){try{var i=this;return Promise.resolve(i.hooks.do("beforeEnter",t)).then(function(){function n(){return Promise.resolve(i.hooks.do("afterEnter",t)).then(function(){})}var s=(function(){if(i.transitions.hasOnce){var o=i.transitions.get(t,{once:!0});return Promise.resolve(i.transitions.doOnce({transition:o,data:t})).then(function(){})}})();return s&&s.then?s.then(n):n()})}catch(n){return Promise.reject(n)}},e.page=function(t,i,n,s){try{var o,a=function(){var d=l.data;return Promise.resolve(l.hooks.do("page",d)).then(function(){var u=(function(f,m){try{var v=(g=l.transitions.get(d,{once:!1,self:s}),Promise.resolve(l.transitions.doPage({data:d,page:o,transition:g,wrapper:l.q})).then(function(){l.I()}))}catch{return m()}var g;return v&&v.then?v.then(void 0,m):v})(0,function(){_n.getLevel()===0&&l.force(d.next.url.href)});if(u&&u.then)return u.then(function(){})})},l=this;if(l.data.next.url=Si({href:t},l.url.parse(t)),l.data.trigger=i,l.data.event=n,l.cache.has(t))o=l.cache.update(t,{action:"click"}).request;else{var c=l.request(t,l.timeout,l.onRequestError.bind(l,i),l.cache,l.headers);c.then(function(d){d.url.href!==t&&l.history.add(d.url.href,i,"replace")}),o=l.cache.set(t,c,"click","pending").request}var h=(function(){if(l.transitions.shouldWait)return Promise.resolve($r(o,l.data)).then(function(){})})();return Promise.resolve(h&&h.then?h.then(a):a())}catch(d){return Promise.reject(d)}},e.onRequestError=function(t){this.transitions.isRunning=!1;var i=[].slice.call(arguments,1),n=i[0],s=i[1],o=this.cache.getAction(n);return this.cache.delete(n),this.B&&this.B(t,o,n,s)===!1||o==="click"&&this.force(n),!1},e.prefetch=function(t){var i=this;t=this.url.getAbsoluteHref(t),this.cache.has(t)||this.cache.set(t,this.request(t,this.timeout,this.onRequestError.bind(this,"barba"),this.cache,this.headers).catch(function(n){i.logger.error(n)}),"prefetch","pending")},e.G=function(){this.prefetchIgnore!==!0&&(document.addEventListener("mouseover",this.U),document.addEventListener("touchstart",this.U)),document.addEventListener("click",this.$),window.addEventListener("popstate",this.X)},e.J=function(){this.prefetchIgnore!==!0&&(document.removeEventListener("mouseover",this.U),document.removeEventListener("touchstart",this.U)),document.removeEventListener("click",this.$),window.removeEventListener("popstate",this.X)},e.U=function(t){var i=this,n=this.W(t);if(n){var s=this.url.getAbsoluteHref(this.dom.getHref(n));this.prevent.checkHref(s)||this.cache.has(s)||this.cache.set(s,this.request(s,this.timeout,this.onRequestError.bind(this,n),this.cache,this.headers).catch(function(o){i.logger.error(o)}),"enter","pending")}},e.$=function(t){var i=this.W(t);if(i){if(this.transitions.isRunning&&this.preventRunning)return t.preventDefault(),void t.stopPropagation();this.F=t,this.go(this.dom.getHref(i),i,t)}},e.X=function(t){this.go(this.url.getHref(),"popstate",t)},e.W=function(t){for(var i=t.target;i&&!this.dom.getHref(i);)i=i.parentNode;if(i&&!this.prevent.checkLink(i,t,this.dom.getHref(i)))return i},e.I=function(){var t=this.url.getHref(),i={container:this.dom.getContainer(),html:this.dom.getHtml(),namespace:this.dom.getNamespace(),url:Si({href:t},this.url.parse(t))};this.D={current:i,event:void 0,next:Si({},this.schemaPage),trigger:void 0},this.hooks.do("reset",this.data)},ml(r,[{key:"data",get:function(){return this.D}},{key:"wrapper",get:function(){return this.q}}]),r})()),Jp=window.requestIdleCallback||function(r){var e=Date.now();return setTimeout(function(){r({didTimeout:!1,timeRemaining:function(){return Math.max(0,50-(Date.now()-e))}})},1)},Kp=new((function(){function r(){this.name="@barba/prefetch",this.version="2.2.0",this.barba=void 0,this.logger=void 0,this.observer=void 0,this.root=void 0,this.timeout=void 0,this.limit=void 0,this.toPrefetch=new Set}var e=r.prototype;return e.install=function(t,i){var n=i===void 0?{}:i,s=n.root,o=s===void 0?document.body:s,a=n.timeout,l=a===void 0?2e3:a,c=n.limit,h=c===void 0?0:c;this.logger=new t.Logger(this.name),this.logger.info(this.version),this.barba=t,this.root=o,this.timeout=l,this.limit=h},e.init=function(){var t=this;this.barba.prefetchIgnore?this.logger.warn("barba.prefetchIgnore is enabled"):this.barba.cacheIgnore?this.logger.warn("barba.cacheIgnore is enabled"):(this.observer=new IntersectionObserver(function(i){i.forEach(function(n){if(n.isIntersecting){var s=n.target,o=t.barba.url.getAbsoluteHref(t.barba.dom.getHref(s));t.toPrefetch.has(o)&&(t.observer.unobserve(s),t.barba.cache.has(o)?t.barba.cache.update(o,{action:"prefetch"}):t.barba.cache.set(o,t.barba.request(o,t.barba.timeout,t.barba.onRequestError.bind(t.barba,"barba"),t.barba.cache,t.barba.headers).catch(function(a){t.logger.error(a)}),"prefetch","pending"))}})}),this.observe(),this.barba.hooks.after(this.observe,this))},e.observe=function(){var t=this;Jp(function(){var i=Array.from(t.root.querySelectorAll("a"));t.limit>0&&(i=i.slice(0,t.limit)),i.forEach(function(n){var s=n,o=t.barba.dom.getHref(s);t.barba.cache.has(o)||t.barba.prevent.checkHref(o)||t.barba.prevent.checkLink(s,{},o)||(t.observer.observe(n),t.toPrefetch.add(o))})},{timeout:this.timeout})},r})());class wn{constructor(){this.callbacks={},this.callbacks.base={}}on(e,t){return typeof e>"u"||e===""?(console.warn("wrong names"),!1):typeof t>"u"?(console.warn("wrong callback"),!1):(this.resolveNames(e).forEach(n=>{const s=this.resolveName(n);this.callbacks[s.namespace]instanceof Object||(this.callbacks[s.namespace]={}),this.callbacks[s.namespace][s.value]instanceof Array||(this.callbacks[s.namespace][s.value]=[]),this.callbacks[s.namespace][s.value].push(t)}),this)}once(e,t){if(typeof e>"u"||e==="")return console.warn("wrong names"),!1;if(typeof t>"u")return console.warn("wrong callback"),!1;const i=(...n)=>{this.off(e),t.apply(this,n)};return this.on(e,i)}off(e){return typeof e>"u"||e===""?(console.warn("wrong name"),!1):(this.resolveNames(e).forEach(i=>{const n=this.resolveName(i);if(n.namespace!=="base"&&n.value==="")delete this.callbacks[n.namespace];else if(n.namespace==="base")for(const s in this.callbacks)this.callbacks[s]instanceof Object&&this.callbacks[s][n.value]instanceof Array&&(delete this.callbacks[s][n.value],Object.keys(this.callbacks[s]).length===0&&delete this.callbacks[s]);else this.callbacks[n.namespace]instanceof Object&&this.callbacks[n.namespace][n.value]instanceof Array&&(delete this.callbacks[n.namespace][n.value],Object.keys(this.callbacks[n.namespace]).length===0&&delete this.callbacks[n.namespace])}),this)}trigger(e,t){if(typeof e>"u"||e==="")return console.warn("wrong name"),!1;let i=null;const n=t instanceof Array?t:[];let s=this.resolveNames(e);if(s=this.resolveName(s[0]),s.namespace==="base")for(const o in this.callbacks)this.callbacks[o]instanceof Object&&this.callbacks[o][s.value]instanceof Array&&this.callbacks[o][s.value].forEach(function(a){a.apply(this,n)});else if(this.callbacks[s.namespace]instanceof Object){if(s.value==="")return console.warn("wrong name"),this;this.callbacks[s.namespace][s.value].forEach(function(o){o.apply(this,n)})}return i}resolveNames(e){let t=e;return t=t.replace(/[^a-zA-Z0-9 ,/.]/g,""),t=t.replace(/[,/]+/g," "),t=t.split(" "),t}resolveName(e){const t={},i=e.split(".");return t.original=e,t.value=i[0],t.namespace="base",i.length>1&&i[1]!==""&&(t.namespace=i[1]),t}}const Qp=(r=document)=>r.documentElement.getAttribute("data-wf-site"),em=async r=>{const{Webflow:e}=window;if(!(!e||!("destroy"in e)||!("ready"in e)||!("require"in e))){e.destroy(),e.ready();{const t=e.require("ix2");if(t){const{store:i,actions:n}=t,{eventState:s}=i.getState().ixSession,o=Object.entries(s);t.destroy(),t.init(),await Promise.all(o.map(a=>i.dispatch(n.eventStateChanged(...a))))}}{const t=e.require("commerce"),i=Qp();t&&i&&(t.destroy(),t.init({siteId:i,apiUrl:"https://render.webflow.com"}))}return new Promise(t=>e.push(()=>t(void 0)))}},tm=async r=>{window.Webflow||(window.Webflow=[]),window.Webflow.push(async()=>{em()})},Th=(r,e,t)=>({name:r,async leave(n){const s=this.async(),o=await Oe(()=>Promise.resolve().then(()=>cm),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href);new o.default(n,s,e)},async enter(n){const s=await Oe(()=>Promise.resolve().then(()=>um),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href);new s.default(n,t,e)}}),im=(r,e)=>({name:"case-transition",from:{namespace:["home","services","cases","fintech","case-inner"]},to:{namespace:["case-inner"]},async leave(t){var o;if(((o=t.next)==null?void 0:o.namespace)!=="case-inner")return;const n=this.async(),s=await Oe(()=>Promise.resolve().then(()=>fm),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href);new s.default(t,n,e,r)}}),Zr=async(r,e)=>{const i=(e||document.querySelector("main")).getAttribute("data-transition-page");if(r.pagesLoaded&&r.pagesLoaded.has(i))return r.page;switch(i){case"home":{const n=await Oe(()=>Promise.resolve().then(()=>vm),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href);return r.page=new n.default(e,r),r.pagesLoaded&&r.pagesLoaded.add(i),r.page}case"cases":{const n=await Oe(()=>Promise.resolve().then(()=>_m),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href);return r.page=new n.default(e,r),r.pagesLoaded&&r.pagesLoaded.add(i),r.page}case"case-inner":{const n=await Oe(()=>Promise.resolve().then(()=>wm),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href);return r.page=new n.default(e,r),r.pagesLoaded&&r.pagesLoaded.add(i),r.page}case"services":{const n=await Oe(()=>Promise.resolve().then(()=>Mm),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href);return r.page=new n.default(e,r),r.pagesLoaded&&r.pagesLoaded.add(i),r.page}case"fintech":{const n=await Oe(()=>Promise.resolve().then(()=>Am),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href);return r.page=new n.default(e,r),r.pagesLoaded&&r.pagesLoaded.add(i),r.page}}};function nm(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var wl={exports:{}},Ah;function sm(){return Ah||(Ah=1,(function(r){(function(){function e(v,g){document.addEventListener?v.addEventListener("scroll",g,!1):v.attachEvent("scroll",g)}function t(v){document.body?v():document.addEventListener?document.addEventListener("DOMContentLoaded",function g(){document.removeEventListener("DOMContentLoaded",g),v()}):document.attachEvent("onreadystatechange",function g(){(document.readyState=="interactive"||document.readyState=="complete")&&(document.detachEvent("onreadystatechange",g),v())})}function i(v){this.g=document.createElement("div"),this.g.setAttribute("aria-hidden","true"),this.g.appendChild(document.createTextNode(v)),this.h=document.createElement("span"),this.i=document.createElement("span"),this.m=document.createElement("span"),this.j=document.createElement("span"),this.l=-1,this.h.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;",this.i.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;",this.j.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;",this.m.style.cssText="display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;",this.h.appendChild(this.m),this.i.appendChild(this.j),this.g.appendChild(this.h),this.g.appendChild(this.i)}function n(v,g){v.g.style.cssText="max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;white-space:nowrap;font-synthesis:none;font:"+g+";"}function s(v){var g=v.g.offsetWidth,p=g+100;return v.j.style.width=p+"px",v.i.scrollLeft=p,v.h.scrollLeft=v.h.scrollWidth+100,v.l!==g?(v.l=g,!0):!1}function o(v,g){function p(){var y=x;s(y)&&y.g.parentNode!==null&&g(y.l)}var x=v;e(v.h,p),e(v.i,p),s(v)}function a(v,g,p){g=g||{},p=p||window,this.family=v,this.style=g.style||"normal",this.weight=g.weight||"normal",this.stretch=g.stretch||"normal",this.context=p}var l=null,c=null,h=null,d=null;function u(v){return c===null&&(f(v)&&/Apple/.test(window.navigator.vendor)?(v=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))(?:\.([0-9]+))/.exec(window.navigator.userAgent),c=!!v&&603>parseInt(v[1],10)):c=!1),c}function f(v){return d===null&&(d=!!v.document.fonts),d}function m(v,g){var p=v.style,x=v.weight;if(h===null){var y=document.createElement("div");try{y.style.font="condensed 100px sans-serif"}catch{}h=y.style.font!==""}return[p,x,h?v.stretch:"","100px",g].join(" ")}a.prototype.load=function(v,g){var p=this,x=v||"BESbswy",y=0,_=g||3e3,C=new Date().getTime();return new Promise(function(T,A){if(f(p.context)&&!u(p.context)){var I=new Promise(function(b,L){function D(){new Date().getTime()-C>=_?L(Error(""+_+"ms timeout exceeded")):p.context.document.fonts.load(m(p,'"'+p.family+'"'),x).then(function(F){1<=F.length?b():setTimeout(D,25)},L)}D()}),S=new Promise(function(b,L){y=setTimeout(function(){L(Error(""+_+"ms timeout exceeded"))},_)});Promise.race([S,I]).then(function(){clearTimeout(y),T(p)},A)}else t(function(){function b(){var Me;(Me=Y!=-1&&H!=-1||Y!=-1&&Q!=-1||H!=-1&&Q!=-1)&&((Me=Y!=H&&Y!=Q&&H!=Q)||(l===null&&(Me=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent),l=!!Me&&(536>parseInt(Me[1],10)||parseInt(Me[1],10)===536&&11>=parseInt(Me[2],10))),Me=l&&(Y==q&&H==q&&Q==q||Y==te&&H==te&&Q==te||Y==ce&&H==ce&&Q==ce)),Me=!Me),Me&&(fe.parentNode!==null&&fe.parentNode.removeChild(fe),clearTimeout(y),T(p))}function L(){if(new Date().getTime()-C>=_)fe.parentNode!==null&&fe.parentNode.removeChild(fe),A(Error(""+_+"ms timeout exceeded"));else{var Me=p.context.document.hidden;(Me===!0||Me===void 0)&&(Y=D.g.offsetWidth,H=F.g.offsetWidth,Q=B.g.offsetWidth,b()),y=setTimeout(L,50)}}var D=new i(x),F=new i(x),B=new i(x),Y=-1,H=-1,Q=-1,q=-1,te=-1,ce=-1,fe=document.createElement("div");fe.dir="ltr",n(D,m(p,"sans-serif")),n(F,m(p,"serif")),n(B,m(p,"monospace")),fe.appendChild(D.g),fe.appendChild(F.g),fe.appendChild(B.g),p.context.document.body.appendChild(fe),q=D.g.offsetWidth,te=F.g.offsetWidth,ce=B.g.offsetWidth,L(),o(D,function(Me){Y=Me,b()}),n(D,m(p,'"'+p.family+'",sans-serif')),o(F,function(Me){H=Me,b()}),n(F,m(p,'"'+p.family+'",serif')),o(B,function(Me){Q=Me,b()}),n(B,m(p,'"'+p.family+'",monospace'))})})},r.exports=a})()})(wl)),wl.exports}var rm=sm();const om=nm(rm);let Sl=null;class am extends wn{constructor(){if(Sl)return Sl;super(),Sl=this,this.app=null,this.initialized=!1,this.pagesLoaded=new Set,history.scrollRestoration="manual",this.font=new om("Saans"),this.font.load(null,8e3).then(()=>this.init(),()=>this.init())}init(){bl.use(Kp),bl.init({schema:{prefix:"data-transition",namespace:"page"},debug:!0,timeout:7e3,prevent:({el:e,event:t})=>{if(t.type=="click"&&(t.preventDefault(),t.stopPropagation(),e.classList.contains("go")&&(window.location=e.href),e.classList.contains("prevent")||e.href.includes("#")))return!0},transitions:[{name:"once",once:({next:e})=>this.onceLoad(e)},im(this,Zr),Th("transition",this,Zr),Th("self",this,Zr)]}),bl.hooks.enter(async e=>{this.pagesLoaded&&this.pagesLoaded.clear(),await tm()})}async loadMainComponentsOnce(e,t){if(t.initialized){console.warn("App already initialized, skipping duplicate initialization");return}t.initialized=!0,t.onceLoaded=!1,t.moduleLoaded=!1;const[i,n,s,o,a,l,c,h,d]=await Promise.all([Oe(()=>Promise.resolve().then(()=>Hm),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),Oe(()=>Promise.resolve().then(()=>Wm),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),Oe(()=>Promise.resolve().then(()=>qm),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),Oe(()=>Promise.resolve().then(()=>Zm),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),Oe(()=>Promise.resolve().then(()=>Jm),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),Oe(()=>Promise.resolve().then(()=>Qm),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),Oe(()=>Promise.resolve().then(()=>tg),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),Oe(()=>Promise.resolve().then(()=>Qw),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),Oe(()=>Promise.resolve().then(()=>tS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href)]);t.scroll=new i.default,t.sizes=new n.default,t.tick=new s.default,t.moduleLoader=new o.default(t),t.observer=new a.default,t.animationObserver=new l.default,t.debug=new c.default,t.nav=new d.default(t),await Zr(t,e),t.gl=new h.default(document.querySelector(".canvas"),t,e),await t.moduleLoader.loadModules(e),t.moduleLoader.on("loaded",()=>{t.trigger("modulesLoaded"),t.moduleLoaded=!0}),t.sizes.on("resize",()=>t.trigger("resize")),t.tick.on("tick",()=>t.trigger("tick"))}async onceLoad(e){this.once=await Oe(()=>Promise.resolve().then(()=>nS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href).then(t=>new t.default(e,this.loadMainComponentsOnce,this))}}new am;class lm{constructor(e,t,i){this.app=i,this.container=e.current.container,this.scroll=this.app.scroll.lenis,this.loader=document.querySelector(".loader"),this.loader.classList.remove("hidden"),this.nav=document.querySelector(".nav"),this.nav.classList.remove("active"),gsap.set(this.loader,{"--clip":0,"--leftClip":100,"--bottomClip":0}),this.scroll.stop(),gsap.to(this.loader,{"--leftClip":0,onComplete:()=>{this.app.trigger("destroy"),this.app.gl.loaded=!1,ScrollTrigger.killAll(),t(),this.app.onceLoaded=!0,this.app.scroll.destroy(),window.scrollTo(0,0)}})}}const cm=Object.freeze(Object.defineProperty({__proto__:null,default:lm},Symbol.toStringTag,{value:"Module"}));class hm{constructor(e,t,i){this.app=i,this.container=e.next.container,this.checkPages=t,this.data=e,this.loader=document.querySelector(".loader"),this.once=!1,gsap.set(this.loader,{"--clip":0,"--leftClip":0,"--bottomClip":0}),this.tl=gsap.timeline({paused:!0,defaults:{duration:.8,ease:"power2.inOut"}}),this.app.enterPage=this,this.tl.to(this.loader,{"--clip":100,onComplete:()=>this.complete()}),this.start()}complete(){this.loader.classList.add("hidden")}start(){gsap.set(this.container,{autoAlpha:1}),document.documentElement.style.scrollBehavior="instant",window.scrollTo({top:0,left:0,behavior:"instant"}),requestAnimationFrame(()=>{window.scrollTo({top:0,left:0,behavior:"instant"}),requestAnimationFrame(()=>{window.scrollTo({top:0,left:0,behavior:"instant"}),document.documentElement.style.scrollBehavior=""})}),window.innerWidth>992?(this.app.gl.loadWorld(this.container),this.app.on("loadedWorld",async()=>{this.once||(this.checkPages(this.app,this.container),await this.app.moduleLoader.loadModules(this.container),await new Promise(e=>setTimeout(e,50)),this.app.scroll.init(),this.app.scroll.lenis.on("scroll",e=>this.app.gl.setScroll(e)),this.tl.play(),this.once=!0)})):(async()=>(this.checkPages(this.app,this.container),await this.app.moduleLoader.loadModules(this.container),await new Promise(e=>setTimeout(e,50)),this.app.scroll.init(),this.app.scroll.lenis.on("scroll",e=>this.app.gl.setScroll(e)),this.tl.play()))(),ScrollTrigger.refresh()}}const um=Object.freeze(Object.defineProperty({__proto__:null,default:hm},Symbol.toStringTag,{value:"Module"}));class dm{constructor(e,t,i,n){this.app=n,this.data=e,this.checkPages=i,this.done=t,this.container=e.next.container,this.scroll=this.app.scroll.lenis,this.loader=document.querySelector(".loader"),this.nav=document.querySelector(".nav"),this.loaderLayers=this.loader.querySelectorAll(".loader_layer"),this.loaderLogo=this.loader.querySelector(".loader_logo"),this.init()}init(){this.scroll.stop(),this.loader.classList.remove("hidden"),this.nav.classList.remove("active"),this.loaderLogo&&(this.loaderLogo.style.opacity="0"),this.loader.querySelectorAll(".loader_logo").forEach(n=>n.style.opacity="0"),this.createBasisText(),this.loader.classList.add("bottom-transition");const t=this.loader.querySelector(".loader_layer:nth-child(2) .loader_layer-bg");t&&(t.style.backgroundColor="var(--color--dark-grey)"),gsap.set(this.loader,{"--topClip":0,"--bottomClip":100,"--clip":0,"--leftClip":0});const i=this.loader.querySelector(".loader_basis_svg");gsap.to(this.loader,{"--bottomClip":0,duration:.8,ease:"power2.inOut",onComplete:()=>this.leave()}),i&&gsap.to(i,{y:0,duration:1,ease:"power2.inOut"})}createBasisText(){if(!this.loader.querySelector(".loader_basis_svg")){const e=document.createElement("div");e.className="loader_basis_wrapper";const t=document.createElement("div");t.className="loader_basis_svg",t.innerHTML=`
        <svg width="100%" height="100%" viewBox="0 0 117 17" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M0 0.747025H20.1784C23.5559 0.747025 25.2879 2.33664 25.2879 4.98601C25.2879 6.84056 24.4219 8.16524 22.863 8.6068C24.5951 9.04836 25.4611 10.2847 25.4611 12.1393C25.4611 14.7886 23.7291 16.5549 20.1784 16.5549H0V0.747025ZM19.2257 6.66394C20.0918 6.66394 20.3516 6.31069 20.3516 5.6925C20.3516 5.07432 20.0918 4.72107 19.2257 4.72107H4.93634V6.66394H19.2257ZM19.3989 12.4925C20.265 12.4925 20.5248 12.1393 20.5248 11.5211C20.5248 10.9029 20.265 10.5497 19.3989 10.5497H4.93634V12.4925H19.3989Z" fill="#FFFFFF"></path>
          <path d="M36.8932 0.747025H44.4276L56.1189 16.4666H50.2299L47.4587 12.7575H33.6023L30.831 16.4666H25.1152L36.8932 0.747025ZM44.6874 8.96005L40.4439 3.21976L36.2003 8.96005H44.6874Z" fill="#FFFFFF"></path>
          <path d="M55.5977 11.4339H60.967C61.1402 12.2287 61.833 12.5819 62.5259 12.5819H75.6894C76.5555 12.5819 76.8153 12.2287 76.8153 11.6988C76.8153 11.1689 76.4689 10.8157 75.6894 10.8157L61.3134 10.6391C57.8493 10.5508 55.6843 8.6962 55.6843 5.7819C55.6843 2.8676 57.8493 0.836426 61.4 0.836426H75.4296C79.1535 0.836426 81.5784 3.04423 81.7516 5.87022H76.2956C76.209 5.07541 75.5162 4.81047 74.91 4.81047H62.1794C61.4 4.81047 60.967 5.16372 60.967 5.69359C60.967 6.22346 61.4 6.57671 62.1794 6.57671L76.6421 6.84165C80.1928 6.92996 82.1846 8.78451 82.1846 11.6988C82.1846 14.5248 80.1928 16.6443 76.5555 16.6443H62.1794C58.3689 16.4677 55.7709 14.3482 55.5977 11.4339Z" fill="#FFFFFF"></path>
          <path d="M83.4854 0.747025H88.5949V16.4666H83.4854V0.747025Z" fill="#FFFFFF"></path>
          <path d="M90.5 11.4328H95.8693C96.0426 12.2276 96.7354 12.5809 97.4282 12.5809H110.592C111.458 12.5809 111.718 12.2276 111.718 11.6978C111.718 11.1679 111.371 10.8147 110.592 10.8147L96.1292 10.5497C92.6651 10.4614 90.5 8.60685 90.5 5.69255C90.5 2.77825 92.6651 0.74707 96.2158 0.74707H110.245C113.969 0.74707 116.394 2.95487 116.567 5.78086H111.111C111.025 4.98605 110.332 4.72112 109.726 4.72112H96.9952C96.2158 4.72112 95.7827 5.07436 95.7827 5.60424C95.7827 6.13411 96.2158 6.48736 96.9952 6.48736L111.458 6.75229C115.008 6.84061 117 8.69516 117 11.6095C117 14.4354 115.008 16.5549 111.371 16.5549H96.9952C93.1847 16.4666 90.5866 14.3471 90.5 11.4328Z" fill="#FFFFFF"></path>
        </svg>
      `;const i=window.innerWidth<=992;e.style.cssText=`
                position: absolute;
                ${i?"top: 90%; left: 50%; transform: translate(-50%, -50%);":"bottom: 2rem; left: 50%; transform: translateX(-50%);"}
                width: 90vw;
                height: auto;
                z-index: 10;
                aspect-ratio: 117 / 17;
                overflow: hidden;
            `,t.style.cssText=`
                width: 100%;
                height: 100%;
                transform: translateY(-120%);
            `,e.appendChild(t),this.loaderLayers[1].appendChild(e.cloneNode(!0))}}leave(){this.app.trigger("destroy"),this.app.gl.loaded=!1,ScrollTrigger.killAll(),this.done(),this.app.onceLoaded=!0,this.app.scroll.destroy(),window.scrollTo(0,0),this.enter()}enter(){gsap.set(this.container,{autoAlpha:1}),this.loader.classList.add("bottom-transition"),gsap.set(this.loader,{"--topClip":0,"--bottomClip":0,"--clip":0,"--leftClip":0}),this.loaderLogo&&(this.loaderLogo.style.opacity="0"),document.documentElement.style.scrollBehavior="instant",window.scrollTo({top:0,left:0,behavior:"instant"}),requestAnimationFrame(()=>{window.scrollTo({top:0,left:0,behavior:"instant"}),requestAnimationFrame(()=>{window.scrollTo({top:0,left:0,behavior:"instant"}),document.documentElement.style.scrollBehavior=""})});const e=this.loader.querySelector(".loader_basis_svg");e&&gsap.set(e,{y:-120}),window.innerWidth>992?(this.app.gl.loadWorld(this.container),this.app.on("loadedWorld",()=>this.complete())):this.complete()}async complete(){this.checkPages(this.app,this.container),await this.app.moduleLoader.loadModules(this.container),await new Promise(t=>setTimeout(t,50)),this.app.scroll.init(),this.app.scroll.lenis.on("scroll",t=>this.app.gl.setScroll(t));const e=this.loader.querySelector(".loader_basis_svg");e&&gsap.to(e,{y:0,duration:.4,ease:"power2.out",delay:.2}),gsap.to(this.loader,{"--topClip":100,duration:.8,ease:"power2.inOut",delay:1,onComplete:()=>{this.loader.classList.add("hidden"),this.loader.classList.remove("bottom-transition"),gsap.set(this.loader,{"--clip":0,"--leftClip":0,"--topClip":0,"--bottomClip":0}),this.loaderLogo&&(this.loaderLogo.style.opacity="1"),this.loader.querySelectorAll(".loader_logo").forEach(s=>s.style.opacity="1"),this.loader.querySelectorAll(".loader_basis_wrapper").forEach(s=>s.remove());const n=this.loader.querySelector(".loader_layer:nth-child(2) .loader_layer-bg");n&&(n.style.backgroundColor="var(--color--black)"),setTimeout(()=>ScrollTrigger.refresh(),100)}}),e&&gsap.to(e,{yPercent:120,duration:.8,delay:1,ease:"power2.inOut"})}}const fm=Object.freeze(Object.defineProperty({__proto__:null,default:dm},Symbol.toStringTag,{value:"Module"})),pm=window.gsap,Ti={duration:.8,ease:"power3",stagger:.05};pm.defaults(Ti);let mm=class{constructor(e,t){this.main=e,this.app=t,this.hero=this.main.querySelector(".hero"),this.title=this.hero.querySelector("h1"),this.descr=this.hero.querySelector("p"),this.btn=this.hero.querySelector(".btn"),this.imagesParent=this.hero.querySelector(".hero_images"),this.images=this.imagesParent.querySelectorAll(".hero_image"),this.titleSplit=new SplitText(this.title,{type:"lines",mask:"lines"}),gsap.set(this.titleSplit.lines,{paddingBottom:"0.1em",marginBottom:"-0.1em",perspective:1e3}),this.descrSplit=new SplitText(this.descr,{type:"lines",mask:"lines"}),gsap.set(this.descrSplit.lines,{paddingBottom:"0.1em",marginBottom:"-0.1em"}),this.destroyed=!1,this.setInitialStates(),this.checkInit(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}setInitialStates(){window.innerWidth<=992?(gsap.set(this.titleSplit.lines,{yPercent:120}),gsap.set(this.imagesParent,{yPercent:20,scale:.6,autoAlpha:0}),gsap.set(this.images,{scale:.8,opacity:0,autoAlpha:0})):gsap.set(this.titleSplit.lines,{yPercent:120,rotateX:"-35deg",rotateY:"-5deg",z:"-1rem",transformStyle:"preserve-3d",transformOrigin:"50% 0"}),gsap.set(this.descrSplit.lines,{yPercent:120}),gsap.set(this.btn,{opacity:0,filter:"blur(10px)"})}checkInit(){window.innerWidth>992?this.init():this.mobInit()}init(){this.meshs=this.app.gl.world.hero.meshs,this.group=this.app.gl.world.hero.group,this.tl=gsap.timeline({defaults:{ease:Ti.ease,duration:1.4},onStart:()=>{const i=this.tl.duration()*.85*1e3;setTimeout(()=>{this.app.trigger("homeAnimationStatic")},i)},onComplete:()=>{this.titleSplit.revert(),this.descrSplit.revert(),this.app.trigger("homeAnimationComplete")}}),this.tl.fromTo(this.group.position,{y:-window.innerHeight/2},{y:0,duration:3.5,ease:"power1"},0),this.meshs.forEach(({mesh:e},t)=>{this.tl.fromTo(e.position,{z:600},{z:0,stagger:.1,duration:2.5,ease:"power1"},t*.2+.4).fromTo(e.material.uniforms.uOpacity,{value:0},{value:1,duration:3.5},"<")}),this.tl.to(this.titleSplit.lines,{yPercent:0,stagger:.1,ease:"power3"},"<0.2").to(this.titleSplit.lines,{rotateX:"0deg",rotateY:"0deg",z:"0rem",stagger:.1,ease:"power2",stagger:.1},"<").to(this.descrSplit.lines,{yPercent:0,stagger:.1,ease:"power3"},"<0.2").to(this.btn,{opacity:1,filter:"blur(0px)"},"<0.3")}mobInit(){this.tl=gsap.timeline({defaults:{ease:Ti.ease,duration:1.4},onStart:()=>{const i=this.tl.duration()*.85*1e3;setTimeout(()=>{this.app.trigger("homeAnimationStatic")},i)},onComplete:()=>{this.titleSplit.revert(),this.descrSplit.revert(),this.app.trigger("homeAnimationComplete")}}),this.tl.from(this.images,{yPercent:-80,duration:3.5,ease:"power1",stagger:.2}).to(this.titleSplit.lines,{yPercent:0,duration:2,stagger:.1,ease:"power3"},"<0.6").to(this.descrSplit.lines,{yPercent:0,duration:2,stagger:.1,ease:"power3"},"<0.2").to(this.btn,{opacity:1,filter:"blur(0px)"},"<0.3").to(this.imagesParent,{yPercent:0,scale:1,autoAlpha:1,duration:2,ease:"power1",force3D:!0},.6).to(this.images,{scale:1,opacity:1,autoAlpha:1,duration:2,ease:"power1",stagger:.15,force3D:!0},.4)}resize(){var e,t;this.destroyed||((e=this.titleSplit)==null||e.revert(),(t=this.descrSplit)==null||t.revert())}destroy(){var e;this.destroyed||(this.destroyed=!0,(e=this.tl)==null||e.kill())}},gm=class{constructor(e,t){this.main=e,this.app=t,this.hero=this.main.querySelector(".hero"),this.images=this.hero.querySelectorAll(".hero_image, .hero_video"),this.videos=this.hero.querySelectorAll(".hero_video video"),this.button=this.hero.querySelector(".hero_button"),this.destroyed=!1,this.mouseEnabled=!1,this.quicks=[...this.images].map((i,n)=>{if(window.innerWidth<992)return;const s=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),o=gsap.quickTo(i,"x",{duration:s?.7:.5,ease:"power2.out",onUpdate:()=>{var c,h,d;n!==0||this.destroyed||(d=(h=(c=this.app.gl)==null?void 0:c.world)==null?void 0:h.hero)!=null&&d.setPosition&&this.app.gl.world.hero.setPosition()}}),a=gsap.quickTo(i,"y",{duration:s?.7:.5,ease:"power2.out"}),l=gsap.utils.random(.8,1.2,.1);return{x:o,y:a,random:l}}),this.main.addEventListener("mousemove",i=>this.mouseMove(i)),this.app.on("homeAnimationStatic",()=>{this.playHeroVideos()}),this.app.on("homeAnimationComplete",()=>{this.mouseEnabled=!0}),this.button&&this.button.addEventListener("click",i=>this.handleButtonClick(i)),this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}mouseMove(e){if(this.destroyed||!this.mouseEnabled||window.innerWidth<992)return;if(/^((?!chrome|android).)*safari/i.test(navigator.userAgent)){const o=Date.now();if(this.lastMouseMove||(this.lastMouseMove=o),o-this.lastMouseMove<32)return;this.lastMouseMove=o}const i={x:e.clientX/window.innerWidth-.5,y:e.clientY/window.innerHeight-.5},n=window.innerWidth*.2,s=window.innerHeight*.15;this.quicks.forEach(o=>{const a=i.x*n*o.random,l=i.y*s*o.random;o.x(a*-1),o.y(l*-1)})}playHeroVideos(){this.videos.forEach(e=>{const t=e._videoLoaderInstance;t&&t.playVideo()})}init(){}handleButtonClick(e){e.preventDefault();const t=document.querySelector("#work_with");this.app.scroll.lenis.scrollTo(t,{offset:window.innerHeight*.35,lerp:.1,duration:1.5,immediate:!1,lock:!1,force:!1})}resize(){this.destroyed}destroy(){this.destroyed||(this.destroyed=!0)}};const vm=Object.freeze(Object.defineProperty({__proto__:null,default:class{constructor(e,t){this.main=e,this.app=t,this.once=!1,this.triggerLoad=async()=>this.load(),this.app.onceLoaded&&this.load()}load(){this.once||(this.loader=new mm(this.main,this.app),this.hero=new gm(this.main,this.app),this.once=!0)}}},Symbol.toStringTag,{value:"Module"}));let ym=class{constructor(e,t){var i,n,s;this.main=e,this.app=t,this.hero=this.main.querySelector(".cases"),this.items=this.main.querySelectorAll(".cases_item"),this.meshs=((s=(n=(i=this.app.gl)==null?void 0:i.world)==null?void 0:n.items)==null?void 0:s.meshs)||[],this.title=this.hero.querySelector("h1"),this.wrapperText=this.hero.querySelectorAll(".cases_text_wrapper"),this.firstTwoItems=[...this.items].slice(0,3),this.firstTwoMeshs=this.meshs.slice(0,3),this.titleSplit=new SplitText(this.title,{type:"lines"}),this.titleSplitSecond=new SplitText(this.title,{type:"lines",linesClass:"line-second"}),gsap.set(this.titleSplitSecond.lines,{overflow:"clip",paddingBottom:"0.1em",marginBottom:"-0.1em",perspective:1e3}),this.destroyed=!1,window.innerWidth<=992&&this.setMobileInitialStates(),this.init(),this.handleMobileWrapperText(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.tl=gsap.timeline({defaults:{ease:Ti.ease,duration:1},onComplete:()=>this.titleSplit.revert()}),this.tl.fromTo(this.titleSplit.lines,{y:"120%"},{y:"0%",stagger:.1,ease:"power3",stagger:.1},.8).fromTo(this.titleSplit.lines,{rotateX:"-35deg",rotateY:"-5deg",z:"-1rem",transformStyle:"preserve-3d",transformOrigin:"50% 0"},{rotateX:"0deg",rotateY:"0deg",z:"0rem",stagger:.1,ease:"power2",stagger:.1},"<"),window.innerWidth>992&&this.tl.fromTo(this.firstTwoItems,{yPercent:20,opacity:0},{yPercent:0,opacity:1,onUpdate:()=>{var e,t,i,n;return(n=(i=(t=(e=this.app.gl)==null?void 0:e.world)==null?void 0:t.items)==null?void 0:i.setPosition)==null?void 0:n.call(i)}},"<0.2"),window.innerWidth>992&&this.firstTwoMeshs.forEach(({mesh:e,material:t})=>{e.rotation.set(-.8,.8,-.3),e.scale.set(.4,.4,.4),this.tl.fromTo(t.uniforms.uLoading,{value:0},{value:1,duration:1},"<0.1").to(e.rotation,{x:0,y:0,z:0,duration:1,ease:"power3.out"},"<").to(e.scale,{x:1,y:1,z:1,duration:1,ease:"back.out(1.2)"},"<")})}handleMobileWrapperText(){window.innerWidth<992&&this.wrapperText.forEach(t=>{t.children.length===1&&(t.style.flexDirection="row");const i=t.querySelector(".cases_email_text");i&&(i.textContent="Contact Us")})}resize(){var e;this.destroyed||((e=this.titleSplit)==null||e.revert(),this.handleMobileWrapperText())}destroy(){var e;this.destroyed||(this.destroyed=!0,(e=this.tl)==null||e.kill())}setMobileInitialStates(){gsap.set(this.titleSplit.lines,{y:"120%",rotateX:"-35deg",rotateY:"-5deg",z:"-1rem",transformStyle:"preserve-3d",transformOrigin:"50% 0"})}};class xm{constructor(e,t){var n,s,o;if(this.main=e,this.app=t,window.innerWidth<991)return;this.hero=this.main.querySelector(".cases"),this.sticky=this.hero.querySelector(".cases_sticky"),this.wrapper=this.hero.querySelector(".cases_wrapper"),this.list=this.hero.querySelector(".cases_list"),this.items=this.hero.querySelectorAll(".cases_item"),this.destroyed=!1,this.quicks=[];const i=()=>{var a,l,c;if(!((c=(l=(a=this.app.gl)==null?void 0:a.world)==null?void 0:l.items)!=null&&c.meshs)){console.warn("GL world items not ready, skipping parallax setup");return}this.quicks=[...this.items].map((h,d)=>{var f;const u=(f=this.app.gl.world.items.meshs[d])==null?void 0:f.mesh;return u?gsap.quickTo(u.material.uniforms.uParallax,"value",{duration:.3,ease:"power2"}):null}).filter(Boolean)};i(),(o=(s=(n=this.app.gl)==null?void 0:n.world)==null?void 0:s.items)!=null&&o.meshs||this.app.once("loadedWorld",()=>{i()}),this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.hero.style.setProperty("--length",this.items.length);const e=this.hero.getBoundingClientRect().left,t=this.wrapper.getBoundingClientRect().left,n=this.list.getBoundingClientRect().width+t-window.innerWidth+e;this.tl=gsap.timeline({}),this.tl.fromTo(this.sticky,{x:0},{x:-n,ease:"none",duration:1.5}),this.srcoll=ScrollTrigger.create({trigger:this.hero,start:"top top",end:"bottom bottom",scrub:!0,animation:this.tl}),this.scrolls=[],this.innerTls=[],this.enterInnerTls=[],this.items.forEach((s,o)=>{var l,c,h,d,u;const a=(u=(d=(h=(c=(l=this.app.gl)==null?void 0:l.world)==null?void 0:c.items)==null?void 0:h.meshs)==null?void 0:d[o])==null?void 0:u.mesh;a&&(this.scrolls[o]=ScrollTrigger.create({trigger:s,containerAnimation:this.tl,start:"left right",end:"right left",onUpdate:f=>{const m=gsap.utils.mapRange(0,1,-.05,.05,f.progress);this.quicks[o](m)}}),a.rotation.set(-.1,.1,-.1),a.scale.set(.4,.4,.4),!(o<3)&&(this.innerTls[o]=gsap.timeline({paused:!0,defaults:{ease:"power3",duration:1}}),this.innerTls[o].fromTo(a.material.uniforms.uLoading,{value:0},{value:1}).to(a.rotation,{x:0,y:0,z:0,duration:1,ease:"power3.out"},"<").to(a.scale,{x:1,y:1,z:1,duration:1,ease:"back.out(1.2)"},"<").fromTo(s,{yPercent:20,opacity:0},{yPercent:0,opacity:1},"<"),this.enterInnerTls[o]=ScrollTrigger.create({trigger:s,start:"left 75%",containerAnimation:this.tl,onEnter:()=>this.innerTls[o].play()})))})}resize(){var e,t;this.destroyed||((e=this.tl)==null||e.kill(),(t=this.srcoll)==null||t.kill(),this.scrolls.forEach(i=>i==null?void 0:i.kill()),this.init())}destroy(){var e,t;this.destroyed||(this.destroyed=!0,(e=this.tl)==null||e.kill(),(t=this.srcoll)==null||t.kill(),this.scrolls.forEach(i=>i==null?void 0:i.kill()))}}const _m=Object.freeze(Object.defineProperty({__proto__:null,default:class{constructor(e,t){this.main=e,this.app=t,this.once=!1,this.triggerLoad=async()=>this.load(),this.app.onceLoaded&&this.load()}load(){this.loader=new ym(this.main,this.app),this.hero=new xm(this.main,this.app),this.once=!0}}},Symbol.toStringTag,{value:"Module"}));let bm=class{constructor(e,t){this.main=e,this.app=t,this.hero=this.main.querySelector(".inner-hero"),this.title=this.hero.querySelector("h1"),this.scrollBtn=this.hero.querySelector(".btn_scroll"),this.titleSplit=new SplitText(this.title,{type:"lines"}),this.titleSplitSecond=new SplitText(this.title,{type:"lines",linesClass:"line-second"}),gsap.set(this.titleSplitSecond.lines,{overflow:"clip",paddingBottom:"0.1em",marginBottom:"-0.1em",perspective:1e3}),this.destroyed=!1,this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.scrollBtn&&window.innerWidth<=992&&gsap.set(this.scrollBtn,{opacity:0,y:-20}),this.tl=gsap.timeline({defaults:{ease:Ti.ease,duration:1.4},onComplete:()=>{this.titleSplit.revert()}}),this.tl.fromTo(this.titleSplit.lines,{y:"120%"},{y:"0%",stagger:.1,ease:"power3",stagger:.1},.8).fromTo(this.titleSplit.lines,{rotateX:"-35deg",rotateY:"-5deg",z:"-1rem",transformStyle:"preserve-3d",transformOrigin:"50% 0"},{rotateX:"0deg",rotateY:"0deg",z:"0rem",stagger:.1,ease:"power2",stagger:.1},"<"),this.scrollBtn&&window.innerWidth<=992&&this.tl.to(this.scrollBtn,{opacity:1,y:0,duration:.6,ease:"power2"},"-=0.6")}resize(){var e,t;this.destroyed||((e=this.titleSplit)==null||e.revert(),(t=this.descrSplit)==null||t.revert())}destroy(){var e;this.destroyed||(this.destroyed=!0,(e=this.tl)==null||e.kill())}};const wm=Object.freeze(Object.defineProperty({__proto__:null,default:class{constructor(e,t){this.main=e,this.app=t,this.once=!1,this.triggerLoad=async()=>this.load(),this.app.onceLoaded&&this.load()}load(){this.once||(this.loader=new bm(this.main,this.app),this.once=!0)}}},Symbol.toStringTag,{value:"Module"}));let Sm=class{constructor(e,t){this.main=e,this.app=t,this.hero=this.main.querySelector(".h-services"),this.title=this.hero.querySelector("h1"),this.titleSplit=new SplitText(this.title,{type:"lines"}),this.titleSplitSecond=new SplitText(this.title,{type:"lines",linesClass:"line-second"}),gsap.set(this.titleSplitSecond.lines,{overflow:"clip",paddingBottom:"0.1em",marginBottom:"-0.1em",perspective:1e3}),this.destroyed=!1,this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.tl=gsap.timeline({defaults:{ease:Ti.ease,duration:1}}),this.tl.fromTo(this.titleSplit.lines,{y:"120%"},{y:"0%",stagger:.1,ease:"power3",stagger:.1},.6).fromTo(this.titleSplit.lines,{rotateX:"-35deg",rotateY:"-5deg",z:"-1rem",transformStyle:"preserve-3d",transformOrigin:"50% 0"},{rotateX:"0deg",rotateY:"0deg",z:"0rem",stagger:.1,ease:"power2",stagger:.1},"<")}resize(){var e,t;this.destroyed||((e=this.titleSplit)==null||e.revert(),(t=this.descrSplit)==null||t.revert())}destroy(){this.destroyed||(this.destroyed=!0)}};const Mm=Object.freeze(Object.defineProperty({__proto__:null,default:class{constructor(e,t){this.main=e,this.app=t,this.once=!1,this.triggerLoad=async()=>this.load(),this.app.onceLoaded&&this.load()}load(){this.once||(this.loader=new Sm(this.main,this.app),this.once=!0)}}},Symbol.toStringTag,{value:"Module"}));let Tm=class{constructor(e,t){this.main=e,this.app=t,this.hero=this.main.querySelector(".inner-hero"),this.title=this.hero.querySelector("h1"),this.scrollBtn=this.hero.querySelector(".btn_scroll"),this.titleSplit=new SplitText(this.title,{type:"lines"}),this.titleSplitSecond=new SplitText(this.title,{type:"lines",linesClass:"line-second"}),gsap.set(this.titleSplitSecond.lines,{overflow:"clip",paddingBottom:"0.1em",marginBottom:"-0.1em",perspective:1e3}),this.destroyed=!1,this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.scrollBtn&&window.innerWidth<=992&&gsap.set(this.scrollBtn,{opacity:0,y:-20}),this.tl=gsap.timeline({defaults:{ease:Ti.ease,duration:1.4},onComplete:()=>{this.titleSplit.revert()}}),this.tl.fromTo(this.titleSplit.lines,{y:"120%"},{y:"0%",stagger:.1,ease:"power3",stagger:.1},.8).fromTo(this.titleSplit.lines,{rotateX:"-35deg",rotateY:"-5deg",z:"-1rem",transformStyle:"preserve-3d",transformOrigin:"50% 0"},{rotateX:"0deg",rotateY:"0deg",z:"0rem",stagger:.1,ease:"power2",stagger:.1},"<"),this.scrollBtn&&window.innerWidth<=992&&this.tl.to(this.scrollBtn,{opacity:1,y:0,duration:.6,ease:"power2"},"-=0.6")}resize(){var e;this.destroyed||(e=this.titleSplit)==null||e.revert()}destroy(){var e;this.destroyed||(this.destroyed=!0,(e=this.tl)==null||e.kill())}};const Am=Object.freeze(Object.defineProperty({__proto__:null,default:class{constructor(e,t){this.main=e,this.app=t,this.once=!1,this.triggerLoad=async()=>this.load(),this.app.onceLoaded&&this.load()}load(){this.once||(this.loader=new Tm(this.main,this.app),this.once=!0)}}},Symbol.toStringTag,{value:"Module"}));var Em="1.3.11";function Eh(r,e,t){return Math.max(r,Math.min(e,t))}function Cm(r,e,t){return(1-t)*r+t*e}function Rm(r,e,t,i){return Cm(r,e,1-Math.exp(-t*i))}function Pm(r,e){return(r%e+e)%e}var Im=class{constructor(){pe(this,"isRunning",!1);pe(this,"value",0);pe(this,"from",0);pe(this,"to",0);pe(this,"currentTime",0);pe(this,"lerp");pe(this,"duration");pe(this,"easing");pe(this,"onUpdate")}advance(r){var t;if(!this.isRunning)return;let e=!1;if(this.duration&&this.easing){this.currentTime+=r;const i=Eh(0,this.currentTime/this.duration,1);e=i>=1;const n=e?1:this.easing(i);this.value=this.from+(this.to-this.from)*n}else this.lerp?(this.value=Rm(this.value,this.to,this.lerp*60,r),Math.round(this.value)===this.to&&(this.value=this.to,e=!0)):(this.value=this.to,e=!0);e&&this.stop(),(t=this.onUpdate)==null||t.call(this,this.value,e)}stop(){this.isRunning=!1}fromTo(r,e,{lerp:t,duration:i,easing:n,onStart:s,onUpdate:o}){this.from=this.value=r,this.to=e,this.lerp=t,this.duration=i,this.easing=n,this.currentTime=0,this.isRunning=!0,s==null||s(),this.onUpdate=o}};function Lm(r,e){let t;return function(...i){let n=this;clearTimeout(t),t=setTimeout(()=>{t=void 0,r.apply(n,i)},e)}}var Um=class{constructor(r,e,{autoResize:t=!0,debounce:i=250}={}){pe(this,"width",0);pe(this,"height",0);pe(this,"scrollHeight",0);pe(this,"scrollWidth",0);pe(this,"debouncedResize");pe(this,"wrapperResizeObserver");pe(this,"contentResizeObserver");pe(this,"resize",()=>{this.onWrapperResize(),this.onContentResize()});pe(this,"onWrapperResize",()=>{this.wrapper instanceof Window?(this.width=window.innerWidth,this.height=window.innerHeight):(this.width=this.wrapper.clientWidth,this.height=this.wrapper.clientHeight)});pe(this,"onContentResize",()=>{this.wrapper instanceof Window?(this.scrollHeight=this.content.scrollHeight,this.scrollWidth=this.content.scrollWidth):(this.scrollHeight=this.wrapper.scrollHeight,this.scrollWidth=this.wrapper.scrollWidth)});this.wrapper=r,this.content=e,t&&(this.debouncedResize=Lm(this.resize,i),this.wrapper instanceof Window?window.addEventListener("resize",this.debouncedResize,!1):(this.wrapperResizeObserver=new ResizeObserver(this.debouncedResize),this.wrapperResizeObserver.observe(this.wrapper)),this.contentResizeObserver=new ResizeObserver(this.debouncedResize),this.contentResizeObserver.observe(this.content)),this.resize()}destroy(){var r,e;(r=this.wrapperResizeObserver)==null||r.disconnect(),(e=this.contentResizeObserver)==null||e.disconnect(),this.wrapper===window&&this.debouncedResize&&window.removeEventListener("resize",this.debouncedResize,!1)}get limit(){return{x:this.scrollWidth-this.width,y:this.scrollHeight-this.height}}},Ch=class{constructor(){pe(this,"events",{})}emit(r,...e){var i;let t=this.events[r]||[];for(let n=0,s=t.length;n<s;n++)(i=t[n])==null||i.call(t,...e)}on(r,e){var t;return(t=this.events[r])!=null&&t.push(e)||(this.events[r]=[e]),()=>{var i;this.events[r]=(i=this.events[r])==null?void 0:i.filter(n=>e!==n)}}off(r,e){var t;this.events[r]=(t=this.events[r])==null?void 0:t.filter(i=>e!==i)}destroy(){this.events={}}},Rh=100/6,nn={passive:!1},Dm=class{constructor(r,e={wheelMultiplier:1,touchMultiplier:1}){pe(this,"touchStart",{x:0,y:0});pe(this,"lastDelta",{x:0,y:0});pe(this,"window",{width:0,height:0});pe(this,"emitter",new Ch);pe(this,"onTouchStart",r=>{const{clientX:e,clientY:t}=r.targetTouches?r.targetTouches[0]:r;this.touchStart.x=e,this.touchStart.y=t,this.lastDelta={x:0,y:0},this.emitter.emit("scroll",{deltaX:0,deltaY:0,event:r})});pe(this,"onTouchMove",r=>{const{clientX:e,clientY:t}=r.targetTouches?r.targetTouches[0]:r,i=-(e-this.touchStart.x)*this.options.touchMultiplier,n=-(t-this.touchStart.y)*this.options.touchMultiplier;this.touchStart.x=e,this.touchStart.y=t,this.lastDelta={x:i,y:n},this.emitter.emit("scroll",{deltaX:i,deltaY:n,event:r})});pe(this,"onTouchEnd",r=>{this.emitter.emit("scroll",{deltaX:this.lastDelta.x,deltaY:this.lastDelta.y,event:r})});pe(this,"onWheel",r=>{let{deltaX:e,deltaY:t,deltaMode:i}=r;const n=i===1?Rh:i===2?this.window.width:1,s=i===1?Rh:i===2?this.window.height:1;e*=n,t*=s,e*=this.options.wheelMultiplier,t*=this.options.wheelMultiplier,this.emitter.emit("scroll",{deltaX:e,deltaY:t,event:r})});pe(this,"onWindowResize",()=>{this.window={width:window.innerWidth,height:window.innerHeight}});this.element=r,this.options=e,window.addEventListener("resize",this.onWindowResize,!1),this.onWindowResize(),this.element.addEventListener("wheel",this.onWheel,nn),this.element.addEventListener("touchstart",this.onTouchStart,nn),this.element.addEventListener("touchmove",this.onTouchMove,nn),this.element.addEventListener("touchend",this.onTouchEnd,nn)}on(r,e){return this.emitter.on(r,e)}destroy(){this.emitter.destroy(),window.removeEventListener("resize",this.onWindowResize,!1),this.element.removeEventListener("wheel",this.onWheel,nn),this.element.removeEventListener("touchstart",this.onTouchStart,nn),this.element.removeEventListener("touchmove",this.onTouchMove,nn),this.element.removeEventListener("touchend",this.onTouchEnd,nn)}},Ph=r=>Math.min(1,1.001-Math.pow(2,-10*r)),Nm=class{constructor({wrapper:r=window,content:e=document.documentElement,eventsTarget:t=r,smoothWheel:i=!0,syncTouch:n=!1,syncTouchLerp:s=.075,touchInertiaExponent:o=1.7,duration:a,easing:l,lerp:c=.1,infinite:h=!1,orientation:d="vertical",gestureOrientation:u=d==="horizontal"?"both":"vertical",touchMultiplier:f=1,wheelMultiplier:m=1,autoResize:v=!0,prevent:g,virtualScroll:p,overscroll:x=!0,autoRaf:y=!1,anchors:_=!1,autoToggle:C=!1,allowNestedScroll:T=!1,__experimental__naiveDimensions:A=!1}={}){pe(this,"_isScrolling",!1);pe(this,"_isStopped",!1);pe(this,"_isLocked",!1);pe(this,"_preventNextNativeScrollEvent",!1);pe(this,"_resetVelocityTimeout",null);pe(this,"__rafID",null);pe(this,"isTouching");pe(this,"time",0);pe(this,"userData",{});pe(this,"lastVelocity",0);pe(this,"velocity",0);pe(this,"direction",0);pe(this,"options");pe(this,"targetScroll");pe(this,"animatedScroll");pe(this,"animate",new Im);pe(this,"emitter",new Ch);pe(this,"dimensions");pe(this,"virtualScroll");pe(this,"onScrollEnd",r=>{r instanceof CustomEvent||(this.isScrolling==="smooth"||this.isScrolling===!1)&&r.stopPropagation()});pe(this,"dispatchScrollendEvent",()=>{this.options.wrapper.dispatchEvent(new CustomEvent("scrollend",{bubbles:this.options.wrapper===window,detail:{lenisScrollEnd:!0}}))});pe(this,"onTransitionEnd",r=>{if(r.propertyName.includes("overflow")){const e=this.isHorizontal?"overflow-x":"overflow-y",t=getComputedStyle(this.rootElement)[e];["hidden","clip"].includes(t)?this.internalStop():this.internalStart()}});pe(this,"onClick",r=>{const t=r.composedPath().find(i=>{var n,s,o;return i instanceof HTMLAnchorElement&&(((n=i.getAttribute("href"))==null?void 0:n.startsWith("#"))||((s=i.getAttribute("href"))==null?void 0:s.startsWith("/#"))||((o=i.getAttribute("href"))==null?void 0:o.startsWith("./#")))});if(t){const i=t.getAttribute("href");if(i){const n=typeof this.options.anchors=="object"&&this.options.anchors?this.options.anchors:void 0;let s=`#${i.split("#")[1]}`;["#","/#","./#","#top","/#top","./#top"].includes(i)&&(s=0),this.scrollTo(s,n)}}});pe(this,"onPointerDown",r=>{r.button===1&&this.reset()});pe(this,"onVirtualScroll",r=>{if(typeof this.options.virtualScroll=="function"&&this.options.virtualScroll(r)===!1)return;const{deltaX:e,deltaY:t,event:i}=r;if(this.emitter.emit("virtual-scroll",{deltaX:e,deltaY:t,event:i}),i.ctrlKey||i.lenisStopPropagation)return;const n=i.type.includes("touch"),s=i.type.includes("wheel");this.isTouching=i.type==="touchstart"||i.type==="touchmove";const o=e===0&&t===0;if(this.options.syncTouch&&n&&i.type==="touchstart"&&o&&!this.isStopped&&!this.isLocked){this.reset();return}const l=this.options.gestureOrientation==="vertical"&&t===0||this.options.gestureOrientation==="horizontal"&&e===0;if(o||l)return;let c=i.composedPath();c=c.slice(0,c.indexOf(this.rootElement));const h=this.options.prevent;if(c.find(g=>{var p,x,y;return g instanceof HTMLElement&&(typeof h=="function"&&(h==null?void 0:h(g))||((p=g.hasAttribute)==null?void 0:p.call(g,"data-lenis-prevent"))||n&&((x=g.hasAttribute)==null?void 0:x.call(g,"data-lenis-prevent-touch"))||s&&((y=g.hasAttribute)==null?void 0:y.call(g,"data-lenis-prevent-wheel"))||this.options.allowNestedScroll&&this.checkNestedScroll(g,{deltaX:e,deltaY:t}))}))return;if(this.isStopped||this.isLocked){i.cancelable&&i.preventDefault();return}if(!(this.options.syncTouch&&n||this.options.smoothWheel&&s)){this.isScrolling="native",this.animate.stop(),i.lenisStopPropagation=!0;return}let u=t;this.options.gestureOrientation==="both"?u=Math.abs(t)>Math.abs(e)?t:e:this.options.gestureOrientation==="horizontal"&&(u=e),(!this.options.overscroll||this.options.infinite||this.options.wrapper!==window&&this.limit>0&&(this.animatedScroll>0&&this.animatedScroll<this.limit||this.animatedScroll===0&&t>0||this.animatedScroll===this.limit&&t<0))&&(i.lenisStopPropagation=!0),i.cancelable&&i.preventDefault();const f=n&&this.options.syncTouch,v=n&&i.type==="touchend";v&&(u=Math.sign(this.velocity)*Math.pow(Math.abs(this.velocity),this.options.touchInertiaExponent)),this.scrollTo(this.targetScroll+u,{programmatic:!1,...f?{lerp:v?this.options.syncTouchLerp:1}:{lerp:this.options.lerp,duration:this.options.duration,easing:this.options.easing}})});pe(this,"onNativeScroll",()=>{if(this._resetVelocityTimeout!==null&&(clearTimeout(this._resetVelocityTimeout),this._resetVelocityTimeout=null),this._preventNextNativeScrollEvent){this._preventNextNativeScrollEvent=!1;return}if(this.isScrolling===!1||this.isScrolling==="native"){const r=this.animatedScroll;this.animatedScroll=this.targetScroll=this.actualScroll,this.lastVelocity=this.velocity,this.velocity=this.animatedScroll-r,this.direction=Math.sign(this.animatedScroll-r),this.isStopped||(this.isScrolling="native"),this.emit(),this.velocity!==0&&(this._resetVelocityTimeout=setTimeout(()=>{this.lastVelocity=this.velocity,this.velocity=0,this.isScrolling=!1,this.emit()},400))}});pe(this,"raf",r=>{const e=r-(this.time||r);this.time=r,this.animate.advance(e*.001),this.options.autoRaf&&(this.__rafID=requestAnimationFrame(this.raf))});window.lenisVersion=Em,(!r||r===document.documentElement)&&(r=window),typeof a=="number"&&typeof l!="function"?l=Ph:typeof l=="function"&&typeof a!="number"&&(a=1),this.options={wrapper:r,content:e,eventsTarget:t,smoothWheel:i,syncTouch:n,syncTouchLerp:s,touchInertiaExponent:o,duration:a,easing:l,lerp:c,infinite:h,gestureOrientation:u,orientation:d,touchMultiplier:f,wheelMultiplier:m,autoResize:v,prevent:g,virtualScroll:p,overscroll:x,autoRaf:y,anchors:_,autoToggle:C,allowNestedScroll:T,__experimental__naiveDimensions:A},this.dimensions=new Um(r,e,{autoResize:v}),this.updateClassName(),this.targetScroll=this.animatedScroll=this.actualScroll,this.options.wrapper.addEventListener("scroll",this.onNativeScroll,!1),this.options.wrapper.addEventListener("scrollend",this.onScrollEnd,{capture:!0}),this.options.anchors&&this.options.wrapper===window&&this.options.wrapper.addEventListener("click",this.onClick,!1),this.options.wrapper.addEventListener("pointerdown",this.onPointerDown,!1),this.virtualScroll=new Dm(t,{touchMultiplier:f,wheelMultiplier:m}),this.virtualScroll.on("scroll",this.onVirtualScroll),this.options.autoToggle&&this.rootElement.addEventListener("transitionend",this.onTransitionEnd,{passive:!0}),this.options.autoRaf&&(this.__rafID=requestAnimationFrame(this.raf))}destroy(){this.emitter.destroy(),this.options.wrapper.removeEventListener("scroll",this.onNativeScroll,!1),this.options.wrapper.removeEventListener("scrollend",this.onScrollEnd,{capture:!0}),this.options.wrapper.removeEventListener("pointerdown",this.onPointerDown,!1),this.options.anchors&&this.options.wrapper===window&&this.options.wrapper.removeEventListener("click",this.onClick,!1),this.virtualScroll.destroy(),this.dimensions.destroy(),this.cleanUpClassName(),this.__rafID&&cancelAnimationFrame(this.__rafID)}on(r,e){return this.emitter.on(r,e)}off(r,e){return this.emitter.off(r,e)}setScroll(r){this.isHorizontal?this.options.wrapper.scrollTo({left:r,behavior:"instant"}):this.options.wrapper.scrollTo({top:r,behavior:"instant"})}resize(){this.dimensions.resize(),this.animatedScroll=this.targetScroll=this.actualScroll,this.emit()}emit(){this.emitter.emit("scroll",this)}reset(){this.isLocked=!1,this.isScrolling=!1,this.animatedScroll=this.targetScroll=this.actualScroll,this.lastVelocity=this.velocity=0,this.animate.stop()}start(){if(this.isStopped){if(this.options.autoToggle){this.rootElement.style.removeProperty("overflow");return}this.internalStart()}}internalStart(){this.isStopped&&(this.reset(),this.isStopped=!1,this.emit())}stop(){if(!this.isStopped){if(this.options.autoToggle){this.rootElement.style.setProperty("overflow","clip");return}this.internalStop()}}internalStop(){this.isStopped||(this.reset(),this.isStopped=!0,this.emit())}scrollTo(r,{offset:e=0,immediate:t=!1,lock:i=!1,duration:n=this.options.duration,easing:s=this.options.easing,lerp:o=this.options.lerp,onStart:a,onComplete:l,force:c=!1,programmatic:h=!0,userData:d}={}){if(!((this.isStopped||this.isLocked)&&!c)){if(typeof r=="string"&&["top","left","start"].includes(r))r=0;else if(typeof r=="string"&&["bottom","right","end"].includes(r))r=this.limit;else{let u;if(typeof r=="string"?u=document.querySelector(r):r instanceof HTMLElement&&(r!=null&&r.nodeType)&&(u=r),u){if(this.options.wrapper!==window){const m=this.rootElement.getBoundingClientRect();e-=this.isHorizontal?m.left:m.top}const f=u.getBoundingClientRect();r=(this.isHorizontal?f.left:f.top)+this.animatedScroll}}if(typeof r=="number"){if(r+=e,r=Math.round(r),this.options.infinite){if(h){this.targetScroll=this.animatedScroll=this.scroll;const u=r-this.animatedScroll;u>this.limit/2?r=r-this.limit:u<-this.limit/2&&(r=r+this.limit)}}else r=Eh(0,r,this.limit);if(r===this.targetScroll){a==null||a(this),l==null||l(this);return}if(this.userData=d??{},t){this.animatedScroll=this.targetScroll=r,this.setScroll(this.scroll),this.reset(),this.preventNextNativeScrollEvent(),this.emit(),l==null||l(this),this.userData={},requestAnimationFrame(()=>{this.dispatchScrollendEvent()});return}h||(this.targetScroll=r),typeof n=="number"&&typeof s!="function"?s=Ph:typeof s=="function"&&typeof n!="number"&&(n=1),this.animate.fromTo(this.animatedScroll,r,{duration:n,easing:s,lerp:o,onStart:()=>{i&&(this.isLocked=!0),this.isScrolling="smooth",a==null||a(this)},onUpdate:(u,f)=>{this.isScrolling="smooth",this.lastVelocity=this.velocity,this.velocity=u-this.animatedScroll,this.direction=Math.sign(this.velocity),this.animatedScroll=u,this.setScroll(this.scroll),h&&(this.targetScroll=u),f||this.emit(),f&&(this.reset(),this.emit(),l==null||l(this),this.userData={},requestAnimationFrame(()=>{this.dispatchScrollendEvent()}),this.preventNextNativeScrollEvent())}})}}}preventNextNativeScrollEvent(){this._preventNextNativeScrollEvent=!0,requestAnimationFrame(()=>{this._preventNextNativeScrollEvent=!1})}checkNestedScroll(r,{deltaX:e,deltaY:t}){const i=Date.now(),n=r._lenis??(r._lenis={});let s,o,a,l,c,h,d,u;const f=this.options.gestureOrientation;if(i-(n.time??0)>2e3){n.time=Date.now();const C=window.getComputedStyle(r);n.computedStyle=C;const T=C.overflowX,A=C.overflowY;if(s=["auto","overlay","scroll"].includes(T),o=["auto","overlay","scroll"].includes(A),n.hasOverflowX=s,n.hasOverflowY=o,!s&&!o||f==="vertical"&&!o||f==="horizontal"&&!s)return!1;c=r.scrollWidth,h=r.scrollHeight,d=r.clientWidth,u=r.clientHeight,a=c>d,l=h>u,n.isScrollableX=a,n.isScrollableY=l,n.scrollWidth=c,n.scrollHeight=h,n.clientWidth=d,n.clientHeight=u}else a=n.isScrollableX,l=n.isScrollableY,s=n.hasOverflowX,o=n.hasOverflowY,c=n.scrollWidth,h=n.scrollHeight,d=n.clientWidth,u=n.clientHeight;if(!s&&!o||!a&&!l||f==="vertical"&&(!o||!l)||f==="horizontal"&&(!s||!a))return!1;let m;if(f==="horizontal")m="x";else if(f==="vertical")m="y";else{const C=e!==0,T=t!==0;C&&s&&a&&(m="x"),T&&o&&l&&(m="y")}if(!m)return!1;let v,g,p,x,y;if(m==="x")v=r.scrollLeft,g=c-d,p=e,x=s,y=a;else if(m==="y")v=r.scrollTop,g=h-u,p=t,x=o,y=l;else return!1;return(p>0?v<g:v>0)&&x&&y}get rootElement(){return this.options.wrapper===window?document.documentElement:this.options.wrapper}get limit(){return this.options.__experimental__naiveDimensions?this.isHorizontal?this.rootElement.scrollWidth-this.rootElement.clientWidth:this.rootElement.scrollHeight-this.rootElement.clientHeight:this.dimensions.limit[this.isHorizontal?"x":"y"]}get isHorizontal(){return this.options.orientation==="horizontal"}get actualScroll(){const r=this.options.wrapper;return this.isHorizontal?r.scrollX??r.scrollLeft:r.scrollY??r.scrollTop}get scroll(){return this.options.infinite?Pm(this.animatedScroll,this.limit):this.animatedScroll}get progress(){return this.limit===0?1:this.scroll/this.limit}get isScrolling(){return this._isScrolling}set isScrolling(r){this._isScrolling!==r&&(this._isScrolling=r,this.updateClassName())}get isStopped(){return this._isStopped}set isStopped(r){this._isStopped!==r&&(this._isStopped=r,this.updateClassName())}get isLocked(){return this._isLocked}set isLocked(r){this._isLocked!==r&&(this._isLocked=r,this.updateClassName())}get isSmooth(){return this.isScrolling==="smooth"}get className(){let r="lenis";return this.options.autoToggle&&(r+=" lenis-autoToggle"),this.isStopped&&(r+=" lenis-stopped"),this.isLocked&&(r+=" lenis-locked"),this.isScrolling&&(r+=" lenis-scrolling"),this.isScrolling==="smooth"&&(r+=" lenis-smooth"),r}updateClassName(){this.cleanUpClassName(),this.rootElement.className=`${this.rootElement.className} ${this.className}`.trim()}cleanUpClassName(){this.rootElement.className=this.rootElement.className.replace(/lenis(-\w+)?/g,"").trim()}},Om=class{constructor(){pe(this,"_elapsed",0);pe(this,"_currentTime",0);pe(this,"_startTime");pe(this,"_lastTime");pe(this,"_isPlaying",!1);pe(this,"_deltaTime",0)}play(){this._isPlaying||(this._currentTime=0,this._startTime=void 0,this._isPlaying=!0)}pause(){this._isPlaying&&(this._deltaTime=0,this._isPlaying=!1)}reset(){this._elapsed=0,this._deltaTime=0,this._currentTime=0,this._lastTime=void 0,this._isPlaying=!1}update(e){this._isPlaying&&(this._startTime||(this._startTime=e),this._lastTime===void 0?(this._lastTime=this._startTime,this._currentTime=0,this._deltaTime=0):(this._lastTime=this._currentTime,this._currentTime=e-this._startTime,this._deltaTime=this._currentTime-this._lastTime,this._elapsed+=this._deltaTime))}get time(){return this._elapsed}get isPlaying(){return this._isPlaying}get deltaTime(){return this._deltaTime}},Fm=0;function zm(){return Fm++}var Di=typeof window<"u",Ih=Di&&window.requestAnimationFrame,Lh=Di&&window.cancelAnimationFrame,Bm=class{constructor(r=Number.POSITIVE_INFINITY){pe(this,"callbacks",[]);pe(this,"fps");pe(this,"time",0);pe(this,"lastTickDate",performance.now());pe(this,"framesCount",0);this.fps=r}get isRelativeFps(){return typeof this.fps=="string"&&this.fps.endsWith("%")}get maxFramesCount(){return this.isRelativeFps?Math.max(1,Math.round(100/Number(this.fps.replace("%","")))):1}get executionTime(){return this.isRelativeFps?0:1e3/this.fps}dispatch(r,e){var t,i,n;for(let s=0;s<this.callbacks.length;s++){const o=performance.now();(t=this.callbacks[s])==null||t.callback(r,e);const a=performance.now()-o;(i=this.callbacks[s].samples)==null||i.push(a),this.callbacks[s].samples=(n=this.callbacks[s].samples)==null?void 0:n.slice(-9)}}raf(r,e){if(this.time+=e,this.isRelativeFps)this.framesCount===0&&this.dispatch(r,e),this.framesCount++,this.framesCount%=this.maxFramesCount;else if(this.fps===Number.POSITIVE_INFINITY)this.dispatch(r,e);else if(this.time>=this.executionTime){this.time=this.time%this.executionTime;const t=r-this.lastTickDate;this.lastTickDate=r,this.dispatch(r,t)}}add({callback:r,priority:e,label:t}){if(typeof r!="function"){console.warn("Tempus.add: callback is not a function");return}const i=zm();return this.callbacks.push({callback:r,priority:e,uid:i,label:t,samples:[]}),this.callbacks.sort((n,s)=>n.priority-s.priority),()=>this.remove(i)}remove(r){this.callbacks=this.callbacks.filter(({uid:e})=>r!==e)}},km=class{constructor(){pe(this,"framerates",{});pe(this,"clock",new Om);pe(this,"fps");pe(this,"usage",0);pe(this,"rafId");pe(this,"raf",r=>{if(!Di)return;this.clock.update(r);const e=this.clock.time,t=this.clock.deltaTime;this.fps=1e3/t;const i=performance.now();for(const s of Object.values(this.framerates))s.raf(e,t);const n=performance.now()-i;this.usage=n/t,this.rafId=requestAnimationFrame(this.raf)});Di&&this.play()}restart(){this.rafId&&cancelAnimationFrame(this.rafId);for(const r of Object.values(this.framerates))r.framesCount=0,r.time=0,r.lastTickDate=performance.now();this.clock.reset(),this.play()}play(){!Di||this.clock.isPlaying||(this.clock.play(),this.rafId=requestAnimationFrame(this.raf))}pause(){!Di||!this.rafId||!this.clock.isPlaying||(cancelAnimationFrame(this.rafId),this.rafId=void 0,this.clock.pause())}get isPlaying(){return this.clock.isPlaying}add(r,{priority:e=0,fps:t=Number.POSITIVE_INFINITY,label:i=""}={}){if(Di){if(typeof t=="number"||typeof t=="string"&&t.endsWith("%"))return this.framerates[t]||(this.framerates[t]=new Bm(t)),this.framerates[t].add({callback:r,priority:e,label:i});console.warn('Tempus.add: fps is not a number or a string ending with "%"')}}patch(){Di&&(window.requestAnimationFrame=(r,{priority:e=0,fps:t=Number.POSITIVE_INFINITY}={})=>r===this.raf||!r.toString().includes("requestAnimationFrame(")?Ih(r):(r.__tempusPatched||(r.__tempusPatched=!0,r.__tempusUnsubscribe=this.add(r,{priority:e,fps:t,label:r.name})),r.__tempusUnsubscribe),window.cancelAnimationFrame=r=>{if(typeof r=="function"){r==null||r();return}return Lh(r)})}unpatch(){Di&&(window.requestAnimationFrame=Ih,window.cancelAnimationFrame=Lh)}},Ml=new km;class Vm{constructor(){this.init(),ScrollTrigger.addEventListener("refresh",()=>this.lenis.resize()),this.lenis.on("scroll",ScrollTrigger.update),Ml.add(e=>this.lenis.raf(e)),gsap.ticker.remove(gsap.updateRoot),Ml.add(e=>gsap.updateRoot(e/1e3))}init(){const e=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);this.lenis=new Nm({duration:e?1.2:1.4,easing:t=>t===1?1:1-Math.pow(2,-10*t),direction:"vertical",gestureDirection:"vertical",smoothWheel:!0,syncTouch:!1,syncTouchLerp:e?.1:.08,wheelMultiplier:e?1.2:1.6})}destroy(){this.lenis.destroy()}}const Hm=Object.freeze(Object.defineProperty({__proto__:null,default:Vm},Symbol.toStringTag,{value:"Module"}));class Gm extends wn{constructor(){super(),this.body=document.querySelector("body"),this.canvasContainer=document.querySelector(".canvas-container"),this.width=this.canvasContainer?this.canvasContainer.offsetWidth:window.innerWidth,this.height=this.canvasContainer?this.canvasContainer.offsetHeight:window.innerHeight,this.pixelRatio=Math.min(window.devicePixelRatio,2),this.aspect=this.width/this.height,this.aspectV=this.height/this.width,this.initWidth=this.width;let e=this.canvasContainer?this.canvasContainer.offsetWidth:window.innerWidth,t=this.canvasContainer?this.canvasContainer.offsetHeight:window.innerHeight,i=e;const n=()=>{(this.initWidth>=991&&window.innerWidth<991||this.initWidth<991&&window.innerWidth>=991)&&window.location.reload();let o=this.canvasContainer?this.canvasContainer.offsetWidth:window.innerWidth,a=this.canvasContainer?this.canvasContainer.offsetHeight:window.innerHeight;(e!==o||i>=991&&t!==a)&&(this.width=this.canvasContainer?this.canvasContainer.offsetWidth:window.innerWidth,this.height=this.canvasContainer?this.canvasContainer.offsetHeight:window.innerHeight,this.pixelRatio=Math.min(window.devicePixelRatio,2),this.aspect=this.width/this.height,this.aspectV=this.height/this.width,this.trigger("resize")),e=this.canvasContainer?this.canvasContainer.offsetWidth:window.innerWidth};function s(o){let a;return function(l){a&&clearTimeout(a),a=setTimeout(o,300,l)}}window.addEventListener("resize",s(function(o){n()}))}observerResize(e){for(const t of e)t.target===this.body&&this.trigger("resize")}}const Wm=Object.freeze(Object.defineProperty({__proto__:null,default:Gm},Symbol.toStringTag,{value:"Module"}));class Xm extends wn{constructor(){super(),this.start=Date.now(),this.current=this.start,this.elapsed=0,this.delta=16,this.frame=0,Ml.add(()=>this.tick())}tick(){const e=Date.now();this.delta=e-this.current,this.current=e,this.elapsed=this.current-this.start,this.frame++,this.trigger("tick")}}const qm=Object.freeze(Object.defineProperty({__proto__:null,default:Xm},Symbol.toStringTag,{value:"Module"})),Ym=(r,e,t)=>{const i=r[e];return i?typeof i=="function"?i():Promise.resolve(i):new Promise((n,s)=>{(typeof queueMicrotask=="function"?queueMicrotask:setTimeout)(s.bind(null,new Error("Unknown variable dynamic import: "+e+(e.split("/").length!==t?". Note that variables only represent file names one level deep.":""))))})};class $m extends wn{constructor(e){super(),this.app=e,this.loadedModules=new WeakMap}async loadModules(e){try{const t=await Oe(()=>Promise.resolve().then(()=>rS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href).then(o=>new o.default(e,this.app)),i=e.querySelectorAll("[data-module]");if(i.length<1)return;let n=0,s=!1;i.forEach(async(o,a)=>{if(this.loadedModules.has(o)){n++,n===i.length&&!s&&(s=!0,this.trigger("loaded"));return}const l=o.getAttribute("data-module"),c=new Set,h=l.split(" ");for(const d of h){if(d===""||d===" "){n++,n===i.length&&!s&&(s=!0,this.trigger("loaded"));return}try{const u=await Ym(Object.assign({"../modules/AspectRatio.js":()=>Oe(()=>Promise.resolve().then(()=>aS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/AssetReveal.js":()=>Oe(()=>Promise.resolve().then(()=>cS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/Button.js":()=>Oe(()=>Promise.resolve().then(()=>uS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/Calendar.js":()=>Oe(()=>Promise.resolve().then(()=>fS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/CaseReveal.js":()=>Oe(()=>Promise.resolve().then(()=>mS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/CharAnimation.js":()=>Oe(()=>Promise.resolve().then(()=>vS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/Cursor.js":()=>Oe(()=>Promise.resolve().then(()=>xS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/Footer.js":()=>Oe(()=>Promise.resolve().then(()=>bS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/FullBleed.js":()=>Oe(()=>Promise.resolve().then(()=>SS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/Goals.js":()=>Oe(()=>Promise.resolve().then(()=>TS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/HomeCta.js":()=>Oe(()=>Promise.resolve().then(()=>ES),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/LineAnimation.js":()=>Oe(()=>Promise.resolve().then(()=>PS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/Marquee.js":()=>Oe(()=>Promise.resolve().then(()=>DS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/MobFade.js":()=>Oe(()=>Promise.resolve().then(()=>OS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/ParagraphAnimation.js":()=>Oe(()=>Promise.resolve().then(()=>zS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/Popup.js":()=>Oe(()=>Promise.resolve().then(()=>kS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/SectionHeading.js":()=>Oe(()=>Promise.resolve().then(()=>HS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/ServicesHero.js":()=>Oe(()=>Promise.resolve().then(()=>WS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/StaggerAnimation.js":()=>Oe(()=>Promise.resolve().then(()=>qS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/Talk.js":()=>Oe(()=>Promise.resolve().then(()=>$S),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/VideoLoader.js":()=>Oe(()=>Promise.resolve().then(()=>LS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/WordAnimation.js":()=>Oe(()=>Promise.resolve().then(()=>jS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),"../modules/Year.js":()=>Oe(()=>Promise.resolve().then(()=>KS),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href)}),`../modules/${d}.js`,3),f=new u.default(o,this.app,e);c.add(f),n++,n===i.length&&!s&&(s=!0,this.trigger("loaded"))}catch(u){console.warn(`❌ ModuleLoader: Failed to load module "${d}": ${u.message}`),n++,n===i.length&&!s&&(s=!0,this.trigger("loaded"))}}c.size>0&&this.loadedModules.set(o,c)})}catch(t){console.warn(`❌ ModuleLoader: Error loading modules: ${t.message}`)}}}const Zm=Object.freeze(Object.defineProperty({__proto__:null,default:$m},Symbol.toStringTag,{value:"Module"}));class jm{constructor(){this.instance=new IntersectionObserver(e=>{e.forEach(t=>{t.target.dataset.visible=t.isIntersecting?"true":"false"})},{root:null,rootMargin:"7.5% 0px 7.5% 0px"})}}const Jm=Object.freeze(Object.defineProperty({__proto__:null,default:jm},Symbol.toStringTag,{value:"Module"}));class Km{constructor(){this.instance=new IntersectionObserver(e=>{e.forEach(t=>{t.target.dataset.animationVisible=t.isIntersecting?"true":"false"})},{root:null,rootMargin:"-25% 0px 7.5% 0px"})}}const Qm=Object.freeze(Object.defineProperty({__proto__:null,default:Km},Symbol.toStringTag,{value:"Module"}));class eg{constructor(){this.active=window.location.hash==="#debug",this.gui=null,this.active&&this.loadGui()}async loadGui(){this.gui=await Oe(()=>Promise.resolve().then(()=>sM),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href),this.gui=new this.gui.default,document.querySelector(".lil-gui.autoPlace").style.setProperty("left","0")}}const tg=Object.freeze(Object.defineProperty({__proto__:null,default:eg},Symbol.toStringTag,{value:"Module"}));/**
* @license
* Copyright 2010-2025 Three.js Authors
* SPDX-License-Identifier: MIT
*/const jr="173",ig={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ng={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Uh=0,Tl=1,Dh=2,sg=3,rg=0,Al=1,Nh=2,Ai=3,Ni=0,kt=1,Ei=2,Oi=0,Sn=1,El=2,Cl=3,Rl=4,Oh=5,sn=100,Fh=101,zh=102,Bh=103,kh=104,Vh=200,Hh=201,Gh=202,Wh=203,Jr=204,Kr=205,Xh=206,qh=207,Yh=208,$h=209,Zh=210,jh=211,Jh=212,Kh=213,Qh=214,Qr=0,eo=1,to=2,Mn=3,io=4,no=5,so=6,ro=7,Xs=0,eu=1,tu=2,Fi=0,iu=1,nu=2,su=3,Pl=4,ru=5,ou=6,au=7,Il="attached",lu="detached",oo=300,zi=301,rn=302,qs=303,Ys=304,os=306,$s=1e3,li=1001,Zs=1002,yt=1003,Ll=1004,og=1004,as=1005,ag=1005,Mt=1006,js=1007,lg=1007,Ci=1008,cg=1008,Ri=1009,Ul=1010,Dl=1011,ls=1012,ao=1013,Bi=1014,Vt=1015,cs=1016,lo=1017,co=1018,Tn=1020,Nl=35902,Ol=1021,Fl=1022,Ut=1023,zl=1024,Bl=1025,An=1026,En=1027,ho=1028,Js=1029,kl=1030,uo=1031,hg=1032,fo=1033,Ks=33776,Qs=33777,er=33778,tr=33779,po=35840,mo=35841,go=35842,vo=35843,yo=36196,xo=37492,_o=37496,bo=37808,wo=37809,So=37810,Mo=37811,To=37812,Ao=37813,Eo=37814,Co=37815,Ro=37816,Po=37817,Io=37818,Lo=37819,Uo=37820,Do=37821,ir=36492,No=36494,Oo=36495,Vl=36283,Fo=36284,zo=36285,Bo=36286,cu=2200,hu=2201,uu=2202,nr=2300,ko=2301,Vo=2302,Cn=2400,Rn=2401,sr=2402,Ho=2500,Hl=2501,ug=0,dg=1,fg=2,du=3200,fu=3201,pg=3202,mg=3203,on=0,pu=1,ki="",Zt="srgb",an="srgb-linear",rr="linear",ut="srgb",gg=0,Pn=7680,vg=7681,yg=7682,xg=7683,_g=34055,bg=34056,wg=5386,Sg=512,Mg=513,Tg=514,Ag=515,Eg=516,Cg=517,Rg=518,Gl=519,mu=512,gu=513,vu=514,Wl=515,yu=516,xu=517,_u=518,bu=519,or=35044,Pg=35048,Ig=35040,Lg=35045,Ug=35049,Dg=35041,Ng=35046,Og=35050,Fg=35042,zg="100",Xl="300 es",di=2e3,ar=2001,Bg={COMPUTE:"compute",RENDER:"render"};class Pi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners;if(i===void 0)return;const n=i[e];if(n!==void 0){const s=n.indexOf(t);s!==-1&&n.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const i=t[e.type];if(i!==void 0){e.target=this;const n=i.slice(0);for(let s=0,o=n.length;s<o;s++)n[s].call(this,e);e.target=null}}}const Dt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let wu=1234567;const In=Math.PI/180,hs=180/Math.PI;function ni(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Dt[r&255]+Dt[r>>8&255]+Dt[r>>16&255]+Dt[r>>24&255]+"-"+Dt[e&255]+Dt[e>>8&255]+"-"+Dt[e>>16&15|64]+Dt[e>>24&255]+"-"+Dt[t&63|128]+Dt[t>>8&255]+"-"+Dt[t>>16&255]+Dt[t>>24&255]+Dt[i&255]+Dt[i>>8&255]+Dt[i>>16&255]+Dt[i>>24&255]).toLowerCase()}function He(r,e,t){return Math.max(e,Math.min(t,r))}function ql(r,e){return(r%e+e)%e}function kg(r,e,t,i,n){return i+(r-e)*(n-i)/(t-e)}function Vg(r,e,t){return r!==e?(t-r)/(e-r):0}function lr(r,e,t){return(1-t)*r+t*e}function Hg(r,e,t,i){return lr(r,e,1-Math.exp(-t*i))}function Gg(r,e=1){return e-Math.abs(ql(r,e*2)-e)}function Wg(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function Xg(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function qg(r,e){return r+Math.floor(Math.random()*(e-r+1))}function Yg(r,e){return r+Math.random()*(e-r)}function $g(r){return r*(.5-Math.random())}function Zg(r){r!==void 0&&(wu=r);let e=wu+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function jg(r){return r*In}function Jg(r){return r*hs}function Kg(r){return(r&r-1)===0&&r!==0}function Qg(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function ev(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function tv(r,e,t,i,n){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+i)/2),h=o((e+i)/2),d=s((e-i)/2),u=o((e-i)/2),f=s((i-e)/2),m=o((i-e)/2);switch(n){case"XYX":r.set(a*h,l*d,l*u,a*c);break;case"YZY":r.set(l*u,a*h,l*d,a*c);break;case"ZXZ":r.set(l*d,l*u,a*h,a*c);break;case"XZX":r.set(a*h,l*m,l*f,a*c);break;case"YXY":r.set(l*f,a*h,l*m,a*c);break;case"ZYZ":r.set(l*m,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function Ht(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Xe(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const iv={DEG2RAD:In,RAD2DEG:hs,generateUUID:ni,clamp:He,euclideanModulo:ql,mapLinear:kg,inverseLerp:Vg,lerp:lr,damp:Hg,pingpong:Gg,smoothstep:Wg,smootherstep:Xg,randInt:qg,randFloat:Yg,randFloatSpread:$g,seededRandom:Zg,degToRad:jg,radToDeg:Jg,isPowerOfTwo:Kg,ceilPowerOfTwo:Qg,floorPowerOfTwo:ev,setQuaternionFromProperEuler:tv,normalize:Xe,denormalize:Ht};class G{constructor(e=0,t=0){G.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=He(this.x,e.x,t.x),this.y=He(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=He(this.x,e,t),this.y=He(this.y,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(He(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(He(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*n+e.x,this.y=s*n+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class We{constructor(e,t,i,n,s,o,a,l,c){We.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,o,a,l,c)}set(e,t,i,n,s,o,a,l,c){const h=this.elements;return h[0]=e,h[1]=n,h[2]=a,h[3]=t,h[4]=s,h[5]=l,h[6]=i,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],h=i[4],d=i[7],u=i[2],f=i[5],m=i[8],v=n[0],g=n[3],p=n[6],x=n[1],y=n[4],_=n[7],C=n[2],T=n[5],A=n[8];return s[0]=o*v+a*x+l*C,s[3]=o*g+a*y+l*T,s[6]=o*p+a*_+l*A,s[1]=c*v+h*x+d*C,s[4]=c*g+h*y+d*T,s[7]=c*p+h*_+d*A,s[2]=u*v+f*x+m*C,s[5]=u*g+f*y+m*T,s[8]=u*p+f*_+m*A,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8];return t*o*h-t*a*c-i*s*h+i*a*l+n*s*c-n*o*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],d=h*o-a*c,u=a*l-h*s,f=c*s-o*l,m=t*d+i*u+n*f;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/m;return e[0]=d*v,e[1]=(n*c-h*i)*v,e[2]=(a*i-n*o)*v,e[3]=u*v,e[4]=(h*t-n*l)*v,e[5]=(n*s-a*t)*v,e[6]=f*v,e[7]=(i*l-c*t)*v,e[8]=(o*t-i*s)*v,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-n*c,n*l,-n*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(Yl.makeScale(e,t)),this}rotate(e){return this.premultiply(Yl.makeRotation(-e)),this}translate(e,t){return this.premultiply(Yl.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Yl=new We;function Su(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const nv={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function us(r,e){return new nv[r](e)}function cr(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Mu(){const r=cr("canvas");return r.style.display="block",r}const Tu={};function ds(r){r in Tu||(Tu[r]=!0,console.warn(r))}function sv(r,e,t){return new Promise(function(i,n){function s(){switch(r.clientWaitSync(e,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:n();break;case r.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:i()}}setTimeout(s,t)})}function rv(r){const e=r.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function ov(r){const e=r.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const Au=new We().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Eu=new We().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function av(){const r={enabled:!0,workingColorSpace:an,spaces:{},convert:function(n,s,o){return this.enabled===!1||s===o||!s||!o||(this.spaces[s].transfer===ut&&(n.r=Vi(n.r),n.g=Vi(n.g),n.b=Vi(n.b)),this.spaces[s].primaries!==this.spaces[o].primaries&&(n.applyMatrix3(this.spaces[s].toXYZ),n.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===ut&&(n.r=fs(n.r),n.g=fs(n.g),n.b=fs(n.b))),n},fromWorkingColorSpace:function(n,s){return this.convert(n,this.workingColorSpace,s)},toWorkingColorSpace:function(n,s){return this.convert(n,s,this.workingColorSpace)},getPrimaries:function(n){return this.spaces[n].primaries},getTransfer:function(n){return n===ki?rr:this.spaces[n].transfer},getLuminanceCoefficients:function(n,s=this.workingColorSpace){return n.fromArray(this.spaces[s].luminanceCoefficients)},define:function(n){Object.assign(this.spaces,n)},_getMatrix:function(n,s,o){return n.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(n){return this.spaces[n].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(n=this.workingColorSpace){return this.spaces[n].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],i=[.3127,.329];return r.define({[an]:{primaries:e,whitePoint:i,transfer:rr,toXYZ:Au,fromXYZ:Eu,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Zt},outputColorSpaceConfig:{drawingBufferColorSpace:Zt}},[Zt]:{primaries:e,whitePoint:i,transfer:ut,toXYZ:Au,fromXYZ:Eu,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Zt}}}),r}const Je=av();function Vi(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function fs(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let ps;class Cu{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{ps===void 0&&(ps=cr("canvas")),ps.width=e.width,ps.height=e.height;const i=ps.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=ps}return t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=cr("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),s=n.data;for(let o=0;o<s.length;o++)s[o]=Vi(s[o]/255)*255;return i.putImageData(n,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Vi(t[i]/255)*255):t[i]=Vi(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let lv=0;class Ln{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:lv++}),this.uuid=ni(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let s;if(Array.isArray(n)){s=[];for(let o=0,a=n.length;o<a;o++)n[o].isDataTexture?s.push($l(n[o].image)):s.push($l(n[o]))}else s=$l(n);i.url=s}return t||(e.images[this.uuid]=i),i}}function $l(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Cu.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let cv=0;class xt extends Pi{constructor(e=xt.DEFAULT_IMAGE,t=xt.DEFAULT_MAPPING,i=li,n=li,s=Mt,o=Ci,a=Ut,l=Ri,c=xt.DEFAULT_ANISOTROPY,h=ki){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:cv++}),this.uuid=ni(),this.name="",this.source=new Ln(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new G(0,0),this.repeat=new G(1,1),this.center=new G(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new We,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==oo)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case $s:e.x=e.x-Math.floor(e.x);break;case li:e.x=e.x<0?0:1;break;case Zs:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case $s:e.y=e.y-Math.floor(e.y);break;case li:e.y=e.y<0?0:1;break;case Zs:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}xt.DEFAULT_IMAGE=null,xt.DEFAULT_MAPPING=oo,xt.DEFAULT_ANISOTROPY=1;class Qe{constructor(e=0,t=0,i=0,n=1){Qe.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*n+o[12]*s,this.y=o[1]*t+o[5]*i+o[9]*n+o[13]*s,this.z=o[2]*t+o[6]*i+o[10]*n+o[14]*s,this.w=o[3]*t+o[7]*i+o[11]*n+o[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,s;const l=e.elements,c=l[0],h=l[4],d=l[8],u=l[1],f=l[5],m=l[9],v=l[2],g=l[6],p=l[10];if(Math.abs(h-u)<.01&&Math.abs(d-v)<.01&&Math.abs(m-g)<.01){if(Math.abs(h+u)<.1&&Math.abs(d+v)<.1&&Math.abs(m+g)<.1&&Math.abs(c+f+p-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,_=(f+1)/2,C=(p+1)/2,T=(h+u)/4,A=(d+v)/4,I=(m+g)/4;return y>_&&y>C?y<.01?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(y),n=T/i,s=A/i):_>C?_<.01?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(_),i=T/n,s=I/n):C<.01?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(C),i=A/s,n=I/s),this.set(i,n,s,t),this}let x=Math.sqrt((g-m)*(g-m)+(d-v)*(d-v)+(u-h)*(u-h));return Math.abs(x)<.001&&(x=1),this.x=(g-m)/x,this.y=(d-v)/x,this.z=(u-h)/x,this.w=Math.acos((c+f+p-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=He(this.x,e.x,t.x),this.y=He(this.y,e.y,t.y),this.z=He(this.z,e.z,t.z),this.w=He(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=He(this.x,e,t),this.y=He(this.y,e,t),this.z=He(this.z,e,t),this.w=He(this.w,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(He(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Go extends Pi{constructor(e=1,t=1,i={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Qe(0,0,e,t),this.scissorTest=!1,this.viewport=new Qe(0,0,e,t);const n={width:e,height:t,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Mt,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const s=new xt(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);s.flipY=!1,s.generateMipmaps=i.generateMipmaps,s.internalFormat=i.internalFormat,this.textures=[];const o=i.count;for(let a=0;a<o;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,s=this.textures.length;n<s;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let i=0,n=e.textures.length;i<n;i++)this.textures[i]=e.textures[i].clone(),this.textures[i].isRenderTargetTexture=!0,this.textures[i].renderTarget=this;const t=Object.assign({},e.texture.image);return this.texture.source=new Ln(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class jt extends Go{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class hr extends xt{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=yt,this.minFilter=yt,this.wrapR=li,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class hv extends jt{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new hr(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class Wo extends xt{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=yt,this.minFilter=yt,this.wrapR=li,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class uv extends jt{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new Wo(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class Jt{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,s,o,a){let l=i[n+0],c=i[n+1],h=i[n+2],d=i[n+3];const u=s[o+0],f=s[o+1],m=s[o+2],v=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=d;return}if(a===1){e[t+0]=u,e[t+1]=f,e[t+2]=m,e[t+3]=v;return}if(d!==v||l!==u||c!==f||h!==m){let g=1-a;const p=l*u+c*f+h*m+d*v,x=p>=0?1:-1,y=1-p*p;if(y>Number.EPSILON){const C=Math.sqrt(y),T=Math.atan2(C,p*x);g=Math.sin(g*T)/C,a=Math.sin(a*T)/C}const _=a*x;if(l=l*g+u*_,c=c*g+f*_,h=h*g+m*_,d=d*g+v*_,g===1-a){const C=1/Math.sqrt(l*l+c*c+h*h+d*d);l*=C,c*=C,h*=C,d*=C}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=d}static multiplyQuaternionsFlat(e,t,i,n,s,o){const a=i[n],l=i[n+1],c=i[n+2],h=i[n+3],d=s[o],u=s[o+1],f=s[o+2],m=s[o+3];return e[t]=a*m+h*d+l*f-c*u,e[t+1]=l*m+h*u+c*d-a*f,e[t+2]=c*m+h*f+a*u-l*d,e[t+3]=h*m-a*d-l*u-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),h=a(n/2),d=a(s/2),u=l(i/2),f=l(n/2),m=l(s/2);switch(o){case"XYZ":this._x=u*h*d+c*f*m,this._y=c*f*d-u*h*m,this._z=c*h*m+u*f*d,this._w=c*h*d-u*f*m;break;case"YXZ":this._x=u*h*d+c*f*m,this._y=c*f*d-u*h*m,this._z=c*h*m-u*f*d,this._w=c*h*d+u*f*m;break;case"ZXY":this._x=u*h*d-c*f*m,this._y=c*f*d+u*h*m,this._z=c*h*m+u*f*d,this._w=c*h*d-u*f*m;break;case"ZYX":this._x=u*h*d-c*f*m,this._y=c*f*d+u*h*m,this._z=c*h*m-u*f*d,this._w=c*h*d+u*f*m;break;case"YZX":this._x=u*h*d+c*f*m,this._y=c*f*d+u*h*m,this._z=c*h*m-u*f*d,this._w=c*h*d-u*f*m;break;case"XZY":this._x=u*h*d-c*f*m,this._y=c*f*d-u*h*m,this._z=c*h*m+u*f*d,this._w=c*h*d+u*f*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],h=t[6],d=t[10],u=i+a+d;if(u>0){const f=.5/Math.sqrt(u+1);this._w=.25/f,this._x=(h-l)*f,this._y=(s-c)*f,this._z=(o-n)*f}else if(i>a&&i>d){const f=2*Math.sqrt(1+i-a-d);this._w=(h-l)/f,this._x=.25*f,this._y=(n+o)/f,this._z=(s+c)/f}else if(a>d){const f=2*Math.sqrt(1+a-i-d);this._w=(s-c)/f,this._x=(n+o)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+d-i-a);this._w=(o-n)/f,this._x=(s+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(He(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,h=t._w;return this._x=i*h+o*a+n*c-s*l,this._y=n*h+o*l+s*a-i*c,this._z=s*h+o*c+i*l-n*a,this._w=o*h-i*a-n*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+n*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=n,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*i+t*this._x,this._y=f*n+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),d=Math.sin((1-t)*h)/c,u=Math.sin(t*h)/c;return this._w=o*d+this._w*u,this._x=i*d+this._x*u,this._y=n*d+this._y*u,this._z=s*d+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class P{constructor(e=0,t=0,i=0){P.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Ru.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Ru.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*n,this.y=s[1]*t+s[4]*i+s[7]*n,this.z=s[2]*t+s[5]*i+s[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=e.elements,o=1/(s[3]*t+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*n+s[12])*o,this.y=(s[1]*t+s[5]*i+s[9]*n+s[13])*o,this.z=(s[2]*t+s[6]*i+s[10]*n+s[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*n-a*i),h=2*(a*t-s*n),d=2*(s*i-o*t);return this.x=t+l*c+o*d-a*h,this.y=i+l*h+a*c-s*d,this.z=n+l*d+s*h-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n,this.y=s[1]*t+s[5]*i+s[9]*n,this.z=s[2]*t+s[6]*i+s[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=He(this.x,e.x,t.x),this.y=He(this.y,e.y,t.y),this.z=He(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=He(this.x,e,t),this.y=He(this.y,e,t),this.z=He(this.z,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(He(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=n*l-s*a,this.y=s*o-i*l,this.z=i*a-n*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Zl.copy(this).projectOnVector(e),this.sub(Zl)}reflect(e){return this.sub(Zl.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(He(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Zl=new P,Ru=new Jt;class Gt{constructor(e=new P(1/0,1/0,1/0),t=new P(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(fi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(fi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=fi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,fi):fi.fromBufferAttribute(s,o),fi.applyMatrix4(e.matrixWorld),this.expandByPoint(fi);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Xo.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Xo.copy(i.boundingBox)),Xo.applyMatrix4(e.matrixWorld),this.union(Xo)}const n=e.children;for(let s=0,o=n.length;s<o;s++)this.expandByObject(n[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,fi),fi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ur),qo.subVectors(this.max,ur),ms.subVectors(e.a,ur),gs.subVectors(e.b,ur),vs.subVectors(e.c,ur),ln.subVectors(gs,ms),cn.subVectors(vs,gs),Un.subVectors(ms,vs);let t=[0,-ln.z,ln.y,0,-cn.z,cn.y,0,-Un.z,Un.y,ln.z,0,-ln.x,cn.z,0,-cn.x,Un.z,0,-Un.x,-ln.y,ln.x,0,-cn.y,cn.x,0,-Un.y,Un.x,0];return!jl(t,ms,gs,vs,qo)||(t=[1,0,0,0,1,0,0,0,1],!jl(t,ms,gs,vs,qo))?!1:(Yo.crossVectors(ln,cn),t=[Yo.x,Yo.y,Yo.z],jl(t,ms,gs,vs,qo))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,fi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(fi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Hi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Hi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Hi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Hi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Hi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Hi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Hi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Hi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Hi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Hi=[new P,new P,new P,new P,new P,new P,new P,new P],fi=new P,Xo=new Gt,ms=new P,gs=new P,vs=new P,ln=new P,cn=new P,Un=new P,ur=new P,qo=new P,Yo=new P,Dn=new P;function jl(r,e,t,i,n){for(let s=0,o=r.length-3;s<=o;s+=3){Dn.fromArray(r,s);const a=n.x*Math.abs(Dn.x)+n.y*Math.abs(Dn.y)+n.z*Math.abs(Dn.z),l=e.dot(Dn),c=t.dot(Dn),h=i.dot(Dn);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const dv=new Gt,dr=new P,Jl=new P;class Nt{constructor(e=new P,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):dv.setFromPoints(e).getCenter(i);let n=0;for(let s=0,o=e.length;s<o;s++)n=Math.max(n,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;dr.subVectors(e,this.center);const t=dr.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(dr,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Jl.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(dr.copy(e.center).add(Jl)),this.expandByPoint(dr.copy(e.center).sub(Jl))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Gi=new P,Kl=new P,$o=new P,hn=new P,Ql=new P,Zo=new P,ec=new P;class ys{constructor(e=new P,t=new P(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Gi)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Gi.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Gi.copy(this.origin).addScaledVector(this.direction,t),Gi.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){Kl.copy(e).add(t).multiplyScalar(.5),$o.copy(t).sub(e).normalize(),hn.copy(this.origin).sub(Kl);const s=e.distanceTo(t)*.5,o=-this.direction.dot($o),a=hn.dot(this.direction),l=-hn.dot($o),c=hn.lengthSq(),h=Math.abs(1-o*o);let d,u,f,m;if(h>0)if(d=o*l-a,u=o*a-l,m=s*h,d>=0)if(u>=-m)if(u<=m){const v=1/h;d*=v,u*=v,f=d*(d+o*u+2*a)+u*(o*d+u+2*l)+c}else u=s,d=Math.max(0,-(o*u+a)),f=-d*d+u*(u+2*l)+c;else u=-s,d=Math.max(0,-(o*u+a)),f=-d*d+u*(u+2*l)+c;else u<=-m?(d=Math.max(0,-(-o*s+a)),u=d>0?-s:Math.min(Math.max(-s,-l),s),f=-d*d+u*(u+2*l)+c):u<=m?(d=0,u=Math.min(Math.max(-s,-l),s),f=u*(u+2*l)+c):(d=Math.max(0,-(o*s+a)),u=d>0?s:Math.min(Math.max(-s,-l),s),f=-d*d+u*(u+2*l)+c);else u=o>0?-s:s,d=Math.max(0,-(o*u+a)),f=-d*d+u*(u+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,d),n&&n.copy(Kl).addScaledVector($o,u),f}intersectSphere(e,t){Gi.subVectors(e.center,this.origin);const i=Gi.dot(this.direction),n=Gi.dot(Gi)-i*i,s=e.radius*e.radius;if(n>s)return null;const o=Math.sqrt(s-n),a=i-o,l=i+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,s,o,a,l;const c=1/this.direction.x,h=1/this.direction.y,d=1/this.direction.z,u=this.origin;return c>=0?(i=(e.min.x-u.x)*c,n=(e.max.x-u.x)*c):(i=(e.max.x-u.x)*c,n=(e.min.x-u.x)*c),h>=0?(s=(e.min.y-u.y)*h,o=(e.max.y-u.y)*h):(s=(e.max.y-u.y)*h,o=(e.min.y-u.y)*h),i>o||s>n||((s>i||isNaN(i))&&(i=s),(o<n||isNaN(n))&&(n=o),d>=0?(a=(e.min.z-u.z)*d,l=(e.max.z-u.z)*d):(a=(e.max.z-u.z)*d,l=(e.min.z-u.z)*d),i>l||a>n)||((a>i||i!==i)&&(i=a),(l<n||n!==n)&&(n=l),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return this.intersectBox(e,Gi)!==null}intersectTriangle(e,t,i,n,s){Ql.subVectors(t,e),Zo.subVectors(i,e),ec.crossVectors(Ql,Zo);let o=this.direction.dot(ec),a;if(o>0){if(n)return null;a=1}else if(o<0)a=-1,o=-o;else return null;hn.subVectors(this.origin,e);const l=a*this.direction.dot(Zo.crossVectors(hn,Zo));if(l<0)return null;const c=a*this.direction.dot(Ql.cross(hn));if(c<0||l+c>o)return null;const h=-a*hn.dot(ec);return h<0?null:this.at(h/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ze{constructor(e,t,i,n,s,o,a,l,c,h,d,u,f,m,v,g){ze.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,o,a,l,c,h,d,u,f,m,v,g)}set(e,t,i,n,s,o,a,l,c,h,d,u,f,m,v,g){const p=this.elements;return p[0]=e,p[4]=t,p[8]=i,p[12]=n,p[1]=s,p[5]=o,p[9]=a,p[13]=l,p[2]=c,p[6]=h,p[10]=d,p[14]=u,p[3]=f,p[7]=m,p[11]=v,p[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ze().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/xs.setFromMatrixColumn(e,0).length(),s=1/xs.setFromMatrixColumn(e,1).length(),o=1/xs.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(n),c=Math.sin(n),h=Math.cos(s),d=Math.sin(s);if(e.order==="XYZ"){const u=o*h,f=o*d,m=a*h,v=a*d;t[0]=l*h,t[4]=-l*d,t[8]=c,t[1]=f+m*c,t[5]=u-v*c,t[9]=-a*l,t[2]=v-u*c,t[6]=m+f*c,t[10]=o*l}else if(e.order==="YXZ"){const u=l*h,f=l*d,m=c*h,v=c*d;t[0]=u+v*a,t[4]=m*a-f,t[8]=o*c,t[1]=o*d,t[5]=o*h,t[9]=-a,t[2]=f*a-m,t[6]=v+u*a,t[10]=o*l}else if(e.order==="ZXY"){const u=l*h,f=l*d,m=c*h,v=c*d;t[0]=u-v*a,t[4]=-o*d,t[8]=m+f*a,t[1]=f+m*a,t[5]=o*h,t[9]=v-u*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const u=o*h,f=o*d,m=a*h,v=a*d;t[0]=l*h,t[4]=m*c-f,t[8]=u*c+v,t[1]=l*d,t[5]=v*c+u,t[9]=f*c-m,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const u=o*l,f=o*c,m=a*l,v=a*c;t[0]=l*h,t[4]=v-u*d,t[8]=m*d+f,t[1]=d,t[5]=o*h,t[9]=-a*h,t[2]=-c*h,t[6]=f*d+m,t[10]=u-v*d}else if(e.order==="XZY"){const u=o*l,f=o*c,m=a*l,v=a*c;t[0]=l*h,t[4]=-d,t[8]=c*h,t[1]=u*d+v,t[5]=o*h,t[9]=f*d-m,t[2]=m*d-f,t[6]=a*h,t[10]=v*d+u}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(fv,e,pv)}lookAt(e,t,i){const n=this.elements;return si.subVectors(e,t),si.lengthSq()===0&&(si.z=1),si.normalize(),un.crossVectors(i,si),un.lengthSq()===0&&(Math.abs(i.z)===1?si.x+=1e-4:si.z+=1e-4,si.normalize(),un.crossVectors(i,si)),un.normalize(),jo.crossVectors(si,un),n[0]=un.x,n[4]=jo.x,n[8]=si.x,n[1]=un.y,n[5]=jo.y,n[9]=si.y,n[2]=un.z,n[6]=jo.z,n[10]=si.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],h=i[1],d=i[5],u=i[9],f=i[13],m=i[2],v=i[6],g=i[10],p=i[14],x=i[3],y=i[7],_=i[11],C=i[15],T=n[0],A=n[4],I=n[8],S=n[12],b=n[1],L=n[5],D=n[9],F=n[13],B=n[2],Y=n[6],H=n[10],Q=n[14],q=n[3],te=n[7],ce=n[11],fe=n[15];return s[0]=o*T+a*b+l*B+c*q,s[4]=o*A+a*L+l*Y+c*te,s[8]=o*I+a*D+l*H+c*ce,s[12]=o*S+a*F+l*Q+c*fe,s[1]=h*T+d*b+u*B+f*q,s[5]=h*A+d*L+u*Y+f*te,s[9]=h*I+d*D+u*H+f*ce,s[13]=h*S+d*F+u*Q+f*fe,s[2]=m*T+v*b+g*B+p*q,s[6]=m*A+v*L+g*Y+p*te,s[10]=m*I+v*D+g*H+p*ce,s[14]=m*S+v*F+g*Q+p*fe,s[3]=x*T+y*b+_*B+C*q,s[7]=x*A+y*L+_*Y+C*te,s[11]=x*I+y*D+_*H+C*ce,s[15]=x*S+y*F+_*Q+C*fe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],h=e[2],d=e[6],u=e[10],f=e[14],m=e[3],v=e[7],g=e[11],p=e[15];return m*(+s*l*d-n*c*d-s*a*u+i*c*u+n*a*f-i*l*f)+v*(+t*l*f-t*c*u+s*o*u-n*o*f+n*c*h-s*l*h)+g*(+t*c*d-t*a*f-s*o*d+i*o*f+s*a*h-i*c*h)+p*(-n*a*h-t*l*d+t*a*u+n*o*d-i*o*u+i*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],h=e[8],d=e[9],u=e[10],f=e[11],m=e[12],v=e[13],g=e[14],p=e[15],x=d*g*c-v*u*c+v*l*f-a*g*f-d*l*p+a*u*p,y=m*u*c-h*g*c-m*l*f+o*g*f+h*l*p-o*u*p,_=h*v*c-m*d*c+m*a*f-o*v*f-h*a*p+o*d*p,C=m*d*l-h*v*l-m*a*u+o*v*u+h*a*g-o*d*g,T=t*x+i*y+n*_+s*C;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const A=1/T;return e[0]=x*A,e[1]=(v*u*s-d*g*s-v*n*f+i*g*f+d*n*p-i*u*p)*A,e[2]=(a*g*s-v*l*s+v*n*c-i*g*c-a*n*p+i*l*p)*A,e[3]=(d*l*s-a*u*s-d*n*c+i*u*c+a*n*f-i*l*f)*A,e[4]=y*A,e[5]=(h*g*s-m*u*s+m*n*f-t*g*f-h*n*p+t*u*p)*A,e[6]=(m*l*s-o*g*s-m*n*c+t*g*c+o*n*p-t*l*p)*A,e[7]=(o*u*s-h*l*s+h*n*c-t*u*c-o*n*f+t*l*f)*A,e[8]=_*A,e[9]=(m*d*s-h*v*s-m*i*f+t*v*f+h*i*p-t*d*p)*A,e[10]=(o*v*s-m*a*s+m*i*c-t*v*c-o*i*p+t*a*p)*A,e[11]=(h*a*s-o*d*s-h*i*c+t*d*c+o*i*f-t*a*f)*A,e[12]=C*A,e[13]=(h*v*n-m*d*n+m*i*u-t*v*u-h*i*g+t*d*g)*A,e[14]=(m*a*n-o*v*n-m*i*l+t*v*l+o*i*g-t*a*g)*A,e[15]=(o*d*n-h*a*n+h*i*l-t*d*l-o*i*u+t*a*u)*A,this}scale(e){const t=this.elements,i=e.x,n=e.y,s=e.z;return t[0]*=i,t[4]*=n,t[8]*=s,t[1]*=i,t[5]*=n,t[9]*=s,t[2]*=i,t[6]*=n,t[10]*=s,t[3]*=i,t[7]*=n,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),s=1-i,o=e.x,a=e.y,l=e.z,c=s*o,h=s*a;return this.set(c*o+i,c*a-n*l,c*l+n*a,0,c*a+n*l,h*a+i,h*l-n*o,0,c*l-n*a,h*l+n*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,s,o){return this.set(1,i,s,0,e,1,o,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,h=o+o,d=a+a,u=s*c,f=s*h,m=s*d,v=o*h,g=o*d,p=a*d,x=l*c,y=l*h,_=l*d,C=i.x,T=i.y,A=i.z;return n[0]=(1-(v+p))*C,n[1]=(f+_)*C,n[2]=(m-y)*C,n[3]=0,n[4]=(f-_)*T,n[5]=(1-(u+p))*T,n[6]=(g+x)*T,n[7]=0,n[8]=(m+y)*A,n[9]=(g-x)*A,n[10]=(1-(u+v))*A,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let s=xs.set(n[0],n[1],n[2]).length();const o=xs.set(n[4],n[5],n[6]).length(),a=xs.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),e.x=n[12],e.y=n[13],e.z=n[14],pi.copy(this);const c=1/s,h=1/o,d=1/a;return pi.elements[0]*=c,pi.elements[1]*=c,pi.elements[2]*=c,pi.elements[4]*=h,pi.elements[5]*=h,pi.elements[6]*=h,pi.elements[8]*=d,pi.elements[9]*=d,pi.elements[10]*=d,t.setFromRotationMatrix(pi),i.x=s,i.y=o,i.z=a,this}makePerspective(e,t,i,n,s,o,a=di){const l=this.elements,c=2*s/(t-e),h=2*s/(i-n),d=(t+e)/(t-e),u=(i+n)/(i-n);let f,m;if(a===di)f=-(o+s)/(o-s),m=-2*o*s/(o-s);else if(a===ar)f=-o/(o-s),m=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=d,l[12]=0,l[1]=0,l[5]=h,l[9]=u,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=m,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,i,n,s,o,a=di){const l=this.elements,c=1/(t-e),h=1/(i-n),d=1/(o-s),u=(t+e)*c,f=(i+n)*h;let m,v;if(a===di)m=(o+s)*d,v=-2*d;else if(a===ar)m=s*d,v=-1*d;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-u,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=v,l[14]=-m,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const xs=new P,pi=new ze,fv=new P(0,0,0),pv=new P(1,1,1),un=new P,jo=new P,si=new P,Pu=new ze,Iu=new Jt;class ri{constructor(e=0,t=0,i=0,n=ri.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,s=n[0],o=n[4],a=n[8],l=n[1],c=n[5],h=n[9],d=n[2],u=n[6],f=n[10];switch(t){case"XYZ":this._y=Math.asin(He(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(u,c),this._z=0);break;case"YXZ":this._x=Math.asin(-He(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-d,s),this._z=0);break;case"ZXY":this._x=Math.asin(He(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-d,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-He(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(u,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(He(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-d,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-He(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(u,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return Pu.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Pu,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Iu.setFromEuler(this),this.setFromQuaternion(Iu,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ri.DEFAULT_ORDER="XYZ";class Jo{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let mv=0;const Lu=new P,_s=new Jt,Wi=new ze,Ko=new P,fr=new P,gv=new P,vv=new Jt,Uu=new P(1,0,0),Du=new P(0,1,0),Nu=new P(0,0,1),Ou={type:"added"},yv={type:"removed"},bs={type:"childadded",child:null},tc={type:"childremoved",child:null};class et extends Pi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:mv++}),this.uuid=ni(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=et.DEFAULT_UP.clone();const e=new P,t=new ri,i=new Jt,n=new P(1,1,1);function s(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new ze},normalMatrix:{value:new We}}),this.matrix=new ze,this.matrixWorld=new ze,this.matrixAutoUpdate=et.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=et.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Jo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return _s.setFromAxisAngle(e,t),this.quaternion.multiply(_s),this}rotateOnWorldAxis(e,t){return _s.setFromAxisAngle(e,t),this.quaternion.premultiply(_s),this}rotateX(e){return this.rotateOnAxis(Uu,e)}rotateY(e){return this.rotateOnAxis(Du,e)}rotateZ(e){return this.rotateOnAxis(Nu,e)}translateOnAxis(e,t){return Lu.copy(e).applyQuaternion(this.quaternion),this.position.add(Lu.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Uu,e)}translateY(e){return this.translateOnAxis(Du,e)}translateZ(e){return this.translateOnAxis(Nu,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Wi.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Ko.copy(e):Ko.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),fr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Wi.lookAt(fr,Ko,this.up):Wi.lookAt(Ko,fr,this.up),this.quaternion.setFromRotationMatrix(Wi),n&&(Wi.extractRotation(n.matrixWorld),_s.setFromRotationMatrix(Wi),this.quaternion.premultiply(_s.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Ou),bs.child=e,this.dispatchEvent(bs),bs.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(yv),tc.child=e,this.dispatchEvent(tc),tc.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Wi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Wi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Wi),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Ou),bs.child=e,this.dispatchEvent(bs),bs.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let s=0,o=n.length;s<o;s++)n[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fr,e,gv),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fr,vv,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const n=this.children;for(let s=0,o=n.length;s<o;s++)n[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),this.boundingBox!==null&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()}));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const d=l[c];s(e.shapes,d)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));n.material=a}else n.material=s(e.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];n.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),h=o(e.images),d=o(e.shapes),u=o(e.skeletons),f=o(e.animations),m=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),d.length>0&&(i.shapes=d),u.length>0&&(i.skeletons=u),f.length>0&&(i.animations=f),m.length>0&&(i.nodes=m)}return i.object=n,i;function o(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}}et.DEFAULT_UP=new P(0,1,0),et.DEFAULT_MATRIX_AUTO_UPDATE=!0,et.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const mi=new P,Xi=new P,ic=new P,qi=new P,ws=new P,Ss=new P,Fu=new P,nc=new P,sc=new P,rc=new P,oc=new Qe,ac=new Qe,lc=new Qe;class Kt{constructor(e=new P,t=new P,i=new P){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),mi.subVectors(e,t),n.cross(mi);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(e,t,i,n,s){mi.subVectors(n,t),Xi.subVectors(i,t),ic.subVectors(e,t);const o=mi.dot(mi),a=mi.dot(Xi),l=mi.dot(ic),c=Xi.dot(Xi),h=Xi.dot(ic),d=o*c-a*a;if(d===0)return s.set(0,0,0),null;const u=1/d,f=(c*l-a*h)*u,m=(o*h-a*l)*u;return s.set(1-f-m,m,f)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,qi)===null?!1:qi.x>=0&&qi.y>=0&&qi.x+qi.y<=1}static getInterpolation(e,t,i,n,s,o,a,l){return this.getBarycoord(e,t,i,n,qi)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,qi.x),l.addScaledVector(o,qi.y),l.addScaledVector(a,qi.z),l)}static getInterpolatedAttribute(e,t,i,n,s,o){return oc.setScalar(0),ac.setScalar(0),lc.setScalar(0),oc.fromBufferAttribute(e,t),ac.fromBufferAttribute(e,i),lc.fromBufferAttribute(e,n),o.setScalar(0),o.addScaledVector(oc,s.x),o.addScaledVector(ac,s.y),o.addScaledVector(lc,s.z),o}static isFrontFacing(e,t,i,n){return mi.subVectors(i,t),Xi.subVectors(e,t),mi.cross(Xi).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return mi.subVectors(this.c,this.b),Xi.subVectors(this.a,this.b),mi.cross(Xi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Kt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Kt.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,s){return Kt.getInterpolation(e,this.a,this.b,this.c,t,i,n,s)}containsPoint(e){return Kt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Kt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,s=this.c;let o,a;ws.subVectors(n,i),Ss.subVectors(s,i),nc.subVectors(e,i);const l=ws.dot(nc),c=Ss.dot(nc);if(l<=0&&c<=0)return t.copy(i);sc.subVectors(e,n);const h=ws.dot(sc),d=Ss.dot(sc);if(h>=0&&d<=h)return t.copy(n);const u=l*d-h*c;if(u<=0&&l>=0&&h<=0)return o=l/(l-h),t.copy(i).addScaledVector(ws,o);rc.subVectors(e,s);const f=ws.dot(rc),m=Ss.dot(rc);if(m>=0&&f<=m)return t.copy(s);const v=f*c-l*m;if(v<=0&&c>=0&&m<=0)return a=c/(c-m),t.copy(i).addScaledVector(Ss,a);const g=h*m-f*d;if(g<=0&&d-h>=0&&f-m>=0)return Fu.subVectors(s,n),a=(d-h)/(d-h+(f-m)),t.copy(n).addScaledVector(Fu,a);const p=1/(g+v+u);return o=v*p,a=u*p,t.copy(i).addScaledVector(ws,o).addScaledVector(Ss,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const zu={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},dn={h:0,s:0,l:0},Qo={h:0,s:0,l:0};function cc(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class le{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Zt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Je.toWorkingColorSpace(this,t),this}setRGB(e,t,i,n=Je.workingColorSpace){return this.r=e,this.g=t,this.b=i,Je.toWorkingColorSpace(this,n),this}setHSL(e,t,i,n=Je.workingColorSpace){if(e=ql(e,1),t=He(t,0,1),i=He(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,o=2*i-s;this.r=cc(o,s,e+1/3),this.g=cc(o,s,e),this.b=cc(o,s,e-1/3)}return Je.toWorkingColorSpace(this,n),this}setStyle(e,t=Zt){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=n[1],a=n[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=n[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Zt){const i=zu[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Vi(e.r),this.g=Vi(e.g),this.b=Vi(e.b),this}copyLinearToSRGB(e){return this.r=fs(e.r),this.g=fs(e.g),this.b=fs(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Zt){return Je.fromWorkingColorSpace(Ot.copy(this),e),Math.round(He(Ot.r*255,0,255))*65536+Math.round(He(Ot.g*255,0,255))*256+Math.round(He(Ot.b*255,0,255))}getHexString(e=Zt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Je.workingColorSpace){Je.fromWorkingColorSpace(Ot.copy(this),t);const i=Ot.r,n=Ot.g,s=Ot.b,o=Math.max(i,n,s),a=Math.min(i,n,s);let l,c;const h=(a+o)/2;if(a===o)l=0,c=0;else{const d=o-a;switch(c=h<=.5?d/(o+a):d/(2-o-a),o){case i:l=(n-s)/d+(n<s?6:0);break;case n:l=(s-i)/d+2;break;case s:l=(i-n)/d+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=Je.workingColorSpace){return Je.fromWorkingColorSpace(Ot.copy(this),t),e.r=Ot.r,e.g=Ot.g,e.b=Ot.b,e}getStyle(e=Zt){Je.fromWorkingColorSpace(Ot.copy(this),e);const t=Ot.r,i=Ot.g,n=Ot.b;return e!==Zt?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(e,t,i){return this.getHSL(dn),this.setHSL(dn.h+e,dn.s+t,dn.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(dn),e.getHSL(Qo);const i=lr(dn.h,Qo.h,t),n=lr(dn.s,Qo.s,t),s=lr(dn.l,Qo.l,t);return this.setHSL(i,n,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*n,this.g=s[1]*t+s[4]*i+s[7]*n,this.b=s[2]*t+s[5]*i+s[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Ot=new le;le.NAMES=zu;let xv=0;class Ft extends Pi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:xv++}),this.uuid=ni(),this.name="",this.type="Material",this.blending=Sn,this.side=Ni,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Jr,this.blendDst=Kr,this.blendEquation=sn,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new le(0,0,0),this.blendAlpha=0,this.depthFunc=Mn,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Gl,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Pn,this.stencilZFail=Pn,this.stencilZPass=Pn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Sn&&(i.blending=this.blending),this.side!==Ni&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==Jr&&(i.blendSrc=this.blendSrc),this.blendDst!==Kr&&(i.blendDst=this.blendDst),this.blendEquation!==sn&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Mn&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Gl&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Pn&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Pn&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Pn&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=n(e.textures),o=n(e.images);s.length>0&&(i.textures=s),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class fn extends Ft{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ri,this.combine=Xs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Yi=_v();function _v(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),i=new Uint32Array(512),n=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(i[l]=0,i[l|256]=32768,n[l]=24,n[l|256]=24):c<-14?(i[l]=1024>>-c-14,i[l|256]=1024>>-c-14|32768,n[l]=-c-1,n[l|256]=-c-1):c<=15?(i[l]=c+15<<10,i[l|256]=c+15<<10|32768,n[l]=13,n[l|256]=13):c<128?(i[l]=31744,i[l|256]=64512,n[l]=24,n[l|256]=24):(i[l]=31744,i[l|256]=64512,n[l]=13,n[l|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;(c&8388608)===0;)c<<=1,h-=8388608;c&=-8388609,h+=947912704,s[l]=c|h}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:n,mantissaTable:s,exponentTable:o,offsetTable:a}}function Qt(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=He(r,-65504,65504),Yi.floatView[0]=r;const e=Yi.uint32View[0],t=e>>23&511;return Yi.baseTable[t]+((e&8388607)>>Yi.shiftTable[t])}function pr(r){const e=r>>10;return Yi.uint32View[0]=Yi.mantissaTable[Yi.offsetTable[e]+(r&1023)]+Yi.exponentTable[e],Yi.floatView[0]}const bv={toHalfFloat:Qt,fromHalfFloat:pr},At=new P,ea=new G;let wv=0;class ft{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:wv++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=or,this.updateRanges=[],this.gpuType=Vt,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)ea.fromBufferAttribute(this,t),ea.applyMatrix3(e),this.setXY(t,ea.x,ea.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)At.fromBufferAttribute(this,t),At.applyMatrix3(e),this.setXYZ(t,At.x,At.y,At.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)At.fromBufferAttribute(this,t),At.applyMatrix4(e),this.setXYZ(t,At.x,At.y,At.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)At.fromBufferAttribute(this,t),At.applyNormalMatrix(e),this.setXYZ(t,At.x,At.y,At.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)At.fromBufferAttribute(this,t),At.transformDirection(e),this.setXYZ(t,At.x,At.y,At.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=Ht(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=Xe(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Ht(t,this.array)),t}setX(e,t){return this.normalized&&(t=Xe(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Ht(t,this.array)),t}setY(e,t){return this.normalized&&(t=Xe(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Ht(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Xe(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Ht(t,this.array)),t}setW(e,t){return this.normalized&&(t=Xe(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=Xe(t,this.array),i=Xe(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=Xe(t,this.array),i=Xe(i,this.array),n=Xe(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=Xe(t,this.array),i=Xe(i,this.array),n=Xe(n,this.array),s=Xe(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==or&&(e.usage=this.usage),e}}class Sv extends ft{constructor(e,t,i){super(new Int8Array(e),t,i)}}class Mv extends ft{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class Tv extends ft{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class Av extends ft{constructor(e,t,i){super(new Int16Array(e),t,i)}}class hc extends ft{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class Ev extends ft{constructor(e,t,i){super(new Int32Array(e),t,i)}}class uc extends ft{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class Cv extends ft{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=pr(this.array[e*this.itemSize]);return this.normalized&&(t=Ht(t,this.array)),t}setX(e,t){return this.normalized&&(t=Xe(t,this.array)),this.array[e*this.itemSize]=Qt(t),this}getY(e){let t=pr(this.array[e*this.itemSize+1]);return this.normalized&&(t=Ht(t,this.array)),t}setY(e,t){return this.normalized&&(t=Xe(t,this.array)),this.array[e*this.itemSize+1]=Qt(t),this}getZ(e){let t=pr(this.array[e*this.itemSize+2]);return this.normalized&&(t=Ht(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Xe(t,this.array)),this.array[e*this.itemSize+2]=Qt(t),this}getW(e){let t=pr(this.array[e*this.itemSize+3]);return this.normalized&&(t=Ht(t,this.array)),t}setW(e,t){return this.normalized&&(t=Xe(t,this.array)),this.array[e*this.itemSize+3]=Qt(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=Xe(t,this.array),i=Xe(i,this.array)),this.array[e+0]=Qt(t),this.array[e+1]=Qt(i),this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=Xe(t,this.array),i=Xe(i,this.array),n=Xe(n,this.array)),this.array[e+0]=Qt(t),this.array[e+1]=Qt(i),this.array[e+2]=Qt(n),this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=Xe(t,this.array),i=Xe(i,this.array),n=Xe(n,this.array),s=Xe(s,this.array)),this.array[e+0]=Qt(t),this.array[e+1]=Qt(i),this.array[e+2]=Qt(n),this.array[e+3]=Qt(s),this}}class Re extends ft{constructor(e,t,i){super(new Float32Array(e),t,i)}}let Rv=0;const ci=new ze,dc=new et,Ms=new P,oi=new Gt,mr=new Gt,Pt=new P;class qe extends Pi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Rv++}),this.uuid=ni(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Su(e)?uc:hc)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new We().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ci.makeRotationFromQuaternion(e),this.applyMatrix4(ci),this}rotateX(e){return ci.makeRotationX(e),this.applyMatrix4(ci),this}rotateY(e){return ci.makeRotationY(e),this.applyMatrix4(ci),this}rotateZ(e){return ci.makeRotationZ(e),this.applyMatrix4(ci),this}translate(e,t,i){return ci.makeTranslation(e,t,i),this.applyMatrix4(ci),this}scale(e,t,i){return ci.makeScale(e,t,i),this.applyMatrix4(ci),this}lookAt(e){return dc.lookAt(e),dc.updateMatrix(),this.applyMatrix4(dc.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ms).negate(),this.translate(Ms.x,Ms.y,Ms.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const i=[];for(let n=0,s=e.length;n<s;n++){const o=e[n];i.push(o.x,o.y,o.z||0)}this.setAttribute("position",new Re(i,3))}else{const i=Math.min(e.length,t.count);for(let n=0;n<i;n++){const s=e[n];t.setXYZ(n,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Gt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new P(-1/0,-1/0,-1/0),new P(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const s=t[i];oi.setFromBufferAttribute(s),this.morphTargetsRelative?(Pt.addVectors(this.boundingBox.min,oi.min),this.boundingBox.expandByPoint(Pt),Pt.addVectors(this.boundingBox.max,oi.max),this.boundingBox.expandByPoint(Pt)):(this.boundingBox.expandByPoint(oi.min),this.boundingBox.expandByPoint(oi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Nt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new P,1/0);return}if(e){const i=this.boundingSphere.center;if(oi.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];mr.setFromBufferAttribute(a),this.morphTargetsRelative?(Pt.addVectors(oi.min,mr.min),oi.expandByPoint(Pt),Pt.addVectors(oi.max,mr.max),oi.expandByPoint(Pt)):(oi.expandByPoint(mr.min),oi.expandByPoint(mr.max))}oi.getCenter(i);let n=0;for(let s=0,o=e.count;s<o;s++)Pt.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(Pt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)Pt.fromBufferAttribute(a,c),l&&(Ms.fromBufferAttribute(e,c),Pt.add(Ms)),n=Math.max(n,i.distanceToSquared(Pt))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,n=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ft(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let I=0;I<i.count;I++)a[I]=new P,l[I]=new P;const c=new P,h=new P,d=new P,u=new G,f=new G,m=new G,v=new P,g=new P;function p(I,S,b){c.fromBufferAttribute(i,I),h.fromBufferAttribute(i,S),d.fromBufferAttribute(i,b),u.fromBufferAttribute(s,I),f.fromBufferAttribute(s,S),m.fromBufferAttribute(s,b),h.sub(c),d.sub(c),f.sub(u),m.sub(u);const L=1/(f.x*m.y-m.x*f.y);isFinite(L)&&(v.copy(h).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(L),g.copy(d).multiplyScalar(f.x).addScaledVector(h,-m.x).multiplyScalar(L),a[I].add(v),a[S].add(v),a[b].add(v),l[I].add(g),l[S].add(g),l[b].add(g))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let I=0,S=x.length;I<S;++I){const b=x[I],L=b.start,D=b.count;for(let F=L,B=L+D;F<B;F+=3)p(e.getX(F+0),e.getX(F+1),e.getX(F+2))}const y=new P,_=new P,C=new P,T=new P;function A(I){C.fromBufferAttribute(n,I),T.copy(C);const S=a[I];y.copy(S),y.sub(C.multiplyScalar(C.dot(S))).normalize(),_.crossVectors(T,S);const L=_.dot(l[I])<0?-1:1;o.setXYZW(I,y.x,y.y,y.z,L)}for(let I=0,S=x.length;I<S;++I){const b=x[I],L=b.start,D=b.count;for(let F=L,B=L+D;F<B;F+=3)A(e.getX(F+0)),A(e.getX(F+1)),A(e.getX(F+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new ft(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let u=0,f=i.count;u<f;u++)i.setXYZ(u,0,0,0);const n=new P,s=new P,o=new P,a=new P,l=new P,c=new P,h=new P,d=new P;if(e)for(let u=0,f=e.count;u<f;u+=3){const m=e.getX(u+0),v=e.getX(u+1),g=e.getX(u+2);n.fromBufferAttribute(t,m),s.fromBufferAttribute(t,v),o.fromBufferAttribute(t,g),h.subVectors(o,s),d.subVectors(n,s),h.cross(d),a.fromBufferAttribute(i,m),l.fromBufferAttribute(i,v),c.fromBufferAttribute(i,g),a.add(h),l.add(h),c.add(h),i.setXYZ(m,a.x,a.y,a.z),i.setXYZ(v,l.x,l.y,l.z),i.setXYZ(g,c.x,c.y,c.z)}else for(let u=0,f=t.count;u<f;u+=3)n.fromBufferAttribute(t,u+0),s.fromBufferAttribute(t,u+1),o.fromBufferAttribute(t,u+2),h.subVectors(o,s),d.subVectors(n,s),h.cross(d),i.setXYZ(u+0,h.x,h.y,h.z),i.setXYZ(u+1,h.x,h.y,h.z),i.setXYZ(u+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)Pt.fromBufferAttribute(e,t),Pt.normalize(),e.setXYZ(t,Pt.x,Pt.y,Pt.z)}toNonIndexed(){function e(a,l){const c=a.array,h=a.itemSize,d=a.normalized,u=new c.constructor(l.length*h);let f=0,m=0;for(let v=0,g=l.length;v<g;v++){a.isInterleavedBufferAttribute?f=l[v]*a.data.stride+a.offset:f=l[v]*h;for(let p=0;p<h;p++)u[m++]=c[f++]}return new ft(u,h,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new qe,i=this.index.array,n=this.attributes;for(const a in n){const l=n[a],c=e(l,i);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let h=0,d=c.length;h<d;h++){const u=c[h],f=e(u,i);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let d=0,u=c.length;d<u;d++){const f=c[d];h.push(f.toJSON(e.data))}h.length>0&&(n[l]=h,s=!0)}s&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const n=e.attributes;for(const c in n){const h=n[c];this.setAttribute(c,h.clone(t))}const s=e.morphAttributes;for(const c in s){const h=[],d=s[c];for(let u=0,f=d.length;u<f;u++)h.push(d[u].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,h=o.length;c<h;c++){const d=o[c];this.addGroup(d.start,d.count,d.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Bu=new ze,Nn=new ys,ta=new Nt,ku=new P,ia=new P,na=new P,sa=new P,fc=new P,ra=new P,Vu=new P,oa=new P;class rt extends et{constructor(e=new qe,t=new fn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,s=i.morphAttributes.position,o=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const a=this.morphTargetInfluences;if(s&&a){ra.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const h=a[l],d=s[l];h!==0&&(fc.fromBufferAttribute(d,e),o?ra.addScaledVector(fc,h):ra.addScaledVector(fc.sub(t),h))}t.add(ra)}return t}raycast(e,t){const i=this.geometry,n=this.material,s=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),ta.copy(i.boundingSphere),ta.applyMatrix4(s),Nn.copy(e.ray).recast(e.near),!(ta.containsPoint(Nn.origin)===!1&&(Nn.intersectSphere(ta,ku)===null||Nn.origin.distanceToSquared(ku)>(e.far-e.near)**2))&&(Bu.copy(s).invert(),Nn.copy(e.ray).applyMatrix4(Bu),!(i.boundingBox!==null&&Nn.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,Nn)))}_computeIntersections(e,t,i){let n;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,h=s.attributes.uv1,d=s.attributes.normal,u=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(o))for(let m=0,v=u.length;m<v;m++){const g=u[m],p=o[g.materialIndex],x=Math.max(g.start,f.start),y=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let _=x,C=y;_<C;_+=3){const T=a.getX(_),A=a.getX(_+1),I=a.getX(_+2);n=aa(this,p,e,i,c,h,d,T,A,I),n&&(n.faceIndex=Math.floor(_/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const m=Math.max(0,f.start),v=Math.min(a.count,f.start+f.count);for(let g=m,p=v;g<p;g+=3){const x=a.getX(g),y=a.getX(g+1),_=a.getX(g+2);n=aa(this,o,e,i,c,h,d,x,y,_),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}else if(l!==void 0)if(Array.isArray(o))for(let m=0,v=u.length;m<v;m++){const g=u[m],p=o[g.materialIndex],x=Math.max(g.start,f.start),y=Math.min(l.count,Math.min(g.start+g.count,f.start+f.count));for(let _=x,C=y;_<C;_+=3){const T=_,A=_+1,I=_+2;n=aa(this,p,e,i,c,h,d,T,A,I),n&&(n.faceIndex=Math.floor(_/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const m=Math.max(0,f.start),v=Math.min(l.count,f.start+f.count);for(let g=m,p=v;g<p;g+=3){const x=g,y=g+1,_=g+2;n=aa(this,o,e,i,c,h,d,x,y,_),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}}}function Pv(r,e,t,i,n,s,o,a){let l;if(e.side===kt?l=i.intersectTriangle(o,s,n,!0,a):l=i.intersectTriangle(n,s,o,e.side===Ni,a),l===null)return null;oa.copy(a),oa.applyMatrix4(r.matrixWorld);const c=t.ray.origin.distanceTo(oa);return c<t.near||c>t.far?null:{distance:c,point:oa.clone(),object:r}}function aa(r,e,t,i,n,s,o,a,l,c){r.getVertexPosition(a,ia),r.getVertexPosition(l,na),r.getVertexPosition(c,sa);const h=Pv(r,e,t,i,ia,na,sa,Vu);if(h){const d=new P;Kt.getBarycoord(Vu,ia,na,sa,d),n&&(h.uv=Kt.getInterpolatedAttribute(n,a,l,c,d,new G)),s&&(h.uv1=Kt.getInterpolatedAttribute(s,a,l,c,d,new G)),o&&(h.normal=Kt.getInterpolatedAttribute(o,a,l,c,d,new P),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const u={a,b:l,c,normal:new P,materialIndex:0};Kt.getNormal(ia,na,sa,u.normal),h.face=u,h.barycoord=d}return h}class On extends qe{constructor(e=1,t=1,i=1,n=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:s,depthSegments:o};const a=this;n=Math.floor(n),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],h=[],d=[];let u=0,f=0;m("z","y","x",-1,-1,i,t,e,o,s,0),m("z","y","x",1,-1,i,t,-e,o,s,1),m("x","z","y",1,1,e,i,t,n,o,2),m("x","z","y",1,-1,e,i,-t,n,o,3),m("x","y","z",1,-1,e,t,i,n,s,4),m("x","y","z",-1,-1,e,t,-i,n,s,5),this.setIndex(l),this.setAttribute("position",new Re(c,3)),this.setAttribute("normal",new Re(h,3)),this.setAttribute("uv",new Re(d,2));function m(v,g,p,x,y,_,C,T,A,I,S){const b=_/A,L=C/I,D=_/2,F=C/2,B=T/2,Y=A+1,H=I+1;let Q=0,q=0;const te=new P;for(let ce=0;ce<H;ce++){const fe=ce*L-F;for(let Me=0;Me<Y;Me++){const lt=Me*b-D;te[v]=lt*x,te[g]=fe*y,te[p]=B,c.push(te.x,te.y,te.z),te[v]=0,te[g]=0,te[p]=T>0?1:-1,h.push(te.x,te.y,te.z),d.push(Me/A),d.push(1-ce/I),Q+=1}}for(let ce=0;ce<I;ce++)for(let fe=0;fe<A;fe++){const Me=u+fe+Y*ce,lt=u+fe+Y*(ce+1),J=u+(fe+1)+Y*(ce+1),he=u+(fe+1)+Y*ce;l.push(Me,lt,he),l.push(lt,J,he),q+=6}a.addGroup(f,q,S),f+=q,u+=Q}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new On(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ts(r){const e={};for(const t in r){e[t]={};for(const i in r[t]){const n=r[t][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=n.clone():Array.isArray(n)?e[t][i]=n.slice():e[t][i]=n}}return e}function Wt(r){const e={};for(let t=0;t<r.length;t++){const i=Ts(r[t]);for(const n in i)e[n]=i[n]}return e}function Iv(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function Hu(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Je.workingColorSpace}const Gu={clone:Ts,merge:Wt};var Lv=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Uv=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class _t extends Ft{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Lv,this.fragmentShader=Uv,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ts(e.uniforms),this.uniformsGroups=Iv(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const o=this.uniforms[n].value;o&&o.isTexture?t.uniforms[n]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[n]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[n]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[n]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[n]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[n]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[n]={type:"m4",value:o.toArray()}:t.uniforms[n]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}let la=class extends et{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ze,this.projectionMatrix=new ze,this.projectionMatrixInverse=new ze,this.coordinateSystem=di}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const pn=new P,Wu=new G,Xu=new G;class It extends la{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=hs*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(In*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return hs*2*Math.atan(Math.tan(In*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){pn.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(pn.x,pn.y).multiplyScalar(-e/pn.z),pn.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(pn.x,pn.y).multiplyScalar(-e/pn.z)}getViewSize(e,t){return this.getViewBounds(e,Wu,Xu),t.subVectors(Xu,Wu)}setViewOffset(e,t,i,n,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(In*.5*this.fov)/this.zoom,i=2*t,n=this.aspect*i,s=-.5*n;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*n/l,t-=o.offsetY*i/c,n*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+n,t,t-i,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const As=-90,Es=1;class qu extends et{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new It(As,Es,e,t);n.layers=this.layers,this.add(n);const s=new It(As,Es,e,t);s.layers=this.layers,this.add(s);const o=new It(As,Es,e,t);o.layers=this.layers,this.add(o);const a=new It(As,Es,e,t);a.layers=this.layers,this.add(a);const l=new It(As,Es,e,t);l.layers=this.layers,this.add(l);const c=new It(As,Es,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,s,o,a,l]=t;for(const c of t)this.remove(c);if(e===di)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===ar)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,o,a,l,c,h]=this.children,d=e.getRenderTarget(),u=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),m=e.xr.enabled;e.xr.enabled=!1;const v=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,s),e.setRenderTarget(i,1,n),e.render(t,o),e.setRenderTarget(i,2,n),e.render(t,a),e.setRenderTarget(i,3,n),e.render(t,l),e.setRenderTarget(i,4,n),e.render(t,c),i.texture.generateMipmaps=v,e.setRenderTarget(i,5,n),e.render(t,h),e.setRenderTarget(d,u,f),e.xr.enabled=m,i.texture.needsPMREMUpdate=!0}}class gr extends xt{constructor(e,t,i,n,s,o,a,l,c,h){e=e!==void 0?e:[],t=t!==void 0?t:zi,super(e,t,i,n,s,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Yu extends jt{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];this.texture=new gr(n,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Mt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new On(5,5,5),s=new _t({name:"CubemapFromEquirect",uniforms:Ts(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:kt,blending:Oi});s.uniforms.tEquirect.value=t;const o=new rt(n,s),a=t.minFilter;return t.minFilter===Ci&&(t.minFilter=Mt),new qu(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,i,n){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,n);e.setRenderTarget(s)}}class Fn extends et{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Dv={type:"move"};class ca{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Fn,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Fn,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new P,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new P),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Fn,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new P,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new P),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let n=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const v of e.hand.values()){const g=t.getJointPose(v,i),p=this._getHandJoint(c,v);g!==null&&(p.matrix.fromArray(g.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=g.radius),p.visible=g!==null}const h=c.joints["index-finger-tip"],d=c.joints["thumb-tip"],u=h.position.distanceTo(d.position),f=.02,m=.005;c.inputState.pinching&&u>f+m?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&u<=f-m&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(n=t.getPose(e.targetRaySpace,i),n===null&&s!==null&&(n=s),n!==null&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Dv)))}return a!==null&&(a.visible=n!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new Fn;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class ha{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new le(e),this.density=t}clone(){return new ha(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class ua{constructor(e,t=1,i=1e3){this.isFog=!0,this.name="",this.color=new le(e),this.near=t,this.far=i}clone(){return new ua(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class pc extends et{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new ri,this.environmentIntensity=1,this.environmentRotation=new ri,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class da{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=or,this.updateRanges=[],this.version=0,this.uuid=ni()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,s=this.stride;n<s;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ni()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ni()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Xt=new P;class zn{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)Xt.fromBufferAttribute(this,t),Xt.applyMatrix4(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Xt.fromBufferAttribute(this,t),Xt.applyNormalMatrix(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Xt.fromBufferAttribute(this,t),Xt.transformDirection(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=Ht(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=Xe(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=Xe(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Xe(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Xe(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Xe(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Ht(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Ht(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Ht(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Ht(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Xe(t,this.array),i=Xe(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Xe(t,this.array),i=Xe(i,this.array),n=Xe(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=Xe(t,this.array),i=Xe(i,this.array),n=Xe(n,this.array),s=Xe(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return new ft(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new zn(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class mc extends Ft{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new le(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Cs;const vr=new P,Rs=new P,Ps=new P,Is=new G,yr=new G,$u=new ze,fa=new P,xr=new P,pa=new P,Zu=new G,gc=new G,ju=new G;class Ju extends et{constructor(e=new mc){if(super(),this.isSprite=!0,this.type="Sprite",Cs===void 0){Cs=new qe;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new da(t,5);Cs.setIndex([0,1,2,0,2,3]),Cs.setAttribute("position",new zn(i,3,0,!1)),Cs.setAttribute("uv",new zn(i,2,3,!1))}this.geometry=Cs,this.material=e,this.center=new G(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Rs.setFromMatrixScale(this.matrixWorld),$u.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Ps.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Rs.multiplyScalar(-Ps.z);const i=this.material.rotation;let n,s;i!==0&&(s=Math.cos(i),n=Math.sin(i));const o=this.center;ma(fa.set(-.5,-.5,0),Ps,o,Rs,n,s),ma(xr.set(.5,-.5,0),Ps,o,Rs,n,s),ma(pa.set(.5,.5,0),Ps,o,Rs,n,s),Zu.set(0,0),gc.set(1,0),ju.set(1,1);let a=e.ray.intersectTriangle(fa,xr,pa,!1,vr);if(a===null&&(ma(xr.set(-.5,.5,0),Ps,o,Rs,n,s),gc.set(0,1),a=e.ray.intersectTriangle(fa,pa,xr,!1,vr),a===null))return;const l=e.ray.origin.distanceTo(vr);l<e.near||l>e.far||t.push({distance:l,point:vr.clone(),uv:Kt.getInterpolation(vr,fa,xr,pa,Zu,gc,ju,new G),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function ma(r,e,t,i,n,s){Is.subVectors(r,t).addScalar(.5).multiply(i),n!==void 0?(yr.x=s*Is.x-n*Is.y,yr.y=n*Is.x+s*Is.y):yr.copy(Is),r.copy(e),r.x+=yr.x,r.y+=yr.y,r.applyMatrix4($u)}const ga=new P,Ku=new P;class Qu extends et{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let i=0,n=t.length;i<n;i++){const s=t[i];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,i=0){t=Math.abs(t);const n=this.levels;let s;for(s=0;s<n.length&&!(t<n[s].distance);s++);return n.splice(s,0,{distance:t,hysteresis:i,object:e}),this.add(e),this}removeLevel(e){const t=this.levels;for(let i=0;i<t.length;i++)if(t[i].distance===e){const n=t.splice(i,1);return this.remove(n[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n;i++){let s=t[i].distance;if(t[i].object.visible&&(s-=s*t[i].hysteresis),e<s)break}return t[i-1].object}return null}raycast(e,t){if(this.levels.length>0){ga.setFromMatrixPosition(this.matrixWorld);const n=e.ray.origin.distanceTo(ga);this.getObjectForDistance(n).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){ga.setFromMatrixPosition(e.matrixWorld),Ku.setFromMatrixPosition(this.matrixWorld);const i=ga.distanceTo(Ku)/e.zoom;t[0].object.visible=!0;let n,s;for(n=1,s=t.length;n<s;n++){let o=t[n].distance;if(t[n].object.visible&&(o-=o*t[n].hysteresis),i>=o)t[n-1].object.visible=!1,t[n].object.visible=!0;else break}for(this._currentLevel=n-1;n<s;n++)t[n].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const i=this.levels;for(let n=0,s=i.length;n<s;n++){const o=i[n];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const ed=new P,td=new Qe,id=new Qe,Nv=new P,nd=new ze,va=new P,vc=new Nt,sd=new ze,yc=new ys;class rd extends rt{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Il,this.bindMatrix=new ze,this.bindMatrixInverse=new ze,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Gt),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,va),this.boundingBox.expandByPoint(va)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Nt),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,va),this.boundingSphere.expandByPoint(va)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,n=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),vc.copy(this.boundingSphere),vc.applyMatrix4(n),e.ray.intersectsSphere(vc)!==!1&&(sd.copy(n).invert(),yc.copy(e.ray).applyMatrix4(sd),!(this.boundingBox!==null&&yc.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,yc)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Qe,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Il?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===lu?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const i=this.skeleton,n=this.geometry;td.fromBufferAttribute(n.attributes.skinIndex,e),id.fromBufferAttribute(n.attributes.skinWeight,e),ed.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=id.getComponent(s);if(o!==0){const a=td.getComponent(s);nd.multiplyMatrices(i.bones[a].matrixWorld,i.boneInverses[a]),t.addScaledVector(Nv.copy(ed).applyMatrix4(nd),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class xc extends et{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Ii extends xt{constructor(e=null,t=1,i=1,n,s,o,a,l,c=yt,h=yt,d,u){super(null,o,a,l,c,h,n,s,d,u),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const od=new ze,Ov=new ze;class ya{constructor(e=[],t=[]){this.uuid=ni(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new ze)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const i=new ze;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:Ov;od.multiplyMatrices(a,t[s]),od.toArray(i,s*16)}n!==null&&(n.needsUpdate=!0)}clone(){return new ya(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new Ii(t,e,e,Ut,Vt);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const n=this.bones[t];if(n.name===e)return n}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){const s=e.bones[i];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new xc),this.bones.push(o),this.boneInverses.push(new ze().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let n=0,s=t.length;n<s;n++){const o=t[n];e.bones.push(o.uuid);const a=i[n];e.boneInverses.push(a.toArray())}return e}}class Ls extends ft{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Us=new ze,ad=new ze,xa=[],ld=new Gt,Fv=new ze,_r=new rt,br=new Nt;class cd extends rt{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Ls(new Float32Array(i*16),16),this.instanceColor=null,this.morphTexture=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,Fv)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Gt),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,Us),ld.copy(e.boundingBox).applyMatrix4(Us),this.boundingBox.union(ld)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Nt),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,Us),br.copy(e.boundingSphere).applyMatrix4(Us),this.boundingSphere.union(br)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const i=t.morphTargetInfluences,n=this.morphTexture.source.data.data,s=i.length+1,o=e*s+1;for(let a=0;a<i.length;a++)i[a]=n[o+a]}raycast(e,t){const i=this.matrixWorld,n=this.count;if(_r.geometry=this.geometry,_r.material=this.material,_r.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),br.copy(this.boundingSphere),br.applyMatrix4(i),e.ray.intersectsSphere(br)!==!1))for(let s=0;s<n;s++){this.getMatrixAt(s,Us),ad.multiplyMatrices(i,Us),_r.matrixWorld=ad,_r.raycast(e,xa);for(let o=0,a=xa.length;o<a;o++){const l=xa[o];l.instanceId=s,l.object=this,t.push(l)}xa.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Ls(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const i=t.morphTargetInfluences,n=i.length+1;this.morphTexture===null&&(this.morphTexture=new Ii(new Float32Array(n*this.count),n,this.count,ho,Vt));const s=this.morphTexture.source.data.data;let o=0;for(let c=0;c<i.length;c++)o+=i[c];const a=this.geometry.morphTargetsRelative?1:1-o,l=n*e;s[l]=a,s.set(i,l+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}const _c=new P,zv=new P,Bv=new We;class mn{constructor(e=new P(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=_c.subVectors(i,t).cross(zv.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(_c),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/n;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||Bv.getNormalMatrix(e),n=this.coplanarPoint(_c).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Bn=new Nt,_a=new P;class wr{constructor(e=new mn,t=new mn,i=new mn,n=new mn,s=new mn,o=new mn){this.planes=[e,t,i,n,s,o]}set(e,t,i,n,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=di){const i=this.planes,n=e.elements,s=n[0],o=n[1],a=n[2],l=n[3],c=n[4],h=n[5],d=n[6],u=n[7],f=n[8],m=n[9],v=n[10],g=n[11],p=n[12],x=n[13],y=n[14],_=n[15];if(i[0].setComponents(l-s,u-c,g-f,_-p).normalize(),i[1].setComponents(l+s,u+c,g+f,_+p).normalize(),i[2].setComponents(l+o,u+h,g+m,_+x).normalize(),i[3].setComponents(l-o,u-h,g-m,_-x).normalize(),i[4].setComponents(l-a,u-d,g-v,_-y).normalize(),t===di)i[5].setComponents(l+a,u+d,g+v,_+y).normalize();else if(t===ar)i[5].setComponents(a,d,v,y).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Bn.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Bn.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Bn)}intersectsSprite(e){return Bn.center.set(0,0,0),Bn.radius=.7071067811865476,Bn.applyMatrix4(e.matrixWorld),this.intersectsSphere(Bn)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(_a.x=n.normal.x>0?e.max.x:e.min.x,_a.y=n.normal.y>0?e.max.y:e.min.y,_a.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(_a)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function bc(r,e){return r-e}function kv(r,e){return r.z-e.z}function Vv(r,e){return e.z-r.z}class Hv{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t,i,n){const s=this.pool,o=this.list;this.index>=s.length&&s.push({start:-1,count:-1,z:-1,index:-1});const a=s[this.index];o.push(a),this.index++,a.start=e,a.count=t,a.z=i,a.index=n}reset(){this.list.length=0,this.index=0}}const ei=new ze,Gv=new le(1,1,1),wc=new wr,ba=new Gt,kn=new Nt,Sr=new P,hd=new P,Wv=new P,Sc=new Hv,zt=new rt,wa=[];function Xv(r,e,t=0){const i=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const n=r.count;for(let s=0;s<n;s++)for(let o=0;o<i;o++)e.setComponent(s+t,o,r.getComponent(s,o))}else e.array.set(r.array,t*i);e.needsUpdate=!0}function Vn(r,e){if(r.constructor!==e.constructor){const t=Math.min(r.length,e.length);for(let i=0;i<t;i++)e[i]=r[i]}else{const t=Math.min(r.length,e.length);e.set(new r.constructor(r.buffer,0,t))}}class ud extends rt{get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}constructor(e,t,i=t*2,n){super(new qe,n),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=e,this._maxVertexCount=t,this._maxIndexCount=i,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxInstanceCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),i=new Ii(t,e,e,Ut,Vt);this._matricesTexture=i}_initIndirectTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Uint32Array(e*e),i=new Ii(t,e,e,Js,Bi);this._indirectTexture=i}_initColorsTexture(){let e=Math.sqrt(this._maxInstanceCount);e=Math.ceil(e);const t=new Float32Array(e*e*4).fill(1),i=new Ii(t,e,e,Ut,Vt);i.colorSpace=Je.workingColorSpace,this._colorsTexture=i}_initializeGeometry(e){const t=this.geometry,i=this._maxVertexCount,n=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in e.attributes){const o=e.getAttribute(s),{array:a,itemSize:l,normalized:c}=o,h=new a.constructor(i*l),d=new ft(h,l,c);t.setAttribute(s,d)}if(e.getIndex()!==null){const s=i>65535?new Uint32Array(n):new Uint16Array(n);t.setIndex(new ft(s,1))}this._geometryInitialized=!0}}_validateGeometry(e){const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const i in t.attributes){if(!e.hasAttribute(i))throw new Error(`THREE.BatchedMesh: Added geometry missing "${i}". All geometries must have consistent attributes.`);const n=e.getAttribute(i),s=t.getAttribute(i);if(n.itemSize!==s.itemSize||n.normalized!==s.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(e){const t=this._instanceInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${e}. Instance is either out of range or has been deleted.`)}validateGeometryId(e){const t=this._geometryInfo;if(e<0||e>=t.length||t[e].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${e}. Geometry is either out of range or has been deleted.`)}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Gt);const e=this.boundingBox,t=this._instanceInfo;e.makeEmpty();for(let i=0,n=t.length;i<n;i++){if(t[i].active===!1)continue;const s=t[i].geometryIndex;this.getMatrixAt(i,ei),this.getBoundingBoxAt(s,ba).applyMatrix4(ei),e.union(ba)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Nt);const e=this.boundingSphere,t=this._instanceInfo;e.makeEmpty();for(let i=0,n=t.length;i<n;i++){if(t[i].active===!1)continue;const s=t[i].geometryIndex;this.getMatrixAt(i,ei),this.getBoundingSphereAt(s,kn).applyMatrix4(ei),e.union(kn)}}addInstance(e){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const i={visible:!0,active:!0,geometryIndex:e};let n=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(bc),n=this._availableInstanceIds.shift(),this._instanceInfo[n]=i):(n=this._instanceInfo.length,this._instanceInfo.push(i));const s=this._matricesTexture;ei.identity().toArray(s.image.data,n*16),s.needsUpdate=!0;const o=this._colorsTexture;return o&&(Gv.toArray(o.image.data,n*4),o.needsUpdate=!0),this._visibilityChanged=!0,n}addGeometry(e,t=-1,i=-1){this._initializeGeometry(e),this._validateGeometry(e);const n={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},s=this._geometryInfo;n.vertexStart=this._nextVertexStart,n.reservedVertexCount=t===-1?e.getAttribute("position").count:t;const o=e.getIndex();if(o!==null&&(n.indexStart=this._nextIndexStart,n.reservedIndexCount=i===-1?o.count:i),n.indexStart!==-1&&n.indexStart+n.reservedIndexCount>this._maxIndexCount||n.vertexStart+n.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let l;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(bc),l=this._availableGeometryIds.shift(),s[l]=n):(l=this._geometryCount,this._geometryCount++,s.push(n)),this.setGeometryAt(l,e),this._nextIndexStart=n.indexStart+n.reservedIndexCount,this._nextVertexStart=n.vertexStart+n.reservedVertexCount,l}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const i=this.geometry,n=i.getIndex()!==null,s=i.getIndex(),o=t.getIndex(),a=this._geometryInfo[e];if(n&&o.count>a.reservedIndexCount||t.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.reservedVertexCount;a.vertexCount=t.getAttribute("position").count;for(const h in i.attributes){const d=t.getAttribute(h),u=i.getAttribute(h);Xv(d,u,l);const f=d.itemSize;for(let m=d.count,v=c;m<v;m++){const g=l+m;for(let p=0;p<f;p++)u.setComponent(g,p,0)}u.needsUpdate=!0,u.addUpdateRange(l*f,c*f)}if(n){const h=a.indexStart,d=a.reservedIndexCount;a.indexCount=t.getIndex().count;for(let u=0;u<o.count;u++)s.setX(h+u,l+o.getX(u));for(let u=o.count,f=d;u<f;u++)s.setX(h+u,l);s.needsUpdate=!0,s.addUpdateRange(h,a.reservedIndexCount)}return a.start=n?a.indexStart:a.vertexStart,a.count=n?a.indexCount:a.vertexCount,a.boundingBox=null,t.boundingBox!==null&&(a.boundingBox=t.boundingBox.clone()),a.boundingSphere=null,t.boundingSphere!==null&&(a.boundingSphere=t.boundingSphere.clone()),this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._geometryInfo;if(e>=t.length||t[e].active===!1)return this;const i=this._instanceInfo;for(let n=0,s=i.length;n<s;n++)i[n].active&&i[n].geometryIndex===e&&this.deleteInstance(n);return t[e].active=!1,this._availableGeometryIds.push(e),this._visibilityChanged=!0,this}deleteInstance(e){return this.validateInstanceId(e),this._instanceInfo[e].active=!1,this._availableInstanceIds.push(e),this._visibilityChanged=!0,this}optimize(){let e=0,t=0;const i=this._geometryInfo,n=i.map((o,a)=>a).sort((o,a)=>i[o].vertexStart-i[a].vertexStart),s=this.geometry;for(let o=0,a=i.length;o<a;o++){const l=n[o],c=i[l];if(c.active!==!1){if(s.index!==null){if(c.indexStart!==t){const{indexStart:h,vertexStart:d,reservedIndexCount:u}=c,f=s.index,m=f.array,v=e-d;for(let g=h;g<h+u;g++)m[g]=m[g]+v;f.array.copyWithin(t,h,h+u),f.addUpdateRange(t,u),c.indexStart=t}t+=c.reservedIndexCount}if(c.vertexStart!==e){const{vertexStart:h,reservedVertexCount:d}=c,u=s.attributes;for(const f in u){const m=u[f],{array:v,itemSize:g}=m;v.copyWithin(e*g,h*g,(h+d)*g),m.addUpdateRange(e*g,d*g)}c.vertexStart=e}e+=c.reservedVertexCount,c.start=s.index?c.indexStart:c.vertexStart,this._nextIndexStart=s.index?c.indexStart+c.reservedIndexCount:0,this._nextVertexStart=c.vertexStart+c.reservedVertexCount}}return this}getBoundingBoxAt(e,t){if(e>=this._geometryCount)return null;const i=this.geometry,n=this._geometryInfo[e];if(n.boundingBox===null){const s=new Gt,o=i.index,a=i.attributes.position;for(let l=n.start,c=n.start+n.count;l<c;l++){let h=l;o&&(h=o.getX(h)),s.expandByPoint(Sr.fromBufferAttribute(a,h))}n.boundingBox=s}return t.copy(n.boundingBox),t}getBoundingSphereAt(e,t){if(e>=this._geometryCount)return null;const i=this.geometry,n=this._geometryInfo[e];if(n.boundingSphere===null){const s=new Nt;this.getBoundingBoxAt(e,ba),ba.getCenter(s.center);const o=i.index,a=i.attributes.position;let l=0;for(let c=n.start,h=n.start+n.count;c<h;c++){let d=c;o&&(d=o.getX(d)),Sr.fromBufferAttribute(a,d),l=Math.max(l,s.center.distanceToSquared(Sr))}s.radius=Math.sqrt(l),n.boundingSphere=s}return t.copy(n.boundingSphere),t}setMatrixAt(e,t){this.validateInstanceId(e);const i=this._matricesTexture,n=this._matricesTexture.image.data;return t.toArray(n,e*16),i.needsUpdate=!0,this}getMatrixAt(e,t){return this.validateInstanceId(e),t.fromArray(this._matricesTexture.image.data,e*16)}setColorAt(e,t){return this.validateInstanceId(e),this._colorsTexture===null&&this._initColorsTexture(),t.toArray(this._colorsTexture.image.data,e*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(e,t){return this.validateInstanceId(e),t.fromArray(this._colorsTexture.image.data,e*4)}setVisibleAt(e,t){return this.validateInstanceId(e),this._instanceInfo[e].visible===t?this:(this._instanceInfo[e].visible=t,this._visibilityChanged=!0,this)}getVisibleAt(e){return this.validateInstanceId(e),this._instanceInfo[e].visible}setGeometryIdAt(e,t){return this.validateInstanceId(e),this.validateGeometryId(t),this._instanceInfo[e].geometryIndex=t,this}getGeometryIdAt(e){return this.validateInstanceId(e),this._instanceInfo[e].geometryIndex}getGeometryRangeAt(e,t={}){this.validateGeometryId(e);const i=this._geometryInfo[e];return t.vertexStart=i.vertexStart,t.vertexCount=i.vertexCount,t.reservedVertexCount=i.reservedVertexCount,t.indexStart=i.indexStart,t.indexCount=i.indexCount,t.reservedIndexCount=i.reservedIndexCount,t.start=i.start,t.count=i.count,t}setInstanceCount(e){const t=this._availableInstanceIds,i=this._instanceInfo;for(t.sort(bc);t[t.length-1]===i.length;)i.pop(),t.pop();if(e<i.length)throw new Error(`BatchedMesh: Instance ids outside the range ${e} are being used. Cannot shrink instance count.`);const n=new Int32Array(e),s=new Int32Array(e);Vn(this._multiDrawCounts,n),Vn(this._multiDrawStarts,s),this._multiDrawCounts=n,this._multiDrawStarts=s,this._maxInstanceCount=e;const o=this._indirectTexture,a=this._matricesTexture,l=this._colorsTexture;o.dispose(),this._initIndirectTexture(),Vn(o.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),Vn(a.image.data,this._matricesTexture.image.data),l&&(l.dispose(),this._initColorsTexture(),Vn(l.image.data,this._colorsTexture.image.data))}setGeometrySize(e,t){const i=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...i.map(a=>a.vertexStart+a.reservedVertexCount))>e)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${t}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...i.map(l=>l.indexStart+l.reservedIndexCount))>t)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${t}. Cannot shrink further.`);const s=this.geometry;s.dispose(),this._maxVertexCount=e,this._maxIndexCount=t,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new qe,this._initializeGeometry(s));const o=this.geometry;s.index&&Vn(s.index.array,o.index.array);for(const a in s.attributes)Vn(s.attributes[a].array,o.attributes[a].array)}raycast(e,t){const i=this._instanceInfo,n=this._geometryInfo,s=this.matrixWorld,o=this.geometry;zt.material=this.material,zt.geometry.index=o.index,zt.geometry.attributes=o.attributes,zt.geometry.boundingBox===null&&(zt.geometry.boundingBox=new Gt),zt.geometry.boundingSphere===null&&(zt.geometry.boundingSphere=new Nt);for(let a=0,l=i.length;a<l;a++){if(!i[a].visible||!i[a].active)continue;const c=i[a].geometryIndex,h=n[c];zt.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(a,zt.matrixWorld).premultiply(s),this.getBoundingBoxAt(c,zt.geometry.boundingBox),this.getBoundingSphereAt(c,zt.geometry.boundingSphere),zt.raycast(e,wa);for(let d=0,u=wa.length;d<u;d++){const f=wa[d];f.object=this,f.batchId=a,t.push(f)}wa.length=0}zt.material=null,zt.geometry.index=null,zt.geometry.attributes={},zt.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._geometryInfo=e._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox!==null?t.boundingBox.clone():null,boundingSphere:t.boundingSphere!==null?t.boundingSphere.clone():null})),this._instanceInfo=e._instanceInfo.map(t=>({...t})),this._maxInstanceCount=e._maxInstanceCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=e._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null),this}onBeforeRender(e,t,i,n,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=n.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,l=this._instanceInfo,c=this._multiDrawStarts,h=this._multiDrawCounts,d=this._geometryInfo,u=this.perObjectFrustumCulled,f=this._indirectTexture,m=f.image.data;u&&(ei.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse).multiply(this.matrixWorld),wc.setFromProjectionMatrix(ei,e.coordinateSystem));let v=0;if(this.sortObjects){ei.copy(this.matrixWorld).invert(),Sr.setFromMatrixPosition(i.matrixWorld).applyMatrix4(ei),hd.set(0,0,-1).transformDirection(i.matrixWorld).transformDirection(ei);for(let x=0,y=l.length;x<y;x++)if(l[x].visible&&l[x].active){const _=l[x].geometryIndex;this.getMatrixAt(x,ei),this.getBoundingSphereAt(_,kn).applyMatrix4(ei);let C=!1;if(u&&(C=!wc.intersectsSphere(kn)),!C){const T=d[_],A=Wv.subVectors(kn.center,Sr).dot(hd);Sc.push(T.start,T.count,A,x)}}const g=Sc.list,p=this.customSort;p===null?g.sort(s.transparent?Vv:kv):p.call(this,g,i);for(let x=0,y=g.length;x<y;x++){const _=g[x];c[v]=_.start*a,h[v]=_.count,m[v]=_.index,v++}Sc.reset()}else for(let g=0,p=l.length;g<p;g++)if(l[g].visible&&l[g].active){const x=l[g].geometryIndex;let y=!1;if(u&&(this.getMatrixAt(g,ei),this.getBoundingSphereAt(x,kn).applyMatrix4(ei),y=!wc.intersectsSphere(kn)),!y){const _=d[x];c[v]=_.start*a,h[v]=_.count,m[v]=g,v++}}f.needsUpdate=!0,this._multiDrawCount=v,this._visibilityChanged=!1}onBeforeShadow(e,t,i,n,s,o){this.onBeforeRender(e,null,n,s,o)}}class qt extends Ft{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new le(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Sa=new P,Ma=new P,dd=new ze,Mr=new ys,Ta=new Nt,Mc=new P,fd=new P;class gn extends et{constructor(e=new qe,t=new qt){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let n=1,s=t.count;n<s;n++)Sa.fromBufferAttribute(t,n-1),Ma.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=Sa.distanceTo(Ma);e.setAttribute("lineDistance",new Re(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Ta.copy(i.boundingSphere),Ta.applyMatrix4(n),Ta.radius+=s,e.ray.intersectsSphere(Ta)===!1)return;dd.copy(n).invert(),Mr.copy(e.ray).applyMatrix4(dd);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,h=i.index,u=i.attributes.position;if(h!==null){const f=Math.max(0,o.start),m=Math.min(h.count,o.start+o.count);for(let v=f,g=m-1;v<g;v+=c){const p=h.getX(v),x=h.getX(v+1),y=Aa(this,e,Mr,l,p,x,v);y&&t.push(y)}if(this.isLineLoop){const v=h.getX(m-1),g=h.getX(f),p=Aa(this,e,Mr,l,v,g,m-1);p&&t.push(p)}}else{const f=Math.max(0,o.start),m=Math.min(u.count,o.start+o.count);for(let v=f,g=m-1;v<g;v+=c){const p=Aa(this,e,Mr,l,v,v+1,v);p&&t.push(p)}if(this.isLineLoop){const v=Aa(this,e,Mr,l,m-1,f,m-1);v&&t.push(v)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function Aa(r,e,t,i,n,s,o){const a=r.geometry.attributes.position;if(Sa.fromBufferAttribute(a,n),Ma.fromBufferAttribute(a,s),t.distanceSqToSegment(Sa,Ma,Mc,fd)>i)return;Mc.applyMatrix4(r.matrixWorld);const c=e.ray.origin.distanceTo(Mc);if(!(c<e.near||c>e.far))return{distance:c,point:fd.clone().applyMatrix4(r.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:r}}const pd=new P,md=new P;class Li extends gn{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let n=0,s=t.count;n<s;n+=2)pd.fromBufferAttribute(t,n),md.fromBufferAttribute(t,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+pd.distanceTo(md);e.setAttribute("lineDistance",new Re(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class gd extends gn{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Tc extends Ft{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new le(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const vd=new ze,Ac=new ys,Ea=new Nt,Ca=new P;class yd extends et{constructor(e=new qe,t=new Tc){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Points.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Ea.copy(i.boundingSphere),Ea.applyMatrix4(n),Ea.radius+=s,e.ray.intersectsSphere(Ea)===!1)return;vd.copy(n).invert(),Ac.copy(e.ray).applyMatrix4(vd);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=i.index,d=i.attributes.position;if(c!==null){const u=Math.max(0,o.start),f=Math.min(c.count,o.start+o.count);for(let m=u,v=f;m<v;m++){const g=c.getX(m);Ca.fromBufferAttribute(d,g),xd(Ca,g,l,n,e,t,this)}}else{const u=Math.max(0,o.start),f=Math.min(d.count,o.start+o.count);for(let m=u,v=f;m<v;m++)Ca.fromBufferAttribute(d,m),xd(Ca,m,l,n,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function xd(r,e,t,i,n,s,o){const a=Ac.distanceSqToPoint(r);if(a<t){const l=new P;Ac.closestPointToPoint(r,l),l.applyMatrix4(i);const c=n.ray.origin.distanceTo(l);if(c<n.near||c>n.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class at extends xt{constructor(e,t,i,n,s,o,a,l,c){super(e,t,i,n,s,o,a,l,c),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:Mt,this.magFilter=s!==void 0?s:Mt,this.generateMipmaps=!1;const h=this;function d(){h.needsUpdate=!0,e.requestVideoFrameCallback(d)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(d)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class qv extends at{constructor(e,t,i,n,s,o,a,l){super({},e,t,i,n,s,o,a,l),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(e){this.image=e,this.needsUpdate=!0}}class Yv extends xt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=yt,this.minFilter=yt,this.generateMipmaps=!1,this.needsUpdate=!0}}class Ra extends xt{constructor(e,t,i,n,s,o,a,l,c,h,d,u){super(null,o,a,l,c,h,n,s,d,u),this.isCompressedTexture=!0,this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class $v extends Ra{constructor(e,t,i,n,s,o){super(e,t,i,s,o),this.isCompressedArrayTexture=!0,this.image.depth=n,this.wrapR=li,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class Zv extends Ra{constructor(e,t,i){super(void 0,e[0].width,e[0].height,t,i,zi),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class jv extends xt{constructor(e,t,i,n,s,o,a,l,c){super(e,t,i,n,s,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Ec extends xt{constructor(e,t,i,n,s,o,a,l,c,h=An){if(h!==An&&h!==En)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===An&&(i=Bi),i===void 0&&h===En&&(i=Tn),super(null,n,s,o,a,l,h,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:yt,this.minFilter=l!==void 0?l:yt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class gi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,n=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)i=this.getPoint(o/e),s+=i.distanceTo(n),t.push(s),n=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const i=this.getLengths();let n=0;const s=i.length;let o;t?o=t:o=e*i[s-1];let a=0,l=s-1,c;for(;a<=l;)if(n=Math.floor(a+(l-a)/2),c=i[n]-o,c<0)a=n+1;else if(c>0)l=n-1;else{l=n;break}if(n=l,i[n]===o)return n/(s-1);const h=i[n],u=i[n+1]-h,f=(o-h)/u;return(n+f)/(s-1)}getTangent(e,t){let n=e-1e-4,s=e+1e-4;n<0&&(n=0),s>1&&(s=1);const o=this.getPoint(n),a=this.getPoint(s),l=t||(o.isVector2?new G:new P);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){const i=new P,n=[],s=[],o=[],a=new P,l=new ze;for(let f=0;f<=e;f++){const m=f/e;n[f]=this.getTangentAt(m,new P)}s[0]=new P,o[0]=new P;let c=Number.MAX_VALUE;const h=Math.abs(n[0].x),d=Math.abs(n[0].y),u=Math.abs(n[0].z);h<=c&&(c=h,i.set(1,0,0)),d<=c&&(c=d,i.set(0,1,0)),u<=c&&i.set(0,0,1),a.crossVectors(n[0],i).normalize(),s[0].crossVectors(n[0],a),o[0].crossVectors(n[0],s[0]);for(let f=1;f<=e;f++){if(s[f]=s[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(n[f-1],n[f]),a.length()>Number.EPSILON){a.normalize();const m=Math.acos(He(n[f-1].dot(n[f]),-1,1));s[f].applyMatrix4(l.makeRotationAxis(a,m))}o[f].crossVectors(n[f],s[f])}if(t===!0){let f=Math.acos(He(s[0].dot(s[e]),-1,1));f/=e,n[0].dot(a.crossVectors(s[0],s[e]))>0&&(f=-f);for(let m=1;m<=e;m++)s[m].applyMatrix4(l.makeRotationAxis(n[m],f*m)),o[m].crossVectors(n[m],s[m])}return{tangents:n,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Pa extends gi{constructor(e=0,t=0,i=1,n=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=n,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t=new G){const i=t,n=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=n;for(;s>n;)s-=n;s<Number.EPSILON&&(o?s=0:s=n),this.aClockwise===!0&&!o&&(s===n?s=-n:s=s-n);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const h=Math.cos(this.aRotation),d=Math.sin(this.aRotation),u=l-this.aX,f=c-this.aY;l=u*h-f*d+this.aX,c=u*d+f*h+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class _d extends Pa{constructor(e,t,i,n,s,o){super(e,t,i,i,n,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Cc(){let r=0,e=0,t=0,i=0;function n(s,o,a,l){r=s,e=a,t=-3*s+3*o-2*a-l,i=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){n(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,h,d){let u=(o-s)/c-(a-s)/(c+h)+(a-o)/h,f=(a-o)/h-(l-o)/(h+d)+(l-a)/d;u*=h,f*=h,n(o,a,u,f)},calc:function(s){const o=s*s,a=o*s;return r+e*s+t*o+i*a}}}const Ia=new P,Rc=new Cc,Pc=new Cc,Ic=new Cc;class bd extends gi{constructor(e=[],t=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=n}getPoint(e,t=new P){const i=t,n=this.points,s=n.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,h;this.closed||a>0?c=n[(a-1)%s]:(Ia.subVectors(n[0],n[1]).add(n[0]),c=Ia);const d=n[a%s],u=n[(a+1)%s];if(this.closed||a+2<s?h=n[(a+2)%s]:(Ia.subVectors(n[s-1],n[s-2]).add(n[s-1]),h=Ia),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let m=Math.pow(c.distanceToSquared(d),f),v=Math.pow(d.distanceToSquared(u),f),g=Math.pow(u.distanceToSquared(h),f);v<1e-4&&(v=1),m<1e-4&&(m=v),g<1e-4&&(g=v),Rc.initNonuniformCatmullRom(c.x,d.x,u.x,h.x,m,v,g),Pc.initNonuniformCatmullRom(c.y,d.y,u.y,h.y,m,v,g),Ic.initNonuniformCatmullRom(c.z,d.z,u.z,h.z,m,v,g)}else this.curveType==="catmullrom"&&(Rc.initCatmullRom(c.x,d.x,u.x,h.x,this.tension),Pc.initCatmullRom(c.y,d.y,u.y,h.y,this.tension),Ic.initCatmullRom(c.z,d.z,u.z,h.z,this.tension));return i.set(Rc.calc(l),Pc.calc(l),Ic.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new P().fromArray(n))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function wd(r,e,t,i,n){const s=(i-e)*.5,o=(n-t)*.5,a=r*r,l=r*a;return(2*t-2*i+s+o)*l+(-3*t+3*i-2*s-o)*a+s*r+t}function Jv(r,e){const t=1-r;return t*t*e}function Kv(r,e){return 2*(1-r)*r*e}function Qv(r,e){return r*r*e}function Tr(r,e,t,i){return Jv(r,e)+Kv(r,t)+Qv(r,i)}function e0(r,e){const t=1-r;return t*t*t*e}function t0(r,e){const t=1-r;return 3*t*t*r*e}function i0(r,e){return 3*(1-r)*r*r*e}function n0(r,e){return r*r*r*e}function Ar(r,e,t,i,n){return e0(r,e)+t0(r,t)+i0(r,i)+n0(r,n)}class Lc extends gi{constructor(e=new G,t=new G,i=new G,n=new G){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new G){const i=t,n=this.v0,s=this.v1,o=this.v2,a=this.v3;return i.set(Ar(e,n.x,s.x,o.x,a.x),Ar(e,n.y,s.y,o.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Sd extends gi{constructor(e=new P,t=new P,i=new P,n=new P){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=n}getPoint(e,t=new P){const i=t,n=this.v0,s=this.v1,o=this.v2,a=this.v3;return i.set(Ar(e,n.x,s.x,o.x,a.x),Ar(e,n.y,s.y,o.y,a.y),Ar(e,n.z,s.z,o.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Uc extends gi{constructor(e=new G,t=new G){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new G){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new G){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Md extends gi{constructor(e=new P,t=new P){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new P){const i=t;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new P){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Dc extends gi{constructor(e=new G,t=new G,i=new G){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new G){const i=t,n=this.v0,s=this.v1,o=this.v2;return i.set(Tr(e,n.x,s.x,o.x),Tr(e,n.y,s.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Nc extends gi{constructor(e=new P,t=new P,i=new P){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new P){const i=t,n=this.v0,s=this.v1,o=this.v2;return i.set(Tr(e,n.x,s.x,o.x),Tr(e,n.y,s.y,o.y),Tr(e,n.z,s.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Oc extends gi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new G){const i=t,n=this.points,s=(n.length-1)*e,o=Math.floor(s),a=s-o,l=n[o===0?o:o-1],c=n[o],h=n[o>n.length-2?n.length-1:o+1],d=n[o>n.length-3?n.length-1:o+2];return i.set(wd(a,l.x,c.x,h.x,d.x),wd(a,l.y,c.y,h.y,d.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){const n=this.points[t];e.points.push(n.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const n=e.points[t];this.points.push(new G().fromArray(n))}return this}}var La=Object.freeze({__proto__:null,ArcCurve:_d,CatmullRomCurve3:bd,CubicBezierCurve:Lc,CubicBezierCurve3:Sd,EllipseCurve:Pa,LineCurve:Uc,LineCurve3:Md,QuadraticBezierCurve:Dc,QuadraticBezierCurve3:Nc,SplineCurve:Oc});class Td extends gi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const i=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new La[i](t,e))}return this}getPoint(e,t){const i=e*this.getLength(),n=this.getCurveLengths();let s=0;for(;s<n.length;){if(n[s]>=i){const o=n[s]-i,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,n=this.curves.length;i<n;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let i;for(let n=0,s=this.curves;n<s.length;n++){const o=s[n],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const h=l[c];i&&i.equals(h)||(t.push(h),i=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(n.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const n=this.curves[t];e.curves.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const n=e.curves[t];this.curves.push(new La[n.type]().fromJSON(n))}return this}}class Er extends Td{constructor(e){super(),this.type="Path",this.currentPoint=new G,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const i=new Uc(this.currentPoint.clone(),new G(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,n){const s=new Dc(this.currentPoint.clone(),new G(e,t),new G(i,n));return this.curves.push(s),this.currentPoint.set(i,n),this}bezierCurveTo(e,t,i,n,s,o){const a=new Lc(this.currentPoint.clone(),new G(e,t),new G(i,n),new G(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),i=new Oc(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,n,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,i,n,s,o),this}absarc(e,t,i,n,s,o){return this.absellipse(e,t,i,i,n,s,o),this}ellipse(e,t,i,n,s,o,a,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,t+h,i,n,s,o,a,l),this}absellipse(e,t,i,n,s,o,a,l){const c=new Pa(e,t,i,n,s,o,a,l);if(this.curves.length>0){const d=c.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Cr extends qe{constructor(e=[new G(0,-.5),new G(.5,0),new G(0,.5)],t=12,i=0,n=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t),n=He(n,0,Math.PI*2);const s=[],o=[],a=[],l=[],c=[],h=1/t,d=new P,u=new G,f=new P,m=new P,v=new P;let g=0,p=0;for(let x=0;x<=e.length-1;x++)switch(x){case 0:g=e[x+1].x-e[x].x,p=e[x+1].y-e[x].y,f.x=p*1,f.y=-g,f.z=p*0,v.copy(f),f.normalize(),l.push(f.x,f.y,f.z);break;case e.length-1:l.push(v.x,v.y,v.z);break;default:g=e[x+1].x-e[x].x,p=e[x+1].y-e[x].y,f.x=p*1,f.y=-g,f.z=p*0,m.copy(f),f.x+=v.x,f.y+=v.y,f.z+=v.z,f.normalize(),l.push(f.x,f.y,f.z),v.copy(m)}for(let x=0;x<=t;x++){const y=i+x*h*n,_=Math.sin(y),C=Math.cos(y);for(let T=0;T<=e.length-1;T++){d.x=e[T].x*_,d.y=e[T].y,d.z=e[T].x*C,o.push(d.x,d.y,d.z),u.x=x/t,u.y=T/(e.length-1),a.push(u.x,u.y);const A=l[3*T+0]*_,I=l[3*T+1],S=l[3*T+0]*C;c.push(A,I,S)}}for(let x=0;x<t;x++)for(let y=0;y<e.length-1;y++){const _=y+x*e.length,C=_,T=_+e.length,A=_+e.length+1,I=_+1;s.push(C,T,I),s.push(A,I,T)}this.setIndex(s),this.setAttribute("position",new Re(o,3)),this.setAttribute("uv",new Re(a,2)),this.setAttribute("normal",new Re(c,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Cr(e.points,e.segments,e.phiStart,e.phiLength)}}class Ua extends Cr{constructor(e=1,t=1,i=4,n=8){const s=new Er;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:i,radialSegments:n}}static fromJSON(e){return new Ua(e.radius,e.length,e.capSegments,e.radialSegments)}}class Da extends qe{constructor(e=1,t=32,i=0,n=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},t=Math.max(3,t);const s=[],o=[],a=[],l=[],c=new P,h=new G;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let d=0,u=3;d<=t;d++,u+=3){const f=i+d/t*n;c.x=e*Math.cos(f),c.y=e*Math.sin(f),o.push(c.x,c.y,c.z),a.push(0,0,1),h.x=(o[u]/e+1)/2,h.y=(o[u+1]/e+1)/2,l.push(h.x,h.y)}for(let d=1;d<=t;d++)s.push(d,d+1,0);this.setIndex(s),this.setAttribute("position",new Re(o,3)),this.setAttribute("normal",new Re(a,3)),this.setAttribute("uv",new Re(l,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Da(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Ds extends qe{constructor(e=1,t=1,i=1,n=32,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;n=Math.floor(n),s=Math.floor(s);const h=[],d=[],u=[],f=[];let m=0;const v=[],g=i/2;let p=0;x(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(h),this.setAttribute("position",new Re(d,3)),this.setAttribute("normal",new Re(u,3)),this.setAttribute("uv",new Re(f,2));function x(){const _=new P,C=new P;let T=0;const A=(t-e)/i;for(let I=0;I<=s;I++){const S=[],b=I/s,L=b*(t-e)+e;for(let D=0;D<=n;D++){const F=D/n,B=F*l+a,Y=Math.sin(B),H=Math.cos(B);C.x=L*Y,C.y=-b*i+g,C.z=L*H,d.push(C.x,C.y,C.z),_.set(Y,A,H).normalize(),u.push(_.x,_.y,_.z),f.push(F,1-b),S.push(m++)}v.push(S)}for(let I=0;I<n;I++)for(let S=0;S<s;S++){const b=v[S][I],L=v[S+1][I],D=v[S+1][I+1],F=v[S][I+1];(e>0||S!==0)&&(h.push(b,L,F),T+=3),(t>0||S!==s-1)&&(h.push(L,D,F),T+=3)}c.addGroup(p,T,0),p+=T}function y(_){const C=m,T=new G,A=new P;let I=0;const S=_===!0?e:t,b=_===!0?1:-1;for(let D=1;D<=n;D++)d.push(0,g*b,0),u.push(0,b,0),f.push(.5,.5),m++;const L=m;for(let D=0;D<=n;D++){const B=D/n*l+a,Y=Math.cos(B),H=Math.sin(B);A.x=S*H,A.y=g*b,A.z=S*Y,d.push(A.x,A.y,A.z),u.push(0,b,0),T.x=Y*.5+.5,T.y=H*.5*b+.5,f.push(T.x,T.y),m++}for(let D=0;D<n;D++){const F=C+D,B=L+D;_===!0?h.push(B,B+1,F):h.push(B+1,B,F),I+=3}c.addGroup(p,I,_===!0?1:2),p+=I}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ds(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Na extends Ds{constructor(e=1,t=1,i=32,n=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,i,n,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Na(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class vn extends qe{constructor(e=[],t=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n};const s=[],o=[];a(n),c(i),h(),this.setAttribute("position",new Re(s,3)),this.setAttribute("normal",new Re(s.slice(),3)),this.setAttribute("uv",new Re(o,2)),n===0?this.computeVertexNormals():this.normalizeNormals();function a(x){const y=new P,_=new P,C=new P;for(let T=0;T<t.length;T+=3)f(t[T+0],y),f(t[T+1],_),f(t[T+2],C),l(y,_,C,x)}function l(x,y,_,C){const T=C+1,A=[];for(let I=0;I<=T;I++){A[I]=[];const S=x.clone().lerp(_,I/T),b=y.clone().lerp(_,I/T),L=T-I;for(let D=0;D<=L;D++)D===0&&I===T?A[I][D]=S:A[I][D]=S.clone().lerp(b,D/L)}for(let I=0;I<T;I++)for(let S=0;S<2*(T-I)-1;S++){const b=Math.floor(S/2);S%2===0?(u(A[I][b+1]),u(A[I+1][b]),u(A[I][b])):(u(A[I][b+1]),u(A[I+1][b+1]),u(A[I+1][b]))}}function c(x){const y=new P;for(let _=0;_<s.length;_+=3)y.x=s[_+0],y.y=s[_+1],y.z=s[_+2],y.normalize().multiplyScalar(x),s[_+0]=y.x,s[_+1]=y.y,s[_+2]=y.z}function h(){const x=new P;for(let y=0;y<s.length;y+=3){x.x=s[y+0],x.y=s[y+1],x.z=s[y+2];const _=g(x)/2/Math.PI+.5,C=p(x)/Math.PI+.5;o.push(_,1-C)}m(),d()}function d(){for(let x=0;x<o.length;x+=6){const y=o[x+0],_=o[x+2],C=o[x+4],T=Math.max(y,_,C),A=Math.min(y,_,C);T>.9&&A<.1&&(y<.2&&(o[x+0]+=1),_<.2&&(o[x+2]+=1),C<.2&&(o[x+4]+=1))}}function u(x){s.push(x.x,x.y,x.z)}function f(x,y){const _=x*3;y.x=e[_+0],y.y=e[_+1],y.z=e[_+2]}function m(){const x=new P,y=new P,_=new P,C=new P,T=new G,A=new G,I=new G;for(let S=0,b=0;S<s.length;S+=9,b+=6){x.set(s[S+0],s[S+1],s[S+2]),y.set(s[S+3],s[S+4],s[S+5]),_.set(s[S+6],s[S+7],s[S+8]),T.set(o[b+0],o[b+1]),A.set(o[b+2],o[b+3]),I.set(o[b+4],o[b+5]),C.copy(x).add(y).add(_).divideScalar(3);const L=g(C);v(T,b+0,x,L),v(A,b+2,y,L),v(I,b+4,_,L)}}function v(x,y,_,C){C<0&&x.x===1&&(o[y]=x.x-1),_.x===0&&_.z===0&&(o[y]=C/2/Math.PI+.5)}function g(x){return Math.atan2(x.z,-x.x)}function p(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vn(e.vertices,e.indices,e.radius,e.details)}}class Oa extends vn{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,n=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Oa(e.radius,e.detail)}}const Fa=new P,za=new P,Fc=new P,Ba=new Kt;class Ad extends qe{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const n=Math.pow(10,4),s=Math.cos(In*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],h=["a","b","c"],d=new Array(3),u={},f=[];for(let m=0;m<l;m+=3){o?(c[0]=o.getX(m),c[1]=o.getX(m+1),c[2]=o.getX(m+2)):(c[0]=m,c[1]=m+1,c[2]=m+2);const{a:v,b:g,c:p}=Ba;if(v.fromBufferAttribute(a,c[0]),g.fromBufferAttribute(a,c[1]),p.fromBufferAttribute(a,c[2]),Ba.getNormal(Fc),d[0]=`${Math.round(v.x*n)},${Math.round(v.y*n)},${Math.round(v.z*n)}`,d[1]=`${Math.round(g.x*n)},${Math.round(g.y*n)},${Math.round(g.z*n)}`,d[2]=`${Math.round(p.x*n)},${Math.round(p.y*n)},${Math.round(p.z*n)}`,!(d[0]===d[1]||d[1]===d[2]||d[2]===d[0]))for(let x=0;x<3;x++){const y=(x+1)%3,_=d[x],C=d[y],T=Ba[h[x]],A=Ba[h[y]],I=`${_}_${C}`,S=`${C}_${_}`;S in u&&u[S]?(Fc.dot(u[S].normal)<=s&&(f.push(T.x,T.y,T.z),f.push(A.x,A.y,A.z)),u[S]=null):I in u||(u[I]={index0:c[x],index1:c[y],normal:Fc.clone()})}}for(const m in u)if(u[m]){const{index0:v,index1:g}=u[m];Fa.fromBufferAttribute(a,v),za.fromBufferAttribute(a,g),f.push(Fa.x,Fa.y,Fa.z),f.push(za.x,za.y,za.z)}this.setAttribute("position",new Re(f,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Hn extends Er{constructor(e){super(e),this.uuid=ni(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(n.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const n=this.holes[t];e.holes.push(n.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const n=e.holes[t];this.holes.push(new Er().fromJSON(n))}return this}}const s0={triangulate:function(r,e,t=2){const i=e&&e.length,n=i?e[0]*t:r.length;let s=Ed(r,0,n,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,h,d,u,f;if(i&&(s=c0(r,e,s,t)),r.length>80*t){a=c=r[0],l=h=r[1];for(let m=t;m<n;m+=t)d=r[m],u=r[m+1],d<a&&(a=d),u<l&&(l=u),d>c&&(c=d),u>h&&(h=u);f=Math.max(c-a,h-l),f=f!==0?32767/f:0}return Rr(s,o,t,a,l,f,0),o}};function Ed(r,e,t,i,n){let s,o;if(n===_0(r,e,t,i)>0)for(s=e;s<t;s+=i)o=Pd(s,r[s],r[s+1],o);else for(s=t-i;s>=e;s-=i)o=Pd(s,r[s],r[s+1],o);return o&&ka(o,o.next)&&(Ir(o),o=o.next),o}function Gn(r,e){if(!r)return r;e||(e=r);let t=r,i;do if(i=!1,!t.steiner&&(ka(t,t.next)||vt(t.prev,t,t.next)===0)){if(Ir(t),t=e=t.prev,t===t.next)break;i=!0}else t=t.next;while(i||t!==e);return e}function Rr(r,e,t,i,n,s,o){if(!r)return;!o&&s&&p0(r,i,n,s);let a=r,l,c;for(;r.prev!==r.next;){if(l=r.prev,c=r.next,s?o0(r,i,n,s):r0(r)){e.push(l.i/t|0),e.push(r.i/t|0),e.push(c.i/t|0),Ir(r),r=c.next,a=c.next;continue}if(r=c,r===a){o?o===1?(r=a0(Gn(r),e,t),Rr(r,e,t,i,n,s,2)):o===2&&l0(r,e,t,i,n,s):Rr(Gn(r),e,t,i,n,s,1);break}}}function r0(r){const e=r.prev,t=r,i=r.next;if(vt(e,t,i)>=0)return!1;const n=e.x,s=t.x,o=i.x,a=e.y,l=t.y,c=i.y,h=n<s?n<o?n:o:s<o?s:o,d=a<l?a<c?a:c:l<c?l:c,u=n>s?n>o?n:o:s>o?s:o,f=a>l?a>c?a:c:l>c?l:c;let m=i.next;for(;m!==e;){if(m.x>=h&&m.x<=u&&m.y>=d&&m.y<=f&&Ns(n,a,s,l,o,c,m.x,m.y)&&vt(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function o0(r,e,t,i){const n=r.prev,s=r,o=r.next;if(vt(n,s,o)>=0)return!1;const a=n.x,l=s.x,c=o.x,h=n.y,d=s.y,u=o.y,f=a<l?a<c?a:c:l<c?l:c,m=h<d?h<u?h:u:d<u?d:u,v=a>l?a>c?a:c:l>c?l:c,g=h>d?h>u?h:u:d>u?d:u,p=zc(f,m,e,t,i),x=zc(v,g,e,t,i);let y=r.prevZ,_=r.nextZ;for(;y&&y.z>=p&&_&&_.z<=x;){if(y.x>=f&&y.x<=v&&y.y>=m&&y.y<=g&&y!==n&&y!==o&&Ns(a,h,l,d,c,u,y.x,y.y)&&vt(y.prev,y,y.next)>=0||(y=y.prevZ,_.x>=f&&_.x<=v&&_.y>=m&&_.y<=g&&_!==n&&_!==o&&Ns(a,h,l,d,c,u,_.x,_.y)&&vt(_.prev,_,_.next)>=0))return!1;_=_.nextZ}for(;y&&y.z>=p;){if(y.x>=f&&y.x<=v&&y.y>=m&&y.y<=g&&y!==n&&y!==o&&Ns(a,h,l,d,c,u,y.x,y.y)&&vt(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;_&&_.z<=x;){if(_.x>=f&&_.x<=v&&_.y>=m&&_.y<=g&&_!==n&&_!==o&&Ns(a,h,l,d,c,u,_.x,_.y)&&vt(_.prev,_,_.next)>=0)return!1;_=_.nextZ}return!0}function a0(r,e,t){let i=r;do{const n=i.prev,s=i.next.next;!ka(n,s)&&Cd(n,i,i.next,s)&&Pr(n,s)&&Pr(s,n)&&(e.push(n.i/t|0),e.push(i.i/t|0),e.push(s.i/t|0),Ir(i),Ir(i.next),i=r=s),i=i.next}while(i!==r);return Gn(i)}function l0(r,e,t,i,n,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&v0(o,a)){let l=Rd(o,a);o=Gn(o,o.next),l=Gn(l,l.next),Rr(o,e,t,i,n,s,0),Rr(l,e,t,i,n,s,0);return}a=a.next}o=o.next}while(o!==r)}function c0(r,e,t,i){const n=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*i,l=s<o-1?e[s+1]*i:r.length,c=Ed(r,a,l,i,!1),c===c.next&&(c.steiner=!0),n.push(g0(c));for(n.sort(h0),s=0;s<n.length;s++)t=u0(n[s],t);return t}function h0(r,e){return r.x-e.x}function u0(r,e){const t=d0(r,e);if(!t)return e;const i=Rd(t,r);return Gn(i,i.next),Gn(t,t.next)}function d0(r,e){let t=e,i=-1/0,n;const s=r.x,o=r.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const u=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(u<=s&&u>i&&(i=u,n=t.x<t.next.x?t:t.next,u===s))return n}t=t.next}while(t!==e);if(!n)return null;const a=n,l=n.x,c=n.y;let h=1/0,d;t=n;do s>=t.x&&t.x>=l&&s!==t.x&&Ns(o<c?s:i,o,l,c,o<c?i:s,o,t.x,t.y)&&(d=Math.abs(o-t.y)/(s-t.x),Pr(t,r)&&(d<h||d===h&&(t.x>n.x||t.x===n.x&&f0(n,t)))&&(n=t,h=d)),t=t.next;while(t!==a);return n}function f0(r,e){return vt(r.prev,r,e.prev)<0&&vt(e.next,r,r.next)<0}function p0(r,e,t,i){let n=r;do n.z===0&&(n.z=zc(n.x,n.y,e,t,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==r);n.prevZ.nextZ=null,n.prevZ=null,m0(n)}function m0(r){let e,t,i,n,s,o,a,l,c=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,i=t,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||t.z<=i.z)?(n=t,t=t.nextZ,a--):(n=i,i=i.nextZ,l--),s?s.nextZ=n:r=n,n.prevZ=s,s=n;t=i}s.nextZ=null,c*=2}while(o>1);return r}function zc(r,e,t,i,n){return r=(r-t)*n|0,e=(e-i)*n|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function g0(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function Ns(r,e,t,i,n,s,o,a){return(n-o)*(e-a)>=(r-o)*(s-a)&&(r-o)*(i-a)>=(t-o)*(e-a)&&(t-o)*(s-a)>=(n-o)*(i-a)}function v0(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!y0(r,e)&&(Pr(r,e)&&Pr(e,r)&&x0(r,e)&&(vt(r.prev,r,e.prev)||vt(r,e.prev,e))||ka(r,e)&&vt(r.prev,r,r.next)>0&&vt(e.prev,e,e.next)>0)}function vt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function ka(r,e){return r.x===e.x&&r.y===e.y}function Cd(r,e,t,i){const n=Ha(vt(r,e,t)),s=Ha(vt(r,e,i)),o=Ha(vt(t,i,r)),a=Ha(vt(t,i,e));return!!(n!==s&&o!==a||n===0&&Va(r,t,e)||s===0&&Va(r,i,e)||o===0&&Va(t,r,i)||a===0&&Va(t,e,i))}function Va(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Ha(r){return r>0?1:r<0?-1:0}function y0(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Cd(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Pr(r,e){return vt(r.prev,r,r.next)<0?vt(r,e,r.next)>=0&&vt(r,r.prev,e)>=0:vt(r,e,r.prev)<0||vt(r,r.next,e)<0}function x0(r,e){let t=r,i=!1;const n=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&n<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(i=!i),t=t.next;while(t!==r);return i}function Rd(r,e){const t=new Bc(r.i,r.x,r.y),i=new Bc(e.i,e.x,e.y),n=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=n,n.prev=t,i.next=t,t.prev=i,s.next=i,i.prev=s,i}function Pd(r,e,t,i){const n=new Bc(r,e,t);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function Ir(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Bc(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function _0(r,e,t,i){let n=0;for(let s=e,o=t-i;s<t;s+=i)n+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return n}class Ui{static area(e){const t=e.length;let i=0;for(let n=t-1,s=0;s<t;n=s++)i+=e[n].x*e[s].y-e[s].x*e[n].y;return i*.5}static isClockWise(e){return Ui.area(e)<0}static triangulateShape(e,t){const i=[],n=[],s=[];Id(e),Ld(i,e);let o=e.length;t.forEach(Id);for(let l=0;l<t.length;l++)n.push(o),o+=t[l].length,Ld(i,t[l]);const a=s0.triangulate(i,n);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function Id(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Ld(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Ga extends qe{constructor(e=new Hn([new G(.5,.5),new G(-.5,.5),new G(-.5,-.5),new G(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new Re(n,3)),this.setAttribute("uv",new Re(s,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,d=t.depth!==void 0?t.depth:1;let u=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:.2,m=t.bevelSize!==void 0?t.bevelSize:f-.1,v=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const p=t.extrudePath,x=t.UVGenerator!==void 0?t.UVGenerator:b0;let y,_=!1,C,T,A,I;p&&(y=p.getSpacedPoints(h),_=!0,u=!1,C=p.computeFrenetFrames(h,!1),T=new P,A=new P,I=new P),u||(g=0,f=0,m=0,v=0);const S=a.extractPoints(c);let b=S.shape;const L=S.holes;if(!Ui.isClockWise(b)){b=b.reverse();for(let ne=0,ie=L.length;ne<ie;ne++){const R=L[ne];Ui.isClockWise(R)&&(L[ne]=R.reverse())}}const F=Ui.triangulateShape(b,L),B=b;for(let ne=0,ie=L.length;ne<ie;ne++){const R=L[ne];b=b.concat(R)}function Y(ne,ie,R){return ie||console.error("THREE.ExtrudeGeometry: vec does not exist"),ne.clone().addScaledVector(ie,R)}const H=b.length,Q=F.length;function q(ne,ie,R){let Ie,se,we;const ae=ne.x-ie.x,Be=ne.y-ie.y,ye=R.x-ne.x,E=R.y-ne.y,w=ae*ae+Be*Be,V=ae*E-Be*ye;if(Math.abs(V)>Number.EPSILON){const Z=Math.sqrt(w),ee=Math.sqrt(ye*ye+E*E),j=ie.x-Be/Z,Pe=ie.y+ae/Z,me=R.x-E/ee,be=R.y+ye/ee,je=((me-j)*E-(be-Pe)*ye)/(ae*E-Be*ye);Ie=j+ae*je-ne.x,se=Pe+Be*je-ne.y;const oe=Ie*Ie+se*se;if(oe<=2)return new G(Ie,se);we=Math.sqrt(oe/2)}else{let Z=!1;ae>Number.EPSILON?ye>Number.EPSILON&&(Z=!0):ae<-Number.EPSILON?ye<-Number.EPSILON&&(Z=!0):Math.sign(Be)===Math.sign(E)&&(Z=!0),Z?(Ie=-Be,se=ae,we=Math.sqrt(w)):(Ie=ae,se=Be,we=Math.sqrt(w/2))}return new G(Ie/we,se/we)}const te=[];for(let ne=0,ie=B.length,R=ie-1,Ie=ne+1;ne<ie;ne++,R++,Ie++)R===ie&&(R=0),Ie===ie&&(Ie=0),te[ne]=q(B[ne],B[R],B[Ie]);const ce=[];let fe,Me=te.concat();for(let ne=0,ie=L.length;ne<ie;ne++){const R=L[ne];fe=[];for(let Ie=0,se=R.length,we=se-1,ae=Ie+1;Ie<se;Ie++,we++,ae++)we===se&&(we=0),ae===se&&(ae=0),fe[Ie]=q(R[Ie],R[we],R[ae]);ce.push(fe),Me=Me.concat(fe)}for(let ne=0;ne<g;ne++){const ie=ne/g,R=f*Math.cos(ie*Math.PI/2),Ie=m*Math.sin(ie*Math.PI/2)+v;for(let se=0,we=B.length;se<we;se++){const ae=Y(B[se],te[se],Ie);ue(ae.x,ae.y,-R)}for(let se=0,we=L.length;se<we;se++){const ae=L[se];fe=ce[se];for(let Be=0,ye=ae.length;Be<ye;Be++){const E=Y(ae[Be],fe[Be],Ie);ue(E.x,E.y,-R)}}}const lt=m+v;for(let ne=0;ne<H;ne++){const ie=u?Y(b[ne],Me[ne],lt):b[ne];_?(A.copy(C.normals[0]).multiplyScalar(ie.x),T.copy(C.binormals[0]).multiplyScalar(ie.y),I.copy(y[0]).add(A).add(T),ue(I.x,I.y,I.z)):ue(ie.x,ie.y,0)}for(let ne=1;ne<=h;ne++)for(let ie=0;ie<H;ie++){const R=u?Y(b[ie],Me[ie],lt):b[ie];_?(A.copy(C.normals[ne]).multiplyScalar(R.x),T.copy(C.binormals[ne]).multiplyScalar(R.y),I.copy(y[ne]).add(A).add(T),ue(I.x,I.y,I.z)):ue(R.x,R.y,d/h*ne)}for(let ne=g-1;ne>=0;ne--){const ie=ne/g,R=f*Math.cos(ie*Math.PI/2),Ie=m*Math.sin(ie*Math.PI/2)+v;for(let se=0,we=B.length;se<we;se++){const ae=Y(B[se],te[se],Ie);ue(ae.x,ae.y,d+R)}for(let se=0,we=L.length;se<we;se++){const ae=L[se];fe=ce[se];for(let Be=0,ye=ae.length;Be<ye;Be++){const E=Y(ae[Be],fe[Be],Ie);_?ue(E.x,E.y+y[h-1].y,y[h-1].x+R):ue(E.x,E.y,d+R)}}}J(),he();function J(){const ne=n.length/3;if(u){let ie=0,R=H*ie;for(let Ie=0;Ie<Q;Ie++){const se=F[Ie];Ue(se[2]+R,se[1]+R,se[0]+R)}ie=h+g*2,R=H*ie;for(let Ie=0;Ie<Q;Ie++){const se=F[Ie];Ue(se[0]+R,se[1]+R,se[2]+R)}}else{for(let ie=0;ie<Q;ie++){const R=F[ie];Ue(R[2],R[1],R[0])}for(let ie=0;ie<Q;ie++){const R=F[ie];Ue(R[0]+H*h,R[1]+H*h,R[2]+H*h)}}i.addGroup(ne,n.length/3-ne,0)}function he(){const ne=n.length/3;let ie=0;Ce(B,ie),ie+=B.length;for(let R=0,Ie=L.length;R<Ie;R++){const se=L[R];Ce(se,ie),ie+=se.length}i.addGroup(ne,n.length/3-ne,1)}function Ce(ne,ie){let R=ne.length;for(;--R>=0;){const Ie=R;let se=R-1;se<0&&(se=ne.length-1);for(let we=0,ae=h+g*2;we<ae;we++){const Be=H*we,ye=H*(we+1),E=ie+Ie+Be,w=ie+se+Be,V=ie+se+ye,Z=ie+Ie+ye;it(E,w,V,Z)}}}function ue(ne,ie,R){l.push(ne),l.push(ie),l.push(R)}function Ue(ne,ie,R){Le(ne),Le(ie),Le(R);const Ie=n.length/3,se=x.generateTopUV(i,n,Ie-3,Ie-2,Ie-1);ot(se[0]),ot(se[1]),ot(se[2])}function it(ne,ie,R,Ie){Le(ne),Le(ie),Le(Ie),Le(ie),Le(R),Le(Ie);const se=n.length/3,we=x.generateSideWallUV(i,n,se-6,se-3,se-2,se-1);ot(we[0]),ot(we[1]),ot(we[3]),ot(we[1]),ot(we[2]),ot(we[3])}function Le(ne){n.push(l[ne*3+0]),n.push(l[ne*3+1]),n.push(l[ne*3+2])}function ot(ne){s.push(ne.x),s.push(ne.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return w0(t,i,e)}static fromJSON(e,t){const i=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];i.push(a)}const n=e.options.extrudePath;return n!==void 0&&(e.options.extrudePath=new La[n.type]().fromJSON(n)),new Ga(i,e.options)}}const b0={generateTopUV:function(r,e,t,i,n){const s=e[t*3],o=e[t*3+1],a=e[i*3],l=e[i*3+1],c=e[n*3],h=e[n*3+1];return[new G(s,o),new G(a,l),new G(c,h)]},generateSideWallUV:function(r,e,t,i,n,s){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[i*3],h=e[i*3+1],d=e[i*3+2],u=e[n*3],f=e[n*3+1],m=e[n*3+2],v=e[s*3],g=e[s*3+1],p=e[s*3+2];return Math.abs(a-h)<Math.abs(o-c)?[new G(o,1-l),new G(c,1-d),new G(u,1-m),new G(v,1-p)]:[new G(a,1-l),new G(h,1-d),new G(f,1-m),new G(g,1-p)]}};function w0(r,e,t){if(t.shapes=[],Array.isArray(r))for(let i=0,n=r.length;i<n;i++){const s=r[i];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Wa extends vn{constructor(e=1,t=0){const i=(1+Math.sqrt(5))/2,n=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(n,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Wa(e.radius,e.detail)}}class Lr extends vn{constructor(e=1,t=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],n=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,n,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Lr(e.radius,e.detail)}}class pt extends qe{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const s=e/2,o=t/2,a=Math.floor(i),l=Math.floor(n),c=a+1,h=l+1,d=e/a,u=t/l,f=[],m=[],v=[],g=[];for(let p=0;p<h;p++){const x=p*u-o;for(let y=0;y<c;y++){const _=y*d-s;m.push(_,-x,0),v.push(0,0,1),g.push(y/a),g.push(1-p/l)}}for(let p=0;p<l;p++)for(let x=0;x<a;x++){const y=x+c*p,_=x+c*(p+1),C=x+1+c*(p+1),T=x+1+c*p;f.push(y,_,T),f.push(_,C,T)}this.setIndex(f),this.setAttribute("position",new Re(m,3)),this.setAttribute("normal",new Re(v,3)),this.setAttribute("uv",new Re(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new pt(e.width,e.height,e.widthSegments,e.heightSegments)}}class Xa extends qe{constructor(e=.5,t=1,i=32,n=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:s,thetaLength:o},i=Math.max(3,i),n=Math.max(1,n);const a=[],l=[],c=[],h=[];let d=e;const u=(t-e)/n,f=new P,m=new G;for(let v=0;v<=n;v++){for(let g=0;g<=i;g++){const p=s+g/i*o;f.x=d*Math.cos(p),f.y=d*Math.sin(p),l.push(f.x,f.y,f.z),c.push(0,0,1),m.x=(f.x/t+1)/2,m.y=(f.y/t+1)/2,h.push(m.x,m.y)}d+=u}for(let v=0;v<n;v++){const g=v*(i+1);for(let p=0;p<i;p++){const x=p+g,y=x,_=x+i+1,C=x+i+2,T=x+1;a.push(y,_,T),a.push(_,C,T)}}this.setIndex(a),this.setAttribute("position",new Re(l,3)),this.setAttribute("normal",new Re(c,3)),this.setAttribute("uv",new Re(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Xa(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class qa extends qe{constructor(e=new Hn([new G(0,.5),new G(-.5,-.5),new G(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const i=[],n=[],s=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(a,l,h),a+=l,l=0;this.setIndex(i),this.setAttribute("position",new Re(n,3)),this.setAttribute("normal",new Re(s,3)),this.setAttribute("uv",new Re(o,2));function c(h){const d=n.length/3,u=h.extractPoints(t);let f=u.shape;const m=u.holes;Ui.isClockWise(f)===!1&&(f=f.reverse());for(let g=0,p=m.length;g<p;g++){const x=m[g];Ui.isClockWise(x)===!0&&(m[g]=x.reverse())}const v=Ui.triangulateShape(f,m);for(let g=0,p=m.length;g<p;g++){const x=m[g];f=f.concat(x)}for(let g=0,p=f.length;g<p;g++){const x=f[g];n.push(x.x,x.y,0),s.push(0,0,1),o.push(x.x,x.y)}for(let g=0,p=v.length;g<p;g++){const x=v[g],y=x[0]+d,_=x[1]+d,C=x[2]+d;i.push(y,_,C),l+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return S0(t,e)}static fromJSON(e,t){const i=[];for(let n=0,s=e.shapes.length;n<s;n++){const o=t[e.shapes[n]];i.push(o)}return new qa(i,e.curveSegments)}}function S0(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,i=r.length;t<i;t++){const n=r[t];e.shapes.push(n.uuid)}else e.shapes.push(r.uuid);return e}class Ur extends qe{constructor(e=1,t=32,i=16,n=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(o+a,Math.PI);let c=0;const h=[],d=new P,u=new P,f=[],m=[],v=[],g=[];for(let p=0;p<=i;p++){const x=[],y=p/i;let _=0;p===0&&o===0?_=.5/t:p===i&&l===Math.PI&&(_=-.5/t);for(let C=0;C<=t;C++){const T=C/t;d.x=-e*Math.cos(n+T*s)*Math.sin(o+y*a),d.y=e*Math.cos(o+y*a),d.z=e*Math.sin(n+T*s)*Math.sin(o+y*a),m.push(d.x,d.y,d.z),u.copy(d).normalize(),v.push(u.x,u.y,u.z),g.push(T+_,1-y),x.push(c++)}h.push(x)}for(let p=0;p<i;p++)for(let x=0;x<t;x++){const y=h[p][x+1],_=h[p][x],C=h[p+1][x],T=h[p+1][x+1];(p!==0||o>0)&&f.push(y,_,T),(p!==i-1||l<Math.PI)&&f.push(_,C,T)}this.setIndex(f),this.setAttribute("position",new Re(m,3)),this.setAttribute("normal",new Re(v,3)),this.setAttribute("uv",new Re(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ur(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Ya extends vn{constructor(e=1,t=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],n=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,n,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ya(e.radius,e.detail)}}class $a extends qe{constructor(e=1,t=.4,i=12,n=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:s},i=Math.floor(i),n=Math.floor(n);const o=[],a=[],l=[],c=[],h=new P,d=new P,u=new P;for(let f=0;f<=i;f++)for(let m=0;m<=n;m++){const v=m/n*s,g=f/i*Math.PI*2;d.x=(e+t*Math.cos(g))*Math.cos(v),d.y=(e+t*Math.cos(g))*Math.sin(v),d.z=t*Math.sin(g),a.push(d.x,d.y,d.z),h.x=e*Math.cos(v),h.y=e*Math.sin(v),u.subVectors(d,h).normalize(),l.push(u.x,u.y,u.z),c.push(m/n),c.push(f/i)}for(let f=1;f<=i;f++)for(let m=1;m<=n;m++){const v=(n+1)*f+m-1,g=(n+1)*(f-1)+m-1,p=(n+1)*(f-1)+m,x=(n+1)*f+m;o.push(v,g,x),o.push(g,p,x)}this.setIndex(o),this.setAttribute("position",new Re(a,3)),this.setAttribute("normal",new Re(l,3)),this.setAttribute("uv",new Re(c,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new $a(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Za extends qe{constructor(e=1,t=.4,i=64,n=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:s,q:o},i=Math.floor(i),n=Math.floor(n);const a=[],l=[],c=[],h=[],d=new P,u=new P,f=new P,m=new P,v=new P,g=new P,p=new P;for(let y=0;y<=i;++y){const _=y/i*s*Math.PI*2;x(_,s,o,e,f),x(_+.01,s,o,e,m),g.subVectors(m,f),p.addVectors(m,f),v.crossVectors(g,p),p.crossVectors(v,g),v.normalize(),p.normalize();for(let C=0;C<=n;++C){const T=C/n*Math.PI*2,A=-t*Math.cos(T),I=t*Math.sin(T);d.x=f.x+(A*p.x+I*v.x),d.y=f.y+(A*p.y+I*v.y),d.z=f.z+(A*p.z+I*v.z),l.push(d.x,d.y,d.z),u.subVectors(d,f).normalize(),c.push(u.x,u.y,u.z),h.push(y/i),h.push(C/n)}}for(let y=1;y<=i;y++)for(let _=1;_<=n;_++){const C=(n+1)*(y-1)+(_-1),T=(n+1)*y+(_-1),A=(n+1)*y+_,I=(n+1)*(y-1)+_;a.push(C,T,I),a.push(T,A,I)}this.setIndex(a),this.setAttribute("position",new Re(l,3)),this.setAttribute("normal",new Re(c,3)),this.setAttribute("uv",new Re(h,2));function x(y,_,C,T,A){const I=Math.cos(y),S=Math.sin(y),b=C/_*y,L=Math.cos(b);A.x=T*(2+L)*.5*I,A.y=T*(2+L)*S*.5,A.z=T*Math.sin(b)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Za(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class ja extends qe{constructor(e=new Nc(new P(-1,-1,0),new P(-1,1,0),new P(1,1,0)),t=64,i=1,n=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new P,l=new P,c=new G;let h=new P;const d=[],u=[],f=[],m=[];v(),this.setIndex(m),this.setAttribute("position",new Re(d,3)),this.setAttribute("normal",new Re(u,3)),this.setAttribute("uv",new Re(f,2));function v(){for(let y=0;y<t;y++)g(y);g(s===!1?t:0),x(),p()}function g(y){h=e.getPointAt(y/t,h);const _=o.normals[y],C=o.binormals[y];for(let T=0;T<=n;T++){const A=T/n*Math.PI*2,I=Math.sin(A),S=-Math.cos(A);l.x=S*_.x+I*C.x,l.y=S*_.y+I*C.y,l.z=S*_.z+I*C.z,l.normalize(),u.push(l.x,l.y,l.z),a.x=h.x+i*l.x,a.y=h.y+i*l.y,a.z=h.z+i*l.z,d.push(a.x,a.y,a.z)}}function p(){for(let y=1;y<=t;y++)for(let _=1;_<=n;_++){const C=(n+1)*(y-1)+(_-1),T=(n+1)*y+(_-1),A=(n+1)*y+_,I=(n+1)*(y-1)+_;m.push(C,T,I),m.push(T,A,I)}}function x(){for(let y=0;y<=t;y++)for(let _=0;_<=n;_++)c.x=y/t,c.y=_/n,f.push(c.x,c.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new ja(new La[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Ud extends qe{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],i=new Set,n=new P,s=new P;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const d=l[c],u=d.start,f=d.count;for(let m=u,v=u+f;m<v;m+=3)for(let g=0;g<3;g++){const p=a.getX(m+g),x=a.getX(m+(g+1)%3);n.fromBufferAttribute(o,p),s.fromBufferAttribute(o,x),Dd(n,s,i)===!0&&(t.push(n.x,n.y,n.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const h=3*a+c,d=3*a+(c+1)%3;n.fromBufferAttribute(o,h),s.fromBufferAttribute(o,d),Dd(n,s,i)===!0&&(t.push(n.x,n.y,n.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Re(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function Dd(r,e,t){const i=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,n=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(i)===!0||t.has(n)===!0?!1:(t.add(i),t.add(n),!0)}var Nd=Object.freeze({__proto__:null,BoxGeometry:On,CapsuleGeometry:Ua,CircleGeometry:Da,ConeGeometry:Na,CylinderGeometry:Ds,DodecahedronGeometry:Oa,EdgesGeometry:Ad,ExtrudeGeometry:Ga,IcosahedronGeometry:Wa,LatheGeometry:Cr,OctahedronGeometry:Lr,PlaneGeometry:pt,PolyhedronGeometry:vn,RingGeometry:Xa,ShapeGeometry:qa,SphereGeometry:Ur,TetrahedronGeometry:Ya,TorusGeometry:$a,TorusKnotGeometry:Za,TubeGeometry:ja,WireframeGeometry:Ud});class Od extends Ft{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new le(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Fd extends _t{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class kc extends Ft{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new le(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ri,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class zd extends kc{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new G(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return He(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new le(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new le(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new le(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Bd extends Ft{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new le(16777215),this.specular=new le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ri,this.combine=Xs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class kd extends Ft{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new le(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Vd extends Ft{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Hd extends Ft{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new ri,this.combine=Xs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Vc extends Ft{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=du,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Hc extends Ft{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}class Gd extends Ft{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new le(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Wd extends qt{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function Wn(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function Xd(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function qd(r){function e(n,s){return r[n]-r[s]}const t=r.length,i=new Array(t);for(let n=0;n!==t;++n)i[n]=n;return i.sort(e),i}function Gc(r,e,t){const i=r.length,n=new r.constructor(i);for(let s=0,o=0;o!==i;++s){const a=t[s]*e;for(let l=0;l!==e;++l)n[o++]=r[a+l]}return n}function Wc(r,e,t,i){let n=1,s=r[0];for(;s!==void 0&&s[i]===void 0;)s=r[n++];if(s===void 0)return;let o=s[i];if(o!==void 0)if(Array.isArray(o))do o=s[i],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=r[n++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=r[n++];while(s!==void 0);else do o=s[i],o!==void 0&&(e.push(s.time),t.push(o)),s=r[n++];while(s!==void 0)}function M0(r,e,t,i,n=30){const s=r.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],h=c.getValueSize(),d=[],u=[];for(let f=0;f<c.times.length;++f){const m=c.times[f]*n;if(!(m<t||m>=i)){d.push(c.times[f]);for(let v=0;v<h;++v)u.push(c.values[f*h+v])}}d.length!==0&&(c.times=Wn(d,c.times.constructor),c.values=Wn(u,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s}function T0(r,e=0,t=r,i=30){i<=0&&(i=30);const n=t.tracks.length,s=e/i;for(let o=0;o<n;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=r.tracks.find(function(p){return p.name===a.name&&p.ValueTypeName===l});if(c===void 0)continue;let h=0;const d=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=d/3);let u=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=f/3);const m=a.times.length-1;let v;if(s<=a.times[0]){const p=h,x=d-h;v=a.values.slice(p,x)}else if(s>=a.times[m]){const p=m*d+h,x=p+d-h;v=a.values.slice(p,x)}else{const p=a.createInterpolant(),x=h,y=d-h;p.evaluate(s),v=p.resultBuffer.slice(x,y)}l==="quaternion"&&new Jt().fromArray(v).normalize().conjugate().toArray(v);const g=c.times.length;for(let p=0;p<g;++p){const x=p*f+u;if(l==="quaternion")Jt.multiplyQuaternionsFlat(c.values,x,v,0,c.values,x);else{const y=f-u*2;for(let _=0;_<y;++_)c.values[x+_]-=v[_]}}}return r.blendMode=Hl,r}const A0={convertArray:Wn,isTypedArray:Xd,getKeyframeOrder:qd,sortedArray:Gc,flattenJSON:Wc,subclip:M0,makeClipAdditive:T0};class Dr{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=n!==void 0?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,n=t[i],s=t[i-1];e:{t:{let o;i:{n:if(!(e<n)){for(let a=i+2;;){if(n===void 0){if(e<s)break n;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===a)break;if(s=n,n=t[++i],e<n)break t}o=t.length;break i}if(!(e>=s)){const a=t[1];e<a&&(i=2,s=a);for(let l=i-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(n=s,s=t[--i-1],e>=s)break t}o=i,i=0;break i}break e}for(;i<o;){const a=i+o>>>1;e<t[a]?o=a:i=a+1}if(n=t[i],s=t[i-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,s,n)}return this.interpolate_(i,s,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,s=e*n;for(let o=0;o!==n;++o)t[o]=i[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Yd extends Dr{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Cn,endingEnd:Cn}}intervalChanged_(e,t,i){const n=this.parameterPositions;let s=e-2,o=e+1,a=n[s],l=n[o];if(a===void 0)switch(this.getSettings_().endingStart){case Rn:s=e,a=2*t-i;break;case sr:s=n.length-2,a=t+n[s]-n[s+1];break;default:s=e,a=i}if(l===void 0)switch(this.getSettings_().endingEnd){case Rn:o=e,l=2*i-t;break;case sr:o=1,l=i+n[1]-n[0];break;default:o=e-1,l=t}const c=(i-t)*.5,h=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-i),this._offsetPrev=s*h,this._offsetNext=o*h}interpolate_(e,t,i,n){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=this._offsetPrev,d=this._offsetNext,u=this._weightPrev,f=this._weightNext,m=(i-t)/(n-t),v=m*m,g=v*m,p=-u*g+2*u*v-u*m,x=(1+u)*g+(-1.5-2*u)*v+(-.5+u)*m+1,y=(-1-f)*g+(1.5+f)*v+.5*m,_=f*g-f*v;for(let C=0;C!==a;++C)s[C]=p*o[h+C]+x*o[c+C]+y*o[l+C]+_*o[d+C];return s}}class Xc extends Dr{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,h=(i-t)/(n-t),d=1-h;for(let u=0;u!==a;++u)s[u]=o[c+u]*d+o[l+u]*h;return s}}class $d extends Dr{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class vi{constructor(e,t,i,n){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Wn(t,this.TimeBufferType),this.values=Wn(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:Wn(e.times,Array),values:Wn(e.values,Array)};const n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new $d(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Xc(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Yd(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case nr:t=this.InterpolantFactoryMethodDiscrete;break;case ko:t=this.InterpolantFactoryMethodLinear;break;case Vo:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return nr;case this.InterpolantFactoryMethodLinear:return ko;case this.InterpolantFactoryMethodSmooth:return Vo}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){const i=this.times,n=i.length;let s=0,o=n-1;for(;s!==n&&i[s]<e;)++s;for(;o!==-1&&i[o]>t;)--o;if(++o,s!==0||o!==n){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=i.slice(s,o),this.values=this.values.slice(s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,n=this.values,s=i.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const l=i[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(n!==void 0&&Xd(n))for(let a=0,l=n.length;a!==l;++a){const c=n[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),n=this.getInterpolation()===Vo,s=e.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=e[a],h=e[a+1];if(c!==h&&(a!==1||c!==e[0]))if(n)l=!0;else{const d=a*i,u=d-i,f=d+i;for(let m=0;m!==i;++m){const v=t[d+m];if(v!==t[u+m]||v!==t[f+m]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const d=a*i,u=o*i;for(let f=0;f!==i;++f)t[u+f]=t[d+f]}++o}}if(s>0){e[o]=e[s];for(let a=s*i,l=o*i,c=0;c!==i;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*i)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),i=this.constructor,n=new i(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}vi.prototype.TimeBufferType=Float32Array,vi.prototype.ValueBufferType=Float32Array,vi.prototype.DefaultInterpolation=ko;class Xn extends vi{constructor(e,t,i){super(e,t,i)}}Xn.prototype.ValueTypeName="bool",Xn.prototype.ValueBufferType=Array,Xn.prototype.DefaultInterpolation=nr,Xn.prototype.InterpolantFactoryMethodLinear=void 0,Xn.prototype.InterpolantFactoryMethodSmooth=void 0;class qc extends vi{}qc.prototype.ValueTypeName="color";class Nr extends vi{}Nr.prototype.ValueTypeName="number";class Zd extends Dr{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(i-t)/(n-t);let c=e*a;for(let h=c+a;c!==h;c+=4)Jt.slerpFlat(s,0,o,c-a,o,c,l);return s}}class Or extends vi{InterpolantFactoryMethodLinear(e){return new Zd(this.times,this.values,this.getValueSize(),e)}}Or.prototype.ValueTypeName="quaternion",Or.prototype.InterpolantFactoryMethodSmooth=void 0;class qn extends vi{constructor(e,t,i){super(e,t,i)}}qn.prototype.ValueTypeName="string",qn.prototype.ValueBufferType=Array,qn.prototype.DefaultInterpolation=nr,qn.prototype.InterpolantFactoryMethodLinear=void 0,qn.prototype.InterpolantFactoryMethodSmooth=void 0;class Fr extends vi{}Fr.prototype.ValueTypeName="vector";class zr{constructor(e="",t=-1,i=[],n=Ho){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=ni(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,n=1/(e.fps||1);for(let o=0,a=i.length;o!==a;++o)t.push(C0(i[o]).scale(n));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=i.length;s!==o;++s)t.push(vi.toJSON(i[s]));return n}static CreateFromMorphTargetSequence(e,t,i,n){const s=t.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const h=qd(l);l=Gc(l,1,h),c=Gc(c,1,h),!n&&l[0]===0&&(l.push(s),c.push(c[0])),o.push(new Nr(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/i))}return new this(e,-1,o)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const n=e;i=n.geometry&&n.geometry.animations||n.animations}for(let n=0;n<i.length;n++)if(i[n].name===t)return i[n];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const n={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],h=c.name.match(s);if(h&&h.length>1){const d=h[1];let u=n[d];u||(n[d]=u=[]),u.push(c)}}const o=[];for(const a in n)o.push(this.CreateFromMorphTargetSequence(a,n[a],t,i));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(d,u,f,m,v){if(f.length!==0){const g=[],p=[];Wc(f,g,p,m),g.length!==0&&v.push(new d(u,g,p))}},n=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let d=0;d<c.length;d++){const u=c[d].keys;if(!(!u||u.length===0))if(u[0].morphTargets){const f={};let m;for(m=0;m<u.length;m++)if(u[m].morphTargets)for(let v=0;v<u[m].morphTargets.length;v++)f[u[m].morphTargets[v]]=-1;for(const v in f){const g=[],p=[];for(let x=0;x!==u[m].morphTargets.length;++x){const y=u[m];g.push(y.time),p.push(y.morphTarget===v?1:0)}n.push(new Nr(".morphTargetInfluence["+v+"]",g,p))}l=f.length*o}else{const f=".bones["+t[d].name+"]";i(Fr,f+".position",u,"pos",n),i(Or,f+".quaternion",u,"rot",n),i(Fr,f+".scale",u,"scl",n)}}return n.length===0?null:new this(s,l,n,a)}resetDuration(){const e=this.tracks;let t=0;for(let i=0,n=e.length;i!==n;++i){const s=this.tracks[i];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function E0(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Nr;case"vector":case"vector2":case"vector3":case"vector4":return Fr;case"color":return qc;case"quaternion":return Or;case"bool":case"boolean":return Xn;case"string":return qn}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function C0(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=E0(r.type);if(r.times===void 0){const t=[],i=[];Wc(r.keys,t,i,"value"),r.times=t,r.values=i}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const $i={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Yc{constructor(e,t,i){const n=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(h){a++,s===!1&&n.onStart!==void 0&&n.onStart(h,o,a),s=!0},this.itemEnd=function(h){o++,n.onProgress!==void 0&&n.onProgress(h,o,a),o===a&&(s=!1,n.onLoad!==void 0&&n.onLoad())},this.itemError=function(h){n.onError!==void 0&&n.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,d){return c.push(h,d),this},this.removeHandler=function(h){const d=c.indexOf(h);return d!==-1&&c.splice(d,2),this},this.getHandler=function(h){for(let d=0,u=c.length;d<u;d+=2){const f=c[d],m=c[d+1];if(f.global&&(f.lastIndex=0),f.test(h))return m}return null}}}const jd=new Yc;class ti{constructor(e){this.manager=e!==void 0?e:jd,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(n,s){i.load(e,n,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}ti.DEFAULT_MATERIAL_NAME="__DEFAULT";const Zi={};class R0 extends Error{constructor(e,t){super(e),this.response=t}}class ji extends ti{constructor(e){super(e)}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=$i.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Zi[e]!==void 0){Zi[e].push({onLoad:t,onProgress:i,onError:n});return}Zi[e]=[],Zi[e].push({onLoad:t,onProgress:i,onError:n});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=Zi[e],d=c.body.getReader(),u=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=u?parseInt(u):0,m=f!==0;let v=0;const g=new ReadableStream({start(p){x();function x(){d.read().then(({done:y,value:_})=>{if(y)p.close();else{v+=_.byteLength;const C=new ProgressEvent("progress",{lengthComputable:m,loaded:v,total:f});for(let T=0,A=h.length;T<A;T++){const I=h[T];I.onProgress&&I.onProgress(C)}p.enqueue(_),x()}},y=>{p.error(y)})}}});return new Response(g)}else throw new R0(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,a));case"json":return c.json();default:if(a===void 0)return c.text();{const d=/charset="?([^;"\s]*)"?/i.exec(a),u=d&&d[1]?d[1].toLowerCase():void 0,f=new TextDecoder(u);return c.arrayBuffer().then(m=>f.decode(m))}}}).then(c=>{$i.add(e,c);const h=Zi[e];delete Zi[e];for(let d=0,u=h.length;d<u;d++){const f=h[d];f.onLoad&&f.onLoad(c)}}).catch(c=>{const h=Zi[e];if(h===void 0)throw this.manager.itemError(e),c;delete Zi[e];for(let d=0,u=h.length;d<u;d++){const f=h[d];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class P0 extends ti{constructor(e){super(e)}load(e,t,i,n){const s=this,o=new ji(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),s.manager.itemError(e)}},i,n)}parse(e){const t=[];for(let i=0;i<e.length;i++){const n=zr.parse(e[i]);t.push(n)}return t}}class I0 extends ti{constructor(e){super(e)}load(e,t,i,n){const s=this,o=[],a=new Ra,l=new ji(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function h(d){l.load(e[d],function(u){const f=s.parse(u,!0);o[d]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(a.minFilter=Mt),a.image=o,a.format=f.format,a.needsUpdate=!0,t&&t(a))},i,n)}if(Array.isArray(e))for(let d=0,u=e.length;d<u;++d)h(d);else l.load(e,function(d){const u=s.parse(d,!0);if(u.isCubemap){const f=u.mipmaps.length/u.mipmapCount;for(let m=0;m<f;m++){o[m]={mipmaps:[]};for(let v=0;v<u.mipmapCount;v++)o[m].mipmaps.push(u.mipmaps[m*u.mipmapCount+v]),o[m].format=u.format,o[m].width=u.width,o[m].height=u.height}a.image=o}else a.image.width=u.width,a.image.height=u.height,a.mipmaps=u.mipmaps;u.mipmapCount===1&&(a.minFilter=Mt),a.format=u.format,a.needsUpdate=!0,t&&t(a)},i,n);return a}}class Br extends ti{constructor(e){super(e)}load(e,t,i,n){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=$i.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=cr("img");function l(){h(),$i.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(d){h(),n&&n(d),s.manager.itemError(e),s.manager.itemEnd(e)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class L0 extends ti{constructor(e){super(e)}load(e,t,i,n){const s=new gr;s.colorSpace=Zt;const o=new Br(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(h){s.images[c]=h,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,n)}for(let c=0;c<e.length;++c)l(c);return s}}class U0 extends ti{constructor(e){super(e)}load(e,t,i,n){const s=this,o=new Ii,a=new ji(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){let c;try{c=s.parse(l)}catch(h){if(n!==void 0)n(h);else{console.error(h);return}}c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:li,o.wrapT=c.wrapT!==void 0?c.wrapT:li,o.magFilter=c.magFilter!==void 0?c.magFilter:Mt,o.minFilter=c.minFilter!==void 0?c.minFilter:Mt,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(o.colorSpace=c.colorSpace),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=Ci),c.mipmapCount===1&&(o.minFilter=Mt),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c)},i,n),o}}class D0 extends ti{constructor(e){super(e)}load(e,t,i,n){const s=new xt,o=new Br(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},i,n),s}}class yn extends et{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new le(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class Jd extends yn{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(et.DEFAULT_UP),this.updateMatrix(),this.groundColor=new le(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const $c=new ze,Kd=new P,Qd=new P;class Zc{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new G(512,512),this.map=null,this.mapPass=null,this.matrix=new ze,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new wr,this._frameExtents=new G(1,1),this._viewportCount=1,this._viewports=[new Qe(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;Kd.setFromMatrixPosition(e.matrixWorld),t.position.copy(Kd),Qd.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Qd),t.updateMatrixWorld(),$c.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix($c),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply($c)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class N0 extends Zc{constructor(){super(new It(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=hs*2*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(i!==t.fov||n!==t.aspect||s!==t.far)&&(t.fov=i,t.aspect=n,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class ef extends yn{constructor(e,t,i=0,n=Math.PI/3,s=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(et.DEFAULT_UP),this.updateMatrix(),this.target=new et,this.distance=i,this.angle=n,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new N0}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const tf=new ze,kr=new P,jc=new P;class O0 extends Zc{constructor(){super(new It(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new G(4,2),this._viewportCount=6,this._viewports=[new Qe(2,1,1,1),new Qe(0,1,1,1),new Qe(3,1,1,1),new Qe(1,1,1,1),new Qe(3,0,1,1),new Qe(1,0,1,1)],this._cubeDirections=[new P(1,0,0),new P(-1,0,0),new P(0,0,1),new P(0,0,-1),new P(0,1,0),new P(0,-1,0)],this._cubeUps=[new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,1,0),new P(0,0,1),new P(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,n=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),kr.setFromMatrixPosition(e.matrixWorld),i.position.copy(kr),jc.copy(i.position),jc.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(jc),i.updateMatrixWorld(),n.makeTranslation(-kr.x,-kr.y,-kr.z),tf.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(tf)}}class nf extends yn{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new O0}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Ja extends la{constructor(e=-1,t=1,i=1,n=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let s=i-e,o=i+e,a=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class F0 extends Zc{constructor(){super(new Ja(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class sf extends yn{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(et.DEFAULT_UP),this.updateMatrix(),this.target=new et,this.shadow=new F0}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class rf extends yn{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class of extends yn{constructor(e,t,i=10,n=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class af{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new P)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,n=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*n),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*i),t.addScaledVector(o[4],1.092548*(i*n)),t.addScaledVector(o[5],1.092548*(n*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(i*s)),t.addScaledVector(o[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){const i=e.x,n=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*n),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*i),t.addScaledVector(o[4],2*.429043*i*n),t.addScaledVector(o[5],2*.429043*n*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*i*s),t.addScaledVector(o[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+n*3);return this}toArray(e=[],t=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+n*3);return e}static getBasisAt(e,t){const i=e.x,n=e.y,s=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*s,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*i*s,t[8]=.546274*(i*i-n*n)}}class lf extends yn{constructor(e=new af,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Ka extends ti{constructor(e){super(e),this.textures={}}load(e,t,i,n){const s=this,o=new ji(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),s.manager.itemError(e)}},i,n)}parse(e){const t=this.textures;function i(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const n=this.createMaterialFromType(e.type);if(e.uuid!==void 0&&(n.uuid=e.uuid),e.name!==void 0&&(n.name=e.name),e.color!==void 0&&n.color!==void 0&&n.color.setHex(e.color),e.roughness!==void 0&&(n.roughness=e.roughness),e.metalness!==void 0&&(n.metalness=e.metalness),e.sheen!==void 0&&(n.sheen=e.sheen),e.sheenColor!==void 0&&(n.sheenColor=new le().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(n.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&n.emissive!==void 0&&n.emissive.setHex(e.emissive),e.specular!==void 0&&n.specular!==void 0&&n.specular.setHex(e.specular),e.specularIntensity!==void 0&&(n.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&n.specularColor!==void 0&&n.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(n.shininess=e.shininess),e.clearcoat!==void 0&&(n.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=e.clearcoatRoughness),e.dispersion!==void 0&&(n.dispersion=e.dispersion),e.iridescence!==void 0&&(n.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(n.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(n.transmission=e.transmission),e.thickness!==void 0&&(n.thickness=e.thickness),e.attenuationDistance!==void 0&&(n.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&n.attenuationColor!==void 0&&n.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(n.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(n.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(n.fog=e.fog),e.flatShading!==void 0&&(n.flatShading=e.flatShading),e.blending!==void 0&&(n.blending=e.blending),e.combine!==void 0&&(n.combine=e.combine),e.side!==void 0&&(n.side=e.side),e.shadowSide!==void 0&&(n.shadowSide=e.shadowSide),e.opacity!==void 0&&(n.opacity=e.opacity),e.transparent!==void 0&&(n.transparent=e.transparent),e.alphaTest!==void 0&&(n.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(n.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(n.depthFunc=e.depthFunc),e.depthTest!==void 0&&(n.depthTest=e.depthTest),e.depthWrite!==void 0&&(n.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(n.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(n.blendSrc=e.blendSrc),e.blendDst!==void 0&&(n.blendDst=e.blendDst),e.blendEquation!==void 0&&(n.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(n.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(n.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(n.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&n.blendColor!==void 0&&n.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(n.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(n.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(n.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(n.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(n.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(n.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(n.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(n.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(n.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(n.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(n.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(n.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(n.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(n.rotation=e.rotation),e.linewidth!==void 0&&(n.linewidth=e.linewidth),e.dashSize!==void 0&&(n.dashSize=e.dashSize),e.gapSize!==void 0&&(n.gapSize=e.gapSize),e.scale!==void 0&&(n.scale=e.scale),e.polygonOffset!==void 0&&(n.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(n.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(n.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(n.dithering=e.dithering),e.alphaToCoverage!==void 0&&(n.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(n.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(n.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(n.visible=e.visible),e.toneMapped!==void 0&&(n.toneMapped=e.toneMapped),e.userData!==void 0&&(n.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(n.uniforms[s]={},o.type){case"t":n.uniforms[s].value=i(o.value);break;case"c":n.uniforms[s].value=new le().setHex(o.value);break;case"v2":n.uniforms[s].value=new G().fromArray(o.value);break;case"v3":n.uniforms[s].value=new P().fromArray(o.value);break;case"v4":n.uniforms[s].value=new Qe().fromArray(o.value);break;case"m3":n.uniforms[s].value=new We().fromArray(o.value);break;case"m4":n.uniforms[s].value=new ze().fromArray(o.value);break;default:n.uniforms[s].value=o.value}}if(e.defines!==void 0&&(n.defines=e.defines),e.vertexShader!==void 0&&(n.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(n.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(n.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)n.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(n.lights=e.lights),e.clipping!==void 0&&(n.clipping=e.clipping),e.size!==void 0&&(n.size=e.size),e.sizeAttenuation!==void 0&&(n.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(n.map=i(e.map)),e.matcap!==void 0&&(n.matcap=i(e.matcap)),e.alphaMap!==void 0&&(n.alphaMap=i(e.alphaMap)),e.bumpMap!==void 0&&(n.bumpMap=i(e.bumpMap)),e.bumpScale!==void 0&&(n.bumpScale=e.bumpScale),e.normalMap!==void 0&&(n.normalMap=i(e.normalMap)),e.normalMapType!==void 0&&(n.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),n.normalScale=new G().fromArray(s)}return e.displacementMap!==void 0&&(n.displacementMap=i(e.displacementMap)),e.displacementScale!==void 0&&(n.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(n.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(n.roughnessMap=i(e.roughnessMap)),e.metalnessMap!==void 0&&(n.metalnessMap=i(e.metalnessMap)),e.emissiveMap!==void 0&&(n.emissiveMap=i(e.emissiveMap)),e.emissiveIntensity!==void 0&&(n.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(n.specularMap=i(e.specularMap)),e.specularIntensityMap!==void 0&&(n.specularIntensityMap=i(e.specularIntensityMap)),e.specularColorMap!==void 0&&(n.specularColorMap=i(e.specularColorMap)),e.envMap!==void 0&&(n.envMap=i(e.envMap)),e.envMapRotation!==void 0&&n.envMapRotation.fromArray(e.envMapRotation),e.envMapIntensity!==void 0&&(n.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(n.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(n.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(n.lightMap=i(e.lightMap)),e.lightMapIntensity!==void 0&&(n.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(n.aoMap=i(e.aoMap)),e.aoMapIntensity!==void 0&&(n.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(n.gradientMap=i(e.gradientMap)),e.clearcoatMap!==void 0&&(n.clearcoatMap=i(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(n.clearcoatNormalScale=new G().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(n.iridescenceMap=i(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(n.iridescenceThicknessMap=i(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(n.transmissionMap=i(e.transmissionMap)),e.thicknessMap!==void 0&&(n.thicknessMap=i(e.thicknessMap)),e.anisotropyMap!==void 0&&(n.anisotropyMap=i(e.anisotropyMap)),e.sheenColorMap!==void 0&&(n.sheenColorMap=i(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(n.sheenRoughnessMap=i(e.sheenRoughnessMap)),n}setTextures(e){return this.textures=e,this}createMaterialFromType(e){return Ka.createMaterialFromType(e)}static createMaterialFromType(e){const t={ShadowMaterial:Od,SpriteMaterial:mc,RawShaderMaterial:Fd,ShaderMaterial:_t,PointsMaterial:Tc,MeshPhysicalMaterial:zd,MeshStandardMaterial:kc,MeshPhongMaterial:Bd,MeshToonMaterial:kd,MeshNormalMaterial:Vd,MeshLambertMaterial:Hd,MeshDepthMaterial:Vc,MeshDistanceMaterial:Hc,MeshBasicMaterial:fn,MeshMatcapMaterial:Gd,LineDashedMaterial:Wd,LineBasicMaterial:qt,Material:Ft};return new t[e]}}class Jc{static decodeText(e){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let i=0,n=e.length;i<n;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class cf extends qe{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class hf extends ti{constructor(e){super(e)}load(e,t,i,n){const s=this,o=new ji(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){n?n(l):console.error(l),s.manager.itemError(e)}},i,n)}parse(e){const t={},i={};function n(f,m){if(t[m]!==void 0)return t[m];const g=f.interleavedBuffers[m],p=s(f,g.buffer),x=us(g.type,p),y=new da(x,g.stride);return y.uuid=g.uuid,t[m]=y,y}function s(f,m){if(i[m]!==void 0)return i[m];const g=f.arrayBuffers[m],p=new Uint32Array(g).buffer;return i[m]=p,p}const o=e.isInstancedBufferGeometry?new cf:new qe,a=e.data.index;if(a!==void 0){const f=us(a.type,a.array);o.setIndex(new ft(f,1))}const l=e.data.attributes;for(const f in l){const m=l[f];let v;if(m.isInterleavedBufferAttribute){const g=n(e.data,m.data);v=new zn(g,m.itemSize,m.offset,m.normalized)}else{const g=us(m.type,m.array),p=m.isInstancedBufferAttribute?Ls:ft;v=new p(g,m.itemSize,m.normalized)}m.name!==void 0&&(v.name=m.name),m.usage!==void 0&&v.setUsage(m.usage),o.setAttribute(f,v)}const c=e.data.morphAttributes;if(c)for(const f in c){const m=c[f],v=[];for(let g=0,p=m.length;g<p;g++){const x=m[g];let y;if(x.isInterleavedBufferAttribute){const _=n(e.data,x.data);y=new zn(_,x.itemSize,x.offset,x.normalized)}else{const _=us(x.type,x.array);y=new ft(_,x.itemSize,x.normalized)}x.name!==void 0&&(y.name=x.name),v.push(y)}o.morphAttributes[f]=v}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const d=e.data.groups||e.data.drawcalls||e.data.offsets;if(d!==void 0)for(let f=0,m=d.length;f!==m;++f){const v=d[f];o.addGroup(v.start,v.count,v.materialIndex)}const u=e.data.boundingSphere;if(u!==void 0){const f=new P;u.center!==void 0&&f.fromArray(u.center),o.boundingSphere=new Nt(f,u.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class z0 extends ti{constructor(e){super(e)}load(e,t,i,n){const s=this,o=this.path===""?Jc.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new ji(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(d){n!==void 0&&n(d),console.error("THREE:ObjectLoader: Can't parse "+e+".",d.message);return}const h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){n!==void 0&&n(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},i,n)}async loadAsync(e,t){const i=this,n=this.path===""?Jc.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||n;const s=new ji(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await i.parseAsync(a)}parse(e,t){const i=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,n),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,s,l,a,i),h=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,h),this.bindLightTargets(c),t!==void 0){let d=!1;for(const u in o)if(o[u].data instanceof HTMLImageElement){d=!0;break}d===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,i),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,n,a,o,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(e){const t={};if(e!==void 0)for(let i=0,n=e.length;i<n;i++){const s=new Hn().fromJSON(e[i]);t[s.uuid]=s}return t}parseSkeletons(e,t){const i={},n={};if(t.traverse(function(s){s.isBone&&(n[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new ya().fromJSON(e[s],n);i[a.uuid]=a}return i}parseGeometries(e,t){const i={};if(e!==void 0){const n=new hf;for(let s=0,o=e.length;s<o;s++){let a;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=n.parse(l);break;default:l.type in Nd?a=Nd[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),i[l.uuid]=a}}return i}parseMaterials(e,t){const i={},n={};if(e!==void 0){const s=new Ka;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];i[l.uuid]===void 0&&(i[l.uuid]=s.parse(l)),n[l.uuid]=i[l.uuid]}}return n}parseAnimations(e){const t={};if(e!==void 0)for(let i=0;i<e.length;i++){const n=e[i],s=zr.parse(n);t[s.uuid]=s}return t}parseImages(e,t){const i=this,n={};let s;function o(l){return i.manager.itemStart(l),s.load(l,function(){i.manager.itemEnd(l)},void 0,function(){i.manager.itemError(l),i.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:i.resourcePath+c;return o(h)}else return l.data?{data:us(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new Yc(t);s=new Br(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,h=e.length;c<h;c++){const d=e[c],u=d.url;if(Array.isArray(u)){const f=[];for(let m=0,v=u.length;m<v;m++){const g=u[m],p=a(g);p!==null&&(p instanceof HTMLImageElement?f.push(p):f.push(new Ii(p.data,p.width,p.height)))}n[d.uuid]=new Ln(f)}else{const f=a(d.url);n[d.uuid]=new Ln(f)}}}return n}async parseImagesAsync(e){const t=this,i={};let n;async function s(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await n.loadAsync(l)}else return o.data?{data:us(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){n=new Br(this.manager),n.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.url;if(Array.isArray(c)){const h=[];for(let d=0,u=c.length;d<u;d++){const f=c[d],m=await s(f);m!==null&&(m instanceof HTMLImageElement?h.push(m):h.push(new Ii(m.data,m.width,m.height)))}i[l.uuid]=new Ln(h)}else{const h=await s(l.url);i[l.uuid]=new Ln(h)}}}return i}parseTextures(e,t){function i(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const n={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=t[a.image],c=l.data;let h;Array.isArray(c)?(h=new gr,c.length===6&&(h.needsUpdate=!0)):(c&&c.data?h=new Ii:h=new xt,c&&(h.needsUpdate=!0)),h.source=l,h.uuid=a.uuid,a.name!==void 0&&(h.name=a.name),a.mapping!==void 0&&(h.mapping=i(a.mapping,B0)),a.channel!==void 0&&(h.channel=a.channel),a.offset!==void 0&&h.offset.fromArray(a.offset),a.repeat!==void 0&&h.repeat.fromArray(a.repeat),a.center!==void 0&&h.center.fromArray(a.center),a.rotation!==void 0&&(h.rotation=a.rotation),a.wrap!==void 0&&(h.wrapS=i(a.wrap[0],uf),h.wrapT=i(a.wrap[1],uf)),a.format!==void 0&&(h.format=a.format),a.internalFormat!==void 0&&(h.internalFormat=a.internalFormat),a.type!==void 0&&(h.type=a.type),a.colorSpace!==void 0&&(h.colorSpace=a.colorSpace),a.minFilter!==void 0&&(h.minFilter=i(a.minFilter,df)),a.magFilter!==void 0&&(h.magFilter=i(a.magFilter,df)),a.anisotropy!==void 0&&(h.anisotropy=a.anisotropy),a.flipY!==void 0&&(h.flipY=a.flipY),a.generateMipmaps!==void 0&&(h.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(h.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(h.compareFunction=a.compareFunction),a.userData!==void 0&&(h.userData=a.userData),n[a.uuid]=h}return n}parseObject(e,t,i,n,s){let o;function a(u){return t[u]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",u),t[u]}function l(u){if(u!==void 0){if(Array.isArray(u)){const f=[];for(let m=0,v=u.length;m<v;m++){const g=u[m];i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),f.push(i[g])}return f}return i[u]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",u),i[u]}}function c(u){return n[u]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",u),n[u]}let h,d;switch(e.type){case"Scene":o=new pc,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new le(e.background):o.background=c(e.background)),e.environment!==void 0&&(o.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new ua(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new ha(e.fog.color,e.fog.density)),e.fog.name!==""&&(o.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity),e.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(e.backgroundRotation),e.environmentIntensity!==void 0&&(o.environmentIntensity=e.environmentIntensity),e.environmentRotation!==void 0&&o.environmentRotation.fromArray(e.environmentRotation);break;case"PerspectiveCamera":o=new It(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new Ja(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new rf(e.color,e.intensity);break;case"DirectionalLight":o=new sf(e.color,e.intensity),o.target=e.target||"";break;case"PointLight":o=new nf(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new of(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new ef(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay),o.target=e.target||"";break;case"HemisphereLight":o=new Jd(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new lf().fromJSON(e);break;case"SkinnedMesh":h=a(e.geometry),d=l(e.material),o=new rd(h,d),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":h=a(e.geometry),d=l(e.material),o=new rt(h,d);break;case"InstancedMesh":h=a(e.geometry),d=l(e.material);const u=e.count,f=e.instanceMatrix,m=e.instanceColor;o=new cd(h,d,u),o.instanceMatrix=new Ls(new Float32Array(f.array),16),m!==void 0&&(o.instanceColor=new Ls(new Float32Array(m.array),m.itemSize));break;case"BatchedMesh":h=a(e.geometry),d=l(e.material),o=new ud(e.maxInstanceCount,e.maxVertexCount,e.maxIndexCount,d),o.geometry=h,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._visibility=e.visibility,o._active=e.active,o._bounds=e.bounds.map(v=>{const g=new Gt;g.min.fromArray(v.boxMin),g.max.fromArray(v.boxMax);const p=new Nt;return p.radius=v.sphereRadius,p.center.fromArray(v.sphereCenter),{boxInitialized:v.boxInitialized,box:g,sphereInitialized:v.sphereInitialized,sphere:p}}),o._maxInstanceCount=e.maxInstanceCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._geometryCount=e.geometryCount,o._matricesTexture=c(e.matricesTexture.uuid),e.colorsTexture!==void 0&&(o._colorsTexture=c(e.colorsTexture.uuid));break;case"LOD":o=new Qu;break;case"Line":o=new gn(a(e.geometry),l(e.material));break;case"LineLoop":o=new gd(a(e.geometry),l(e.material));break;case"LineSegments":o=new Li(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new yd(a(e.geometry),l(e.material));break;case"Sprite":o=new Ju(l(e.material));break;case"Group":o=new Fn;break;case"Bone":o=new xc;break;default:o=new et}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.intensity!==void 0&&(o.shadow.intensity=e.shadow.intensity),e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const u=e.children;for(let f=0;f<u.length;f++)o.add(this.parseObject(u[f],t,i,n,s))}if(e.animations!==void 0){const u=e.animations;for(let f=0;f<u.length;f++){const m=u[f];o.animations.push(s[m])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const u=e.levels;for(let f=0;f<u.length;f++){const m=u[f],v=o.getObjectByProperty("uuid",m.object);v!==void 0&&o.addLevel(v,m.distance,m.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const n=t[i.skeleton];n===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(n,i.bindMatrix)}})}bindLightTargets(e){e.traverse(function(t){if(t.isDirectionalLight||t.isSpotLight){const i=t.target,n=e.getObjectByProperty("uuid",i);n!==void 0?t.target=n:t.target=new et}})}}const B0={UVMapping:oo,CubeReflectionMapping:zi,CubeRefractionMapping:rn,EquirectangularReflectionMapping:qs,EquirectangularRefractionMapping:Ys,CubeUVReflectionMapping:os},uf={RepeatWrapping:$s,ClampToEdgeWrapping:li,MirroredRepeatWrapping:Zs},df={NearestFilter:yt,NearestMipmapNearestFilter:Ll,NearestMipmapLinearFilter:as,LinearFilter:Mt,LinearMipmapNearestFilter:js,LinearMipmapLinearFilter:Ci};class k0 extends ti{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=$i.get(e);if(o!==void 0){if(s.manager.itemStart(e),o.then){o.then(c=>{t&&t(c),s.manager.itemEnd(e)}).catch(c=>{n&&n(c)});return}return setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const l=fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){return $i.add(e,c),t&&t(c),s.manager.itemEnd(e),c}).catch(function(c){n&&n(c),$i.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});$i.add(e,l),s.manager.itemStart(e)}}let Qa;class Kc{static getContext(){return Qa===void 0&&(Qa=new(window.AudioContext||window.webkitAudioContext)),Qa}static setContext(e){Qa=e}}class V0 extends ti{constructor(e){super(e)}load(e,t,i,n){const s=this,o=new ji(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{const c=l.slice(0);Kc.getContext().decodeAudioData(c,function(d){t(d)}).catch(a)}catch(c){a(c)}},i,n);function a(l){n?n(l):console.error(l),s.manager.itemError(e)}}}const ff=new ze,pf=new ze,Yn=new ze;class H0{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new It,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new It,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Yn.copy(e.projectionMatrix);const n=t.eyeSep/2,s=n*t.near/t.focus,o=t.near*Math.tan(In*t.fov*.5)/t.zoom;let a,l;pf.elements[12]=-n,ff.elements[12]=n,a=-o*t.aspect+s,l=o*t.aspect+s,Yn.elements[0]=2*t.near/(l-a),Yn.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(Yn),a=-o*t.aspect-s,l=o*t.aspect-s,Yn.elements[0]=2*t.near/(l-a),Yn.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(Yn)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(pf),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(ff)}}class mf extends It{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e,this.index=0}}class gf{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=vf(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=vf();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function vf(){return performance.now()}const $n=new P,yf=new Jt,G0=new P,Zn=new P;class W0 extends et{constructor(){super(),this.type="AudioListener",this.context=Kc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new gf}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose($n,yf,G0),Zn.set(0,0,-1).applyQuaternion(yf),t.positionX){const n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime($n.x,n),t.positionY.linearRampToValueAtTime($n.y,n),t.positionZ.linearRampToValueAtTime($n.z,n),t.forwardX.linearRampToValueAtTime(Zn.x,n),t.forwardY.linearRampToValueAtTime(Zn.y,n),t.forwardZ.linearRampToValueAtTime(Zn.z,n),t.upX.linearRampToValueAtTime(i.x,n),t.upY.linearRampToValueAtTime(i.y,n),t.upZ.linearRampToValueAtTime(i.z,n)}else t.setPosition($n.x,$n.y,$n.z),t.setOrientation(Zn.x,Zn.y,Zn.z,i.x,i.y,i.z)}}class xf extends et{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(e=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+e),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}copy(e,t){return super.copy(e,t),e.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=e.autoplay,this.buffer=e.buffer,this.detune=e.detune,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.offset=e.offset,this.duration=e.duration,this.playbackRate=e.playbackRate,this.hasPlaybackControl=e.hasPlaybackControl,this.sourceType=e.sourceType,this.filters=e.filters.slice(),this)}clone(e){return new this.constructor(this.listener).copy(this,e)}}const jn=new P,_f=new Jt,X0=new P,Jn=new P;class q0 extends xf{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(jn,_f,X0),Jn.set(0,0,1).applyQuaternion(_f);const t=this.panner;if(t.positionX){const i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(jn.x,i),t.positionY.linearRampToValueAtTime(jn.y,i),t.positionZ.linearRampToValueAtTime(jn.z,i),t.orientationX.linearRampToValueAtTime(Jn.x,i),t.orientationY.linearRampToValueAtTime(Jn.y,i),t.orientationZ.linearRampToValueAtTime(Jn.z,i)}else t.setPosition(jn.x,jn.y,jn.z),t.setOrientation(Jn.x,Jn.y,Jn.z)}}class Y0{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class bf{constructor(e,t,i){this.binding=e,this.valueSize=i;let n,s,o;switch(t){case"quaternion":n=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":n=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:n=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const i=this.buffer,n=this.valueSize,s=e*n+n;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==n;++a)i[s+a]=i[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(i,s,0,a,n)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,i=this.valueSize,n=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,i=this.buffer,n=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(i,n,l,1-s,t)}o>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(i[l]!==i[l+t]){a.setValue(i,n);break}}saveOriginalState(){const e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let s=i,o=n;s!==o;++s)t[s]=t[n+s%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,n,s){if(n>=.5)for(let o=0;o!==s;++o)e[t+o]=e[i+o]}_slerp(e,t,i,n){Jt.slerpFlat(e,t,e,t,e,i,n)}_slerpAdditive(e,t,i,n,s){const o=this._workIndex*s;Jt.multiplyQuaternionsFlat(e,o,e,t,e,i),Jt.slerpFlat(e,t,e,t,e,o,n)}_lerp(e,t,i,n,s){const o=1-n;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*o+e[i+a]*n}}_lerpAdditive(e,t,i,n,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[i+o]*n}}}const Qc="\\[\\]\\.:\\/",$0=new RegExp("["+Qc+"]","g"),eh="[^"+Qc+"]",Z0="[^"+Qc.replace("\\.","")+"]",j0=/((?:WC+[\/:])*)/.source.replace("WC",eh),J0=/(WCOD+)?/.source.replace("WCOD",Z0),K0=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",eh),Q0=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",eh),ey=new RegExp("^"+j0+J0+K0+Q0+"$"),ty=["material","materials","bones","map"];class iy{constructor(e,t,i){const n=i||tt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];n!==void 0&&n.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,s=i.length;n!==s;++n)i[n].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}class tt{constructor(e,t,i){this.path=t,this.parsedPath=i||tt.parseTrackName(t),this.node=tt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new tt.Composite(e,t,i):new tt(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace($0,"")}static parseTrackName(e){const t=ey.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(n!==void 0&&n!==-1){const s=i.nodeName.substring(n+1);ty.indexOf(s)!==-1&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=s)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){const i=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const l=i(a.children);if(l)return l}return null},n=i(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,n=t.propertyName;let s=t.propertyIndex;if(e||(e=tt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let c=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[n];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+n+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?a=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(n==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}tt.Composite=iy,tt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},tt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},tt.prototype.GetterByBindingType=[tt.prototype._getValue_direct,tt.prototype._getValue_array,tt.prototype._getValue_arrayElement,tt.prototype._getValue_toArray],tt.prototype.SetterByBindingTypeAndVersioning=[[tt.prototype._setValue_direct,tt.prototype._setValue_direct_setNeedsUpdate,tt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[tt.prototype._setValue_array,tt.prototype._setValue_array_setNeedsUpdate,tt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[tt.prototype._setValue_arrayElement,tt.prototype._setValue_arrayElement_setNeedsUpdate,tt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[tt.prototype._setValue_fromArray,tt.prototype._setValue_fromArray_setNeedsUpdate,tt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class ny{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ni(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let i=0,n=arguments.length;i!==n;++i)e[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,i=this._paths,n=this._parsedPaths,s=this._bindings,o=s.length;let a,l=e.length,c=this.nCachedObjects_;for(let h=0,d=arguments.length;h!==d;++h){const u=arguments[h],f=u.uuid;let m=t[f];if(m===void 0){m=l++,t[f]=m,e.push(u);for(let v=0,g=o;v!==g;++v)s[v].push(new tt(u,i[v],n[v]))}else if(m<c){a=e[m];const v=--c,g=e[v];t[g.uuid]=m,e[m]=g,t[f]=v,e[v]=u;for(let p=0,x=o;p!==x;++p){const y=s[p],_=y[v];let C=y[m];y[m]=_,C===void 0&&(C=new tt(u,i[p],n[p])),y[v]=C}}else e[m]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,h=t[c];if(h!==void 0&&h>=s){const d=s++,u=e[d];t[u.uuid]=h,e[h]=u,t[c]=d,e[d]=l;for(let f=0,m=n;f!==m;++f){const v=i[f],g=v[d],p=v[h];v[h]=g,v[d]=p}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let s=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],h=c.uuid,d=t[h];if(d!==void 0)if(delete t[h],d<s){const u=--s,f=e[u],m=--o,v=e[m];t[f.uuid]=d,e[d]=f,t[v.uuid]=u,e[u]=v,e.pop();for(let g=0,p=n;g!==p;++g){const x=i[g],y=x[u],_=x[m];x[d]=y,x[u]=_,x.pop()}}else{const u=--o,f=e[u];u>0&&(t[f.uuid]=d),e[d]=f,e.pop();for(let m=0,v=n;m!==v;++m){const g=i[m];g[d]=g[u],g.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const i=this._bindingsIndicesByPath;let n=i[e];const s=this._bindings;if(n!==void 0)return s[n];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,h=this.nCachedObjects_,d=new Array(c);n=s.length,i[e]=n,o.push(e),a.push(t),s.push(d);for(let u=h,f=l.length;u!==f;++u){const m=l[u];d[u]=new tt(m,e,t)}return d}unsubscribe_(e){const t=this._bindingsIndicesByPath,i=t[e];if(i!==void 0){const n=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=e[a];t[c]=i,o[i]=l,o.pop(),s[i]=s[a],s.pop(),n[i]=n[a],n.pop()}}}class wf{constructor(e,t,i=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=n;const s=t.tracks,o=s.length,a=new Array(o),l={endingStart:Cn,endingEnd:Cn};for(let c=0;c!==o;++c){const h=s[c].createInterpolant(null);a[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=hu,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){const n=this._clip.duration,s=e._clip.duration,o=s/n,a=n/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const n=this._mixer,s=n.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+i,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,n){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*i;l<0||i===0?t=0:(this._startTime=null,t=i*l)}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Hl:for(let h=0,d=l.length;h!==d;++h)l[h].evaluate(o),c[h].accumulateAdditive(a);break;case Ho:default:for(let h=0,d=l.length;h!==d;++h)l[h].evaluate(o),c[h].accumulate(n,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),n===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let n=this.time+e,s=this._loopCount;const o=i===uu;if(e===0)return s===-1?n:o&&(s&1)===1?t-n:n;if(i===cu){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else if(n<0)n=0;else{this.time=n;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),n>=t||n<0){const a=Math.floor(n/t);n-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=n;if(o&&(s&1)===1)return t-n}return n}_setEndings(e,t,i){const n=this._interpolantSettings;i?(n.endingStart=Rn,n.endingEnd=Rn):(e?n.endingStart=this.zeroSlopeAtStart?Rn:Cn:n.endingStart=sr,t?n.endingEnd=this.zeroSlopeAtEnd?Rn:Cn:n.endingEnd=sr)}_scheduleFading(e,t,i){const n=this._mixer,s=n.time;let o=this._weightInterpolant;o===null&&(o=n._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=i,this}}const sy=new Float32Array(1);class ry extends Pi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const i=e._localRoot||this._root,n=e._clip.tracks,s=n.length,o=e._propertyBindings,a=e._interpolants,l=i.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let d=0;d!==s;++d){const u=n[d],f=u.name;let m=h[f];if(m!==void 0)++m.referenceCount,o[d]=m;else{if(m=o[d],m!==void 0){m._cacheIndex===null&&(++m.referenceCount,this._addInactiveBinding(m,l,f));continue}const v=t&&t._propertyBindings[d].binding.parsedPath;m=new bf(tt.create(i,f,v),u.ValueTypeName,u.getValueSize()),++m.referenceCount,this._addInactiveBinding(m,l,f),o[d]=m}a[d].resultBuffer=m.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const i=(e._localRoot||this._root).uuid,n=e._clip.uuid,s=this._actionsByClip[n];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,n,i)}const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const s=t[i];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const s=t[i];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,i){const n=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=n.length,n.push(e),o.actionByRoot[i]=e}_removeInactiveAction(e){const t=this._actions,i=t[t.length-1],n=e._cacheIndex;i._cacheIndex=n,t[n]=i,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const d=a.actionByRoot,u=(e._localRoot||this._root).uuid;delete d[u],l.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let i=0,n=t.length;i!==n;++i){const s=t[i];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,i=e._cacheIndex,n=this._nActiveActions++,s=t[n];e._cacheIndex=n,t[n]=e,s._cacheIndex=i,t[i]=s}_takeBackAction(e){const t=this._actions,i=e._cacheIndex,n=--this._nActiveActions,s=t[n];e._cacheIndex=n,t[n]=e,s._cacheIndex=i,t[i]=s}_addInactiveBinding(e,t,i){const n=this._bindingsByRootAndName,s=this._bindings;let o=n[t];o===void 0&&(o={},n[t]=o),o[i]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,i=e.binding,n=i.rootNode.uuid,s=i.path,o=this._bindingsByRootAndName,a=o[n],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[s],Object.keys(a).length===0&&delete o[n]}_lendBinding(e){const t=this._bindings,i=e._cacheIndex,n=this._nActiveBindings++,s=t[n];e._cacheIndex=n,t[n]=e,s._cacheIndex=i,t[i]=s}_takeBackBinding(e){const t=this._bindings,i=e._cacheIndex,n=--this._nActiveBindings,s=t[n];e._cacheIndex=n,t[n]=e,s._cacheIndex=i,t[i]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let i=e[t];return i===void 0&&(i=new Xc(new Float32Array(2),new Float32Array(2),1,sy),i.__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){const t=this._controlInterpolants,i=e.__cacheIndex,n=--this._nActiveControlInterpolants,s=t[n];e.__cacheIndex=n,t[n]=e,s.__cacheIndex=i,t[i]=s}clipAction(e,t,i){const n=t||this._root,s=n.uuid;let o=typeof e=="string"?zr.findByName(n,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(i===void 0&&(o!==null?i=o.blendMode:i=Ho),l!==void 0){const d=l.actionByRoot[s];if(d!==void 0&&d.blendMode===i)return d;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const h=new wf(this,o,t,i);return this._bindAction(h,c),this._addInactiveAction(h,a,s),h}existingAction(e,t){const i=t||this._root,n=i.uuid,s=typeof e=="string"?zr.findByName(i,e):e,o=s?s.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[n]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;const t=this._actions,i=this._nActiveActions,n=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==i;++c)t[c]._update(n,e,s,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,i=e.uuid,n=this._actionsByClip,s=n[i];if(s!==void 0){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const h=c._cacheIndex,d=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,d._cacheIndex=h,t[h]=d,t.pop(),this._removeInactiveBindingsForAction(c)}delete n[i]}}uncacheRoot(e){const t=e.uuid,i=this._actionsByClip;for(const o in i){const a=i[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const n=this._bindingsByRootAndName,s=n[t];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const i=this.existingAction(e,t);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}class oy extends Go{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isRenderTarget3D=!0,this.depth=i,this.texture=new Wo(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class ay extends Go{constructor(e=1,t=1,i=1,n={}){super(e,t,n),this.isRenderTargetArray=!0,this.depth=i,this.texture=new hr(null,e,t,i),this.texture.isRenderTargetTexture=!0}}class N{constructor(e){this.value=e}clone(){return new N(this.value.clone===void 0?this.value:this.value.clone())}}let ly=0;class cy extends Pi{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:ly++}),this.name="",this.usage=or,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let i=0,n=t.length;i<n;i++){const s=Array.isArray(t[i])?t[i]:[t[i]];for(let o=0;o<s.length;o++)this.uniforms.push(s[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class hy extends da{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class uy{constructor(e,t,i,n,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=n,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}const Sf=new ze;class dy{constructor(e,t,i=0,n=1/0){this.ray=new ys(e,t),this.near=i,this.far=n,this.camera=null,this.layers=new Jo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return Sf.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Sf),this}intersectObject(e,t=!0,i=[]){return th(e,this,i,t),i.sort(Mf),i}intersectObjects(e,t=!0,i=[]){for(let n=0,s=e.length;n<s;n++)th(e[n],this,i,t);return i.sort(Mf),i}}function Mf(r,e){return r.distance-e.distance}function th(r,e,t,i){let n=!0;if(r.layers.test(e.layers)&&r.raycast(e,t)===!1&&(n=!1),n===!0&&i===!0){const s=r.children;for(let o=0,a=s.length;o<a;o++)th(s[o],e,t,!0)}}class fy{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=He(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(He(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class py{constructor(e=1,t=0,i=0){return this.radius=e,this.theta=t,this.y=i,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}}class ih{constructor(e,t,i,n){ih.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,i,n)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let i=0;i<4;i++)this.elements[i]=e[i+t];return this}set(e,t,i,n){const s=this.elements;return s[0]=e,s[2]=t,s[1]=i,s[3]=n,this}}const Tf=new G;class my{constructor(e=new G(1/0,1/0),t=new G(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Tf.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Tf).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Af=new P,el=new P;class gy{constructor(e=new P,t=new P){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Af.subVectors(e,this.start),el.subVectors(this.end,this.start);const i=el.dot(el);let s=el.dot(Af)/i;return t&&(s=He(s,0,1)),s}closestPointToPoint(e,t,i){const n=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Ef=new P;class vy extends et{constructor(e,t){super(),this.light=e,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const i=new qe,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,h=a/l*Math.PI*2;n.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}i.setAttribute("position",new Re(n,3));const s=new qt({fog:!1,toneMapped:!1});this.cone=new Li(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Ef.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Ef),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const xn=new P,tl=new ze,nh=new ze;class yy extends Li{constructor(e){const t=Cf(e),i=new qe,n=[],s=[],o=new le(0,0,1),a=new le(0,1,0);for(let c=0;c<t.length;c++){const h=t[c];h.parent&&h.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}i.setAttribute("position",new Re(n,3)),i.setAttribute("color",new Re(s,3));const l=new qt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,i=this.geometry,n=i.getAttribute("position");nh.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(tl.multiplyMatrices(nh,a.matrixWorld),xn.setFromMatrixPosition(tl),n.setXYZ(o,xn.x,xn.y,xn.z),tl.multiplyMatrices(nh,a.parent.matrixWorld),xn.setFromMatrixPosition(tl),n.setXYZ(o+1,xn.x,xn.y,xn.z),o+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Cf(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,Cf(r.children[t]));return e}class xy extends rt{constructor(e,t,i){const n=new Ur(t,4,2),s=new fn({wireframe:!0,fog:!1,toneMapped:!1});super(n,s),this.light=e,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const _y=new P,Rf=new le,Pf=new le;class by extends et{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="HemisphereLightHelper";const n=new Lr(t);n.rotateY(Math.PI*.5),this.material=new fn({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=n.getAttribute("position"),o=new Float32Array(s.count*3);n.setAttribute("color",new ft(o,3)),this.add(new rt(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Rf.copy(this.light.color),Pf.copy(this.light.groundColor);for(let i=0,n=t.count;i<n;i++){const s=i<n/2?Rf:Pf;t.setXYZ(i,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(_y.setFromMatrixPosition(this.light.matrixWorld).negate())}}class wy extends Li{constructor(e=10,t=10,i=4473924,n=8947848){i=new le(i),n=new le(n);const s=t/2,o=e/t,a=e/2,l=[],c=[];for(let u=0,f=0,m=-a;u<=t;u++,m+=o){l.push(-a,0,m,a,0,m),l.push(m,0,-a,m,0,a);const v=u===s?i:n;v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3,v.toArray(c,f),f+=3}const h=new qe;h.setAttribute("position",new Re(l,3)),h.setAttribute("color",new Re(c,3));const d=new qt({vertexColors:!0,toneMapped:!1});super(h,d),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class Sy extends Li{constructor(e=10,t=16,i=8,n=64,s=4473924,o=8947848){s=new le(s),o=new le(o);const a=[],l=[];if(t>1)for(let d=0;d<t;d++){const u=d/t*(Math.PI*2),f=Math.sin(u)*e,m=Math.cos(u)*e;a.push(0,0,0),a.push(f,0,m);const v=d&1?s:o;l.push(v.r,v.g,v.b),l.push(v.r,v.g,v.b)}for(let d=0;d<i;d++){const u=d&1?s:o,f=e-e/i*d;for(let m=0;m<n;m++){let v=m/n*(Math.PI*2),g=Math.sin(v)*f,p=Math.cos(v)*f;a.push(g,0,p),l.push(u.r,u.g,u.b),v=(m+1)/n*(Math.PI*2),g=Math.sin(v)*f,p=Math.cos(v)*f,a.push(g,0,p),l.push(u.r,u.g,u.b)}}const c=new qe;c.setAttribute("position",new Re(a,3)),c.setAttribute("color",new Re(l,3));const h=new qt({vertexColors:!0,toneMapped:!1});super(c,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const If=new P,il=new P,Lf=new P;class My extends et{constructor(e,t,i){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",t===void 0&&(t=1);let n=new qe;n.setAttribute("position",new Re([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new qt({fog:!1,toneMapped:!1});this.lightPlane=new gn(n,s),this.add(this.lightPlane),n=new qe,n.setAttribute("position",new Re([0,0,0,0,0,1],3)),this.targetLine=new gn(n,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),If.setFromMatrixPosition(this.light.matrixWorld),il.setFromMatrixPosition(this.light.target.matrixWorld),Lf.subVectors(il,If),this.lightPlane.lookAt(il),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(il),this.targetLine.scale.z=Lf.length()}}const nl=new P,bt=new la;class Ty extends Li{constructor(e){const t=new qe,i=new qt({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],s=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(m,v){l(m),l(v)}function l(m){n.push(0,0,0),s.push(0,0,0),o[m]===void 0&&(o[m]=[]),o[m].push(n.length/3-1)}t.setAttribute("position",new Re(n,3)),t.setAttribute("color",new Re(s,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const c=new le(16755200),h=new le(16711680),d=new le(43775),u=new le(16777215),f=new le(3355443);this.setColors(c,h,d,u,f)}setColors(e,t,i,n,s){const a=this.geometry.getAttribute("color");a.setXYZ(0,e.r,e.g,e.b),a.setXYZ(1,e.r,e.g,e.b),a.setXYZ(2,e.r,e.g,e.b),a.setXYZ(3,e.r,e.g,e.b),a.setXYZ(4,e.r,e.g,e.b),a.setXYZ(5,e.r,e.g,e.b),a.setXYZ(6,e.r,e.g,e.b),a.setXYZ(7,e.r,e.g,e.b),a.setXYZ(8,e.r,e.g,e.b),a.setXYZ(9,e.r,e.g,e.b),a.setXYZ(10,e.r,e.g,e.b),a.setXYZ(11,e.r,e.g,e.b),a.setXYZ(12,e.r,e.g,e.b),a.setXYZ(13,e.r,e.g,e.b),a.setXYZ(14,e.r,e.g,e.b),a.setXYZ(15,e.r,e.g,e.b),a.setXYZ(16,e.r,e.g,e.b),a.setXYZ(17,e.r,e.g,e.b),a.setXYZ(18,e.r,e.g,e.b),a.setXYZ(19,e.r,e.g,e.b),a.setXYZ(20,e.r,e.g,e.b),a.setXYZ(21,e.r,e.g,e.b),a.setXYZ(22,e.r,e.g,e.b),a.setXYZ(23,e.r,e.g,e.b),a.setXYZ(24,t.r,t.g,t.b),a.setXYZ(25,t.r,t.g,t.b),a.setXYZ(26,t.r,t.g,t.b),a.setXYZ(27,t.r,t.g,t.b),a.setXYZ(28,t.r,t.g,t.b),a.setXYZ(29,t.r,t.g,t.b),a.setXYZ(30,t.r,t.g,t.b),a.setXYZ(31,t.r,t.g,t.b),a.setXYZ(32,i.r,i.g,i.b),a.setXYZ(33,i.r,i.g,i.b),a.setXYZ(34,i.r,i.g,i.b),a.setXYZ(35,i.r,i.g,i.b),a.setXYZ(36,i.r,i.g,i.b),a.setXYZ(37,i.r,i.g,i.b),a.setXYZ(38,n.r,n.g,n.b),a.setXYZ(39,n.r,n.g,n.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,i=1,n=1;bt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const s=this.camera.coordinateSystem===di?-1:0;Tt("c",t,e,bt,0,0,s),Tt("t",t,e,bt,0,0,1),Tt("n1",t,e,bt,-i,-n,s),Tt("n2",t,e,bt,i,-n,s),Tt("n3",t,e,bt,-i,n,s),Tt("n4",t,e,bt,i,n,s),Tt("f1",t,e,bt,-i,-n,1),Tt("f2",t,e,bt,i,-n,1),Tt("f3",t,e,bt,-i,n,1),Tt("f4",t,e,bt,i,n,1),Tt("u1",t,e,bt,i*.7,n*1.1,s),Tt("u2",t,e,bt,-i*.7,n*1.1,s),Tt("u3",t,e,bt,0,n*2,s),Tt("cf1",t,e,bt,-i,0,1),Tt("cf2",t,e,bt,i,0,1),Tt("cf3",t,e,bt,0,-n,1),Tt("cf4",t,e,bt,0,n,1),Tt("cn1",t,e,bt,-i,0,s),Tt("cn2",t,e,bt,i,0,s),Tt("cn3",t,e,bt,0,-n,s),Tt("cn4",t,e,bt,0,n,s),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Tt(r,e,t,i,n,s,o){nl.set(n,s,o).unproject(i);const a=e[r];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,h=a.length;c<h;c++)l.setXYZ(a[c],nl.x,nl.y,nl.z)}}const sl=new Gt;class Ay extends Li{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),s=new qe;s.setIndex(new ft(i,1)),s.setAttribute("position",new ft(n,3)),super(s,new qt({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&sl.setFromObject(this.object),sl.isEmpty())return;const t=sl.min,i=sl.max,n=this.geometry.attributes.position,s=n.array;s[0]=i.x,s[1]=i.y,s[2]=i.z,s[3]=t.x,s[4]=i.y,s[5]=i.z,s[6]=t.x,s[7]=t.y,s[8]=i.z,s[9]=i.x,s[10]=t.y,s[11]=i.z,s[12]=i.x,s[13]=i.y,s[14]=t.z,s[15]=t.x,s[16]=i.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=i.x,s[22]=t.y,s[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Ey extends Li{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new qe;s.setIndex(new ft(i,1)),s.setAttribute("position",new Re(n,3)),super(s,new qt({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class Cy extends gn{constructor(e,t=1,i=16776960){const n=i,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new qe;o.setAttribute("position",new Re(s,3)),o.computeBoundingSphere(),super(o,new qt({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new qe;l.setAttribute("position",new Re(a,3)),l.computeBoundingSphere(),this.add(new rt(l,new fn({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Uf=new P;let rl,sh;class Ry extends et{constructor(e=new P(0,0,1),t=new P(0,0,0),i=1,n=16776960,s=i*.2,o=s*.2){super(),this.type="ArrowHelper",rl===void 0&&(rl=new qe,rl.setAttribute("position",new Re([0,0,0,0,1,0],3)),sh=new Ds(0,.5,1,5,1),sh.translate(0,-.5,0)),this.position.copy(t),this.line=new gn(rl,new qt({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new rt(sh,new fn({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Uf.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Uf,t)}}setLength(e,t=e*.2,i=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class Py extends Li{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],n=new qe;n.setAttribute("position",new Re(t,3)),n.setAttribute("color",new Re(i,3));const s=new qt({vertexColors:!0,toneMapped:!1});super(n,s),this.type="AxesHelper"}setColors(e,t,i){const n=new le,s=this.geometry.attributes.color.array;return n.set(e),n.toArray(s,0),n.toArray(s,3),n.set(t),n.toArray(s,6),n.toArray(s,9),n.set(i),n.toArray(s,12),n.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Iy{constructor(){this.type="ShapePath",this.color=new le,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Er,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this}bezierCurveTo(e,t,i,n,s,o){return this.currentPath.bezierCurveTo(e,t,i,n,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(p){const x=[];for(let y=0,_=p.length;y<_;y++){const C=p[y],T=new Hn;T.curves=C.curves,x.push(T)}return x}function i(p,x){const y=x.length;let _=!1;for(let C=y-1,T=0;T<y;C=T++){let A=x[C],I=x[T],S=I.x-A.x,b=I.y-A.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(A=x[T],S=-S,I=x[C],b=-b),p.y<A.y||p.y>I.y)continue;if(p.y===A.y){if(p.x===A.x)return!0}else{const L=b*(p.x-A.x)-S*(p.y-A.y);if(L===0)return!0;if(L<0)continue;_=!_}}else{if(p.y!==A.y)continue;if(I.x<=p.x&&p.x<=A.x||A.x<=p.x&&p.x<=I.x)return!0}}return _}const n=Ui.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new Hn,l.curves=a.curves,c.push(l),c;let h=!n(s[0].getPoints());h=e?!h:h;const d=[],u=[];let f=[],m=0,v;u[m]=void 0,f[m]=[];for(let p=0,x=s.length;p<x;p++)a=s[p],v=a.getPoints(),o=n(v),o=e?!o:o,o?(!h&&u[m]&&m++,u[m]={s:new Hn,p:v},u[m].s.curves=a.curves,h&&m++,f[m]=[]):f[m].push({h:a,p:v[0]});if(!u[0])return t(s);if(u.length>1){let p=!1,x=0;for(let y=0,_=u.length;y<_;y++)d[y]=[];for(let y=0,_=u.length;y<_;y++){const C=f[y];for(let T=0;T<C.length;T++){const A=C[T];let I=!0;for(let S=0;S<u.length;S++)i(A.p,u[S].p)&&(y!==S&&x++,I?(I=!1,d[S].push(A)):p=!0);I&&d[y].push(A)}}x>0&&p===!1&&(f=d)}let g;for(let p=0,x=u.length;p<x;p++){l=u[p].s,c.push(l),g=f[p];for(let y=0,_=g.length;y<_;y++)l.holes.push(g[y].h)}return c}}class Ly extends Pi{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}function Uy(r,e){const t=r.image&&r.image.width?r.image.width/r.image.height:1;return t>e?(r.repeat.x=1,r.repeat.y=t/e,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2):(r.repeat.x=e/t,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0),r}function Dy(r,e){const t=r.image&&r.image.width?r.image.width/r.image.height:1;return t>e?(r.repeat.x=e/t,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0):(r.repeat.x=1,r.repeat.y=t/e,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2),r}function Ny(r){return r.repeat.x=1,r.repeat.y=1,r.offset.x=0,r.offset.y=0,r}function rh(r,e,t,i){const n=Oy(i);switch(t){case Ol:return r*e;case zl:return r*e;case Bl:return r*e*2;case ho:return r*e/n.components*n.byteLength;case Js:return r*e/n.components*n.byteLength;case kl:return r*e*2/n.components*n.byteLength;case uo:return r*e*2/n.components*n.byteLength;case Fl:return r*e*3/n.components*n.byteLength;case Ut:return r*e*4/n.components*n.byteLength;case fo:return r*e*4/n.components*n.byteLength;case Ks:case Qs:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case er:case tr:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case mo:case vo:return Math.max(r,16)*Math.max(e,8)/4;case po:case go:return Math.max(r,8)*Math.max(e,8)/2;case yo:case xo:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case _o:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case bo:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case wo:return Math.floor((r+4)/5)*Math.floor((e+3)/4)*16;case So:return Math.floor((r+4)/5)*Math.floor((e+4)/5)*16;case Mo:return Math.floor((r+5)/6)*Math.floor((e+4)/5)*16;case To:return Math.floor((r+5)/6)*Math.floor((e+5)/6)*16;case Ao:return Math.floor((r+7)/8)*Math.floor((e+4)/5)*16;case Eo:return Math.floor((r+7)/8)*Math.floor((e+5)/6)*16;case Co:return Math.floor((r+7)/8)*Math.floor((e+7)/8)*16;case Ro:return Math.floor((r+9)/10)*Math.floor((e+4)/5)*16;case Po:return Math.floor((r+9)/10)*Math.floor((e+5)/6)*16;case Io:return Math.floor((r+9)/10)*Math.floor((e+7)/8)*16;case Lo:return Math.floor((r+9)/10)*Math.floor((e+9)/10)*16;case Uo:return Math.floor((r+11)/12)*Math.floor((e+9)/10)*16;case Do:return Math.floor((r+11)/12)*Math.floor((e+11)/12)*16;case ir:case No:case Oo:return Math.ceil(r/4)*Math.ceil(e/4)*16;case Vl:case Fo:return Math.ceil(r/4)*Math.ceil(e/4)*8;case zo:case Bo:return Math.ceil(r/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function Oy(r){switch(r){case Ri:case Ul:return{byteLength:1,components:1};case ls:case Dl:case cs:return{byteLength:2,components:1};case lo:case co:return{byteLength:2,components:4};case Bi:case ao:case Vt:return{byteLength:4,components:1};case Nl:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}const Fy={contain:Uy,cover:Dy,fill:Ny,getByteLength:rh};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:jr}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=jr);/**
* @license
* Copyright 2010-2025 Three.js Authors
* SPDX-License-Identifier: MIT
*/function Df(){let r=null,e=!1,t=null,i=null;function n(s,o){t(s,o),i=r.requestAnimationFrame(n)}return{start:function(){e!==!0&&t!==null&&(i=r.requestAnimationFrame(n),e=!0)},stop:function(){r.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function zy(r){const e=new WeakMap;function t(a,l){const c=a.array,h=a.usage,d=c.byteLength,u=r.createBuffer();r.bindBuffer(l,u),r.bufferData(l,c,h),a.onUploadCallback();let f;if(c instanceof Float32Array)f=r.FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=r.HALF_FLOAT:f=r.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=r.SHORT;else if(c instanceof Uint32Array)f=r.UNSIGNED_INT;else if(c instanceof Int32Array)f=r.INT;else if(c instanceof Int8Array)f=r.BYTE;else if(c instanceof Uint8Array)f=r.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:u,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:d}}function i(a,l,c){const h=l.array,d=l.updateRanges;if(r.bindBuffer(c,a),d.length===0)r.bufferSubData(c,0,h);else{d.sort((f,m)=>f.start-m.start);let u=0;for(let f=1;f<d.length;f++){const m=d[u],v=d[f];v.start<=m.start+m.count+1?m.count=Math.max(m.count,v.start+v.count-m.start):(++u,d[u]=v)}d.length=u+1;for(let f=0,m=d.length;f<m;f++){const v=d[f];r.bufferSubData(c,v.start*h.BYTES_PER_ELEMENT,h,v.start,v.count)}l.clearUpdateRanges()}l.onUploadCallback()}function n(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function s(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(r.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=e.get(a);(!h||h.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(c.buffer,a,l),c.version=a.version}}return{get:n,remove:s,update:o}}var By=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,ky=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,Vy=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Hy=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Gy=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,Wy=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Xy=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,qy=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Yy=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,$y=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,Zy=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,jy=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Jy=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Ky=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Qy=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,ex=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,tx=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,ix=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,nx=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,sx=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,rx=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,ox=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,ax=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,lx=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,cx=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,hx=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,ux=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,dx=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,fx=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,px=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,mx="gl_FragColor = linearToOutputTexel( gl_FragColor );",gx=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,vx=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,yx=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,xx=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,_x=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,bx=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,wx=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Sx=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Mx=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Tx=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Ax=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Ex=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Cx=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Rx=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Px=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Ix=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Lx=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Ux=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Dx=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Nx=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Ox=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Fx=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,zx=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Bx=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,kx=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,Vx=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Hx=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Gx=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Wx=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,Xx=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,qx=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Yx=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,$x=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Zx=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,jx=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Jx=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,Kx=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Qx=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,e_=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,t_=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,i_=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,n_=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,s_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,r_=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,o_=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,a_=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,l_=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,c_=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,h_=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,u_=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,d_=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,f_=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,p_=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,m_=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,g_=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,v_=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,y_=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,x_=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,__=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,b_=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,w_=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,S_=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,M_=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,T_=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,A_=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,E_=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,C_=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,R_=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,P_=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,I_=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,L_=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,U_=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,D_=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,N_=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,O_=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,F_=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Ye={alphahash_fragment:By,alphahash_pars_fragment:ky,alphamap_fragment:Vy,alphamap_pars_fragment:Hy,alphatest_fragment:Gy,alphatest_pars_fragment:Wy,aomap_fragment:Xy,aomap_pars_fragment:qy,batching_pars_vertex:Yy,batching_vertex:$y,begin_vertex:Zy,beginnormal_vertex:jy,bsdfs:Jy,iridescence_fragment:Ky,bumpmap_pars_fragment:Qy,clipping_planes_fragment:ex,clipping_planes_pars_fragment:tx,clipping_planes_pars_vertex:ix,clipping_planes_vertex:nx,color_fragment:sx,color_pars_fragment:rx,color_pars_vertex:ox,color_vertex:ax,common:lx,cube_uv_reflection_fragment:cx,defaultnormal_vertex:hx,displacementmap_pars_vertex:ux,displacementmap_vertex:dx,emissivemap_fragment:fx,emissivemap_pars_fragment:px,colorspace_fragment:mx,colorspace_pars_fragment:gx,envmap_fragment:vx,envmap_common_pars_fragment:yx,envmap_pars_fragment:xx,envmap_pars_vertex:_x,envmap_physical_pars_fragment:Ix,envmap_vertex:bx,fog_vertex:wx,fog_pars_vertex:Sx,fog_fragment:Mx,fog_pars_fragment:Tx,gradientmap_pars_fragment:Ax,lightmap_pars_fragment:Ex,lights_lambert_fragment:Cx,lights_lambert_pars_fragment:Rx,lights_pars_begin:Px,lights_toon_fragment:Lx,lights_toon_pars_fragment:Ux,lights_phong_fragment:Dx,lights_phong_pars_fragment:Nx,lights_physical_fragment:Ox,lights_physical_pars_fragment:Fx,lights_fragment_begin:zx,lights_fragment_maps:Bx,lights_fragment_end:kx,logdepthbuf_fragment:Vx,logdepthbuf_pars_fragment:Hx,logdepthbuf_pars_vertex:Gx,logdepthbuf_vertex:Wx,map_fragment:Xx,map_pars_fragment:qx,map_particle_fragment:Yx,map_particle_pars_fragment:$x,metalnessmap_fragment:Zx,metalnessmap_pars_fragment:jx,morphinstance_vertex:Jx,morphcolor_vertex:Kx,morphnormal_vertex:Qx,morphtarget_pars_vertex:e_,morphtarget_vertex:t_,normal_fragment_begin:i_,normal_fragment_maps:n_,normal_pars_fragment:s_,normal_pars_vertex:r_,normal_vertex:o_,normalmap_pars_fragment:a_,clearcoat_normal_fragment_begin:l_,clearcoat_normal_fragment_maps:c_,clearcoat_pars_fragment:h_,iridescence_pars_fragment:u_,opaque_fragment:d_,packing:f_,premultiplied_alpha_fragment:p_,project_vertex:m_,dithering_fragment:g_,dithering_pars_fragment:v_,roughnessmap_fragment:y_,roughnessmap_pars_fragment:x_,shadowmap_pars_fragment:__,shadowmap_pars_vertex:b_,shadowmap_vertex:w_,shadowmask_pars_fragment:S_,skinbase_vertex:M_,skinning_pars_vertex:T_,skinning_vertex:A_,skinnormal_vertex:E_,specularmap_fragment:C_,specularmap_pars_fragment:R_,tonemapping_fragment:P_,tonemapping_pars_fragment:I_,transmission_fragment:L_,transmission_pars_fragment:U_,uv_pars_fragment:D_,uv_pars_vertex:N_,uv_vertex:O_,worldpos_vertex:F_,background_vert:`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,background_frag:`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,backgroundCube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,backgroundCube_frag:`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,cube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,cube_frag:`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,depth_vert:`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,depth_frag:`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,distanceRGBA_vert:`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,distanceRGBA_frag:`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,equirect_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,equirect_frag:`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,linedashed_vert:`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,linedashed_frag:`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,meshbasic_vert:`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,meshbasic_frag:`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshlambert_vert:`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshlambert_frag:`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshmatcap_vert:`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,meshmatcap_frag:`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshnormal_vert:`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,meshnormal_frag:`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,meshphong_vert:`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshphong_frag:`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshphysical_vert:`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,meshphysical_frag:`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshtoon_vert:`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshtoon_frag:`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,points_vert:`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,points_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,shadow_vert:`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,shadow_frag:`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,sprite_vert:`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,sprite_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`},de={common:{diffuse:{value:new le(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new We},alphaMap:{value:null},alphaMapTransform:{value:new We},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new We}},envmap:{envMap:{value:null},envMapRotation:{value:new We},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new We}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new We}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new We},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new We},normalScale:{value:new G(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new We},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new We}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new We}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new We}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new We},alphaTest:{value:0},uvTransform:{value:new We}},sprite:{diffuse:{value:new le(16777215)},opacity:{value:1},center:{value:new G(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new We},alphaMap:{value:null},alphaMapTransform:{value:new We},alphaTest:{value:0}}},yi={basic:{uniforms:Wt([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.fog]),vertexShader:Ye.meshbasic_vert,fragmentShader:Ye.meshbasic_frag},lambert:{uniforms:Wt([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.fog,de.lights,{emissive:{value:new le(0)}}]),vertexShader:Ye.meshlambert_vert,fragmentShader:Ye.meshlambert_frag},phong:{uniforms:Wt([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.fog,de.lights,{emissive:{value:new le(0)},specular:{value:new le(1118481)},shininess:{value:30}}]),vertexShader:Ye.meshphong_vert,fragmentShader:Ye.meshphong_frag},standard:{uniforms:Wt([de.common,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.roughnessmap,de.metalnessmap,de.fog,de.lights,{emissive:{value:new le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ye.meshphysical_vert,fragmentShader:Ye.meshphysical_frag},toon:{uniforms:Wt([de.common,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.gradientmap,de.fog,de.lights,{emissive:{value:new le(0)}}]),vertexShader:Ye.meshtoon_vert,fragmentShader:Ye.meshtoon_frag},matcap:{uniforms:Wt([de.common,de.bumpmap,de.normalmap,de.displacementmap,de.fog,{matcap:{value:null}}]),vertexShader:Ye.meshmatcap_vert,fragmentShader:Ye.meshmatcap_frag},points:{uniforms:Wt([de.points,de.fog]),vertexShader:Ye.points_vert,fragmentShader:Ye.points_frag},dashed:{uniforms:Wt([de.common,de.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ye.linedashed_vert,fragmentShader:Ye.linedashed_frag},depth:{uniforms:Wt([de.common,de.displacementmap]),vertexShader:Ye.depth_vert,fragmentShader:Ye.depth_frag},normal:{uniforms:Wt([de.common,de.bumpmap,de.normalmap,de.displacementmap,{opacity:{value:1}}]),vertexShader:Ye.meshnormal_vert,fragmentShader:Ye.meshnormal_frag},sprite:{uniforms:Wt([de.sprite,de.fog]),vertexShader:Ye.sprite_vert,fragmentShader:Ye.sprite_frag},background:{uniforms:{uvTransform:{value:new We},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ye.background_vert,fragmentShader:Ye.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new We}},vertexShader:Ye.backgroundCube_vert,fragmentShader:Ye.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ye.cube_vert,fragmentShader:Ye.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ye.equirect_vert,fragmentShader:Ye.equirect_frag},distanceRGBA:{uniforms:Wt([de.common,de.displacementmap,{referencePosition:{value:new P},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ye.distanceRGBA_vert,fragmentShader:Ye.distanceRGBA_frag},shadow:{uniforms:Wt([de.lights,de.fog,{color:{value:new le(0)},opacity:{value:1}}]),vertexShader:Ye.shadow_vert,fragmentShader:Ye.shadow_frag}};yi.physical={uniforms:Wt([yi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new We},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new We},clearcoatNormalScale:{value:new G(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new We},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new We},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new We},sheen:{value:0},sheenColor:{value:new le(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new We},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new We},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new We},transmissionSamplerSize:{value:new G},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new We},attenuationDistance:{value:0},attenuationColor:{value:new le(0)},specularColor:{value:new le(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new We},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new We},anisotropyVector:{value:new G},anisotropyMap:{value:null},anisotropyMapTransform:{value:new We}}]),vertexShader:Ye.meshphysical_vert,fragmentShader:Ye.meshphysical_frag};const ol={r:0,b:0,g:0},Kn=new ri,z_=new ze;function B_(r,e,t,i,n,s,o){const a=new le(0);let l=s===!0?0:1,c,h,d=null,u=0,f=null;function m(y){let _=y.isScene===!0?y.background:null;return _&&_.isTexture&&(_=(y.backgroundBlurriness>0?t:e).get(_)),_}function v(y){let _=!1;const C=m(y);C===null?p(a,l):C&&C.isColor&&(p(C,1),_=!0);const T=r.xr.getEnvironmentBlendMode();T==="additive"?i.buffers.color.setClear(0,0,0,1,o):T==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,o),(r.autoClear||_)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function g(y,_){const C=m(_);C&&(C.isCubeTexture||C.mapping===os)?(h===void 0&&(h=new rt(new On(1,1,1),new _t({name:"BackgroundCubeMaterial",uniforms:Ts(yi.backgroundCube.uniforms),vertexShader:yi.backgroundCube.vertexShader,fragmentShader:yi.backgroundCube.fragmentShader,side:kt,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(T,A,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),Kn.copy(_.backgroundRotation),Kn.x*=-1,Kn.y*=-1,Kn.z*=-1,C.isCubeTexture&&C.isRenderTargetTexture===!1&&(Kn.y*=-1,Kn.z*=-1),h.material.uniforms.envMap.value=C,h.material.uniforms.flipEnvMap.value=C.isCubeTexture&&C.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(z_.makeRotationFromEuler(Kn)),h.material.toneMapped=Je.getTransfer(C.colorSpace)!==ut,(d!==C||u!==C.version||f!==r.toneMapping)&&(h.material.needsUpdate=!0,d=C,u=C.version,f=r.toneMapping),h.layers.enableAll(),y.unshift(h,h.geometry,h.material,0,0,null)):C&&C.isTexture&&(c===void 0&&(c=new rt(new pt(2,2),new _t({name:"BackgroundMaterial",uniforms:Ts(yi.background.uniforms),vertexShader:yi.background.vertexShader,fragmentShader:yi.background.fragmentShader,side:Ni,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=C,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.toneMapped=Je.getTransfer(C.colorSpace)!==ut,C.matrixAutoUpdate===!0&&C.updateMatrix(),c.material.uniforms.uvTransform.value.copy(C.matrix),(d!==C||u!==C.version||f!==r.toneMapping)&&(c.material.needsUpdate=!0,d=C,u=C.version,f=r.toneMapping),c.layers.enableAll(),y.unshift(c,c.geometry,c.material,0,0,null))}function p(y,_){y.getRGB(ol,Hu(r)),i.buffers.color.setClear(ol.r,ol.g,ol.b,_,o)}function x(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(y,_=1){a.set(y),l=_,p(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(y){l=y,p(a,l)},render:v,addToRenderList:g,dispose:x}}function k_(r,e){const t=r.getParameter(r.MAX_VERTEX_ATTRIBS),i={},n=u(null);let s=n,o=!1;function a(b,L,D,F,B){let Y=!1;const H=d(F,D,L);s!==H&&(s=H,c(s.object)),Y=f(b,F,D,B),Y&&m(b,F,D,B),B!==null&&e.update(B,r.ELEMENT_ARRAY_BUFFER),(Y||o)&&(o=!1,_(b,L,D,F),B!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(B).buffer))}function l(){return r.createVertexArray()}function c(b){return r.bindVertexArray(b)}function h(b){return r.deleteVertexArray(b)}function d(b,L,D){const F=D.wireframe===!0;let B=i[b.id];B===void 0&&(B={},i[b.id]=B);let Y=B[L.id];Y===void 0&&(Y={},B[L.id]=Y);let H=Y[F];return H===void 0&&(H=u(l()),Y[F]=H),H}function u(b){const L=[],D=[],F=[];for(let B=0;B<t;B++)L[B]=0,D[B]=0,F[B]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:L,enabledAttributes:D,attributeDivisors:F,object:b,attributes:{},index:null}}function f(b,L,D,F){const B=s.attributes,Y=L.attributes;let H=0;const Q=D.getAttributes();for(const q in Q)if(Q[q].location>=0){const ce=B[q];let fe=Y[q];if(fe===void 0&&(q==="instanceMatrix"&&b.instanceMatrix&&(fe=b.instanceMatrix),q==="instanceColor"&&b.instanceColor&&(fe=b.instanceColor)),ce===void 0||ce.attribute!==fe||fe&&ce.data!==fe.data)return!0;H++}return s.attributesNum!==H||s.index!==F}function m(b,L,D,F){const B={},Y=L.attributes;let H=0;const Q=D.getAttributes();for(const q in Q)if(Q[q].location>=0){let ce=Y[q];ce===void 0&&(q==="instanceMatrix"&&b.instanceMatrix&&(ce=b.instanceMatrix),q==="instanceColor"&&b.instanceColor&&(ce=b.instanceColor));const fe={};fe.attribute=ce,ce&&ce.data&&(fe.data=ce.data),B[q]=fe,H++}s.attributes=B,s.attributesNum=H,s.index=F}function v(){const b=s.newAttributes;for(let L=0,D=b.length;L<D;L++)b[L]=0}function g(b){p(b,0)}function p(b,L){const D=s.newAttributes,F=s.enabledAttributes,B=s.attributeDivisors;D[b]=1,F[b]===0&&(r.enableVertexAttribArray(b),F[b]=1),B[b]!==L&&(r.vertexAttribDivisor(b,L),B[b]=L)}function x(){const b=s.newAttributes,L=s.enabledAttributes;for(let D=0,F=L.length;D<F;D++)L[D]!==b[D]&&(r.disableVertexAttribArray(D),L[D]=0)}function y(b,L,D,F,B,Y,H){H===!0?r.vertexAttribIPointer(b,L,D,B,Y):r.vertexAttribPointer(b,L,D,F,B,Y)}function _(b,L,D,F){v();const B=F.attributes,Y=D.getAttributes(),H=L.defaultAttributeValues;for(const Q in Y){const q=Y[Q];if(q.location>=0){let te=B[Q];if(te===void 0&&(Q==="instanceMatrix"&&b.instanceMatrix&&(te=b.instanceMatrix),Q==="instanceColor"&&b.instanceColor&&(te=b.instanceColor)),te!==void 0){const ce=te.normalized,fe=te.itemSize,Me=e.get(te);if(Me===void 0)continue;const lt=Me.buffer,J=Me.type,he=Me.bytesPerElement,Ce=J===r.INT||J===r.UNSIGNED_INT||te.gpuType===ao;if(te.isInterleavedBufferAttribute){const ue=te.data,Ue=ue.stride,it=te.offset;if(ue.isInstancedInterleavedBuffer){for(let Le=0;Le<q.locationSize;Le++)p(q.location+Le,ue.meshPerAttribute);b.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=ue.meshPerAttribute*ue.count)}else for(let Le=0;Le<q.locationSize;Le++)g(q.location+Le);r.bindBuffer(r.ARRAY_BUFFER,lt);for(let Le=0;Le<q.locationSize;Le++)y(q.location+Le,fe/q.locationSize,J,ce,Ue*he,(it+fe/q.locationSize*Le)*he,Ce)}else{if(te.isInstancedBufferAttribute){for(let ue=0;ue<q.locationSize;ue++)p(q.location+ue,te.meshPerAttribute);b.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=te.meshPerAttribute*te.count)}else for(let ue=0;ue<q.locationSize;ue++)g(q.location+ue);r.bindBuffer(r.ARRAY_BUFFER,lt);for(let ue=0;ue<q.locationSize;ue++)y(q.location+ue,fe/q.locationSize,J,ce,fe*he,fe/q.locationSize*ue*he,Ce)}}else if(H!==void 0){const ce=H[Q];if(ce!==void 0)switch(ce.length){case 2:r.vertexAttrib2fv(q.location,ce);break;case 3:r.vertexAttrib3fv(q.location,ce);break;case 4:r.vertexAttrib4fv(q.location,ce);break;default:r.vertexAttrib1fv(q.location,ce)}}}}x()}function C(){I();for(const b in i){const L=i[b];for(const D in L){const F=L[D];for(const B in F)h(F[B].object),delete F[B];delete L[D]}delete i[b]}}function T(b){if(i[b.id]===void 0)return;const L=i[b.id];for(const D in L){const F=L[D];for(const B in F)h(F[B].object),delete F[B];delete L[D]}delete i[b.id]}function A(b){for(const L in i){const D=i[L];if(D[b.id]===void 0)continue;const F=D[b.id];for(const B in F)h(F[B].object),delete F[B];delete D[b.id]}}function I(){S(),o=!0,s!==n&&(s=n,c(s.object))}function S(){n.geometry=null,n.program=null,n.wireframe=!1}return{setup:a,reset:I,resetDefaultState:S,dispose:C,releaseStatesOfGeometry:T,releaseStatesOfProgram:A,initAttributes:v,enableAttribute:g,disableUnusedAttributes:x}}function V_(r,e,t){let i;function n(c){i=c}function s(c,h){r.drawArrays(i,c,h),t.update(h,i,1)}function o(c,h,d){d!==0&&(r.drawArraysInstanced(i,c,h,d),t.update(h,i,d))}function a(c,h,d){if(d===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,c,0,h,0,d);let f=0;for(let m=0;m<d;m++)f+=h[m];t.update(f,i,1)}function l(c,h,d,u){if(d===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let m=0;m<c.length;m++)o(c[m],h[m],u[m]);else{f.multiDrawArraysInstancedWEBGL(i,c,0,h,0,u,0,d);let m=0;for(let v=0;v<d;v++)m+=h[v]*u[v];t.update(m,i,1)}}this.setMode=n,this.render=s,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function H_(r,e,t,i){let n;function s(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const A=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(A.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function o(A){return!(A!==Ut&&i.convert(A)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(A){const I=A===cs&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(A!==Ri&&i.convert(A)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&A!==Vt&&!I)}function l(A){if(A==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";A="mediump"}return A==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const h=l(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const d=t.logarithmicDepthBuffer===!0,u=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),f=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),v=r.getParameter(r.MAX_TEXTURE_SIZE),g=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),p=r.getParameter(r.MAX_VERTEX_ATTRIBS),x=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),y=r.getParameter(r.MAX_VARYING_VECTORS),_=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),C=m>0,T=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:d,reverseDepthBuffer:u,maxTextures:f,maxVertexTextures:m,maxTextureSize:v,maxCubemapSize:g,maxAttributes:p,maxVertexUniforms:x,maxVaryings:y,maxFragmentUniforms:_,vertexTextures:C,maxSamples:T}}function G_(r){const e=this;let t=null,i=0,n=!1,s=!1;const o=new mn,a=new We,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,u){const f=d.length!==0||u||i!==0||n;return n=u,i=d.length,f},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(d,u){t=h(d,u,0)},this.setState=function(d,u,f){const m=d.clippingPlanes,v=d.clipIntersection,g=d.clipShadows,p=r.get(d);if(!n||m===null||m.length===0||s&&!g)s?h(null):c();else{const x=s?0:i,y=x*4;let _=p.clippingState||null;l.value=_,_=h(m,u,y,f);for(let C=0;C!==y;++C)_[C]=t[C];p.clippingState=_,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=x}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(d,u,f,m){const v=d!==null?d.length:0;let g=null;if(v!==0){if(g=l.value,m!==!0||g===null){const p=f+v*4,x=u.matrixWorldInverse;a.getNormalMatrix(x),(g===null||g.length<p)&&(g=new Float32Array(p));for(let y=0,_=f;y!==v;++y,_+=4)o.copy(d[y]).applyMatrix4(x,a),o.normal.toArray(g,_),g[_+3]=o.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,g}}function W_(r){let e=new WeakMap;function t(o,a){return a===qs?o.mapping=zi:a===Ys&&(o.mapping=rn),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===qs||a===Ys)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new Yu(l.height);return c.fromEquirectangularTexture(r,o),e.set(o,c),o.addEventListener("dispose",n),t(c.texture,o.mapping)}else return null}}return o}function n(o){const a=o.target;a.removeEventListener("dispose",n);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}const Os=4,Nf=[.125,.215,.35,.446,.526,.582],Qn=20,oh=new Ja,Of=new le;let ah=null,lh=0,ch=0,hh=!1;const es=(1+Math.sqrt(5))/2,Fs=1/es,Ff=[new P(-es,Fs,0),new P(es,Fs,0),new P(-Fs,0,es),new P(Fs,0,es),new P(0,es,-Fs),new P(0,es,Fs),new P(-1,1,-1),new P(1,1,-1),new P(-1,1,1),new P(1,1,1)];class uh{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100){ah=this._renderer.getRenderTarget(),lh=this._renderer.getActiveCubeFace(),ch=this._renderer.getActiveMipmapLevel(),hh=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,i,n,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=kf(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Bf(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(ah,lh,ch),this._renderer.xr.enabled=hh,e.scissorTest=!1,al(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===zi||e.mapping===rn?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),ah=this._renderer.getRenderTarget(),lh=this._renderer.getActiveCubeFace(),ch=this._renderer.getActiveMipmapLevel(),hh=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:Mt,minFilter:Mt,generateMipmaps:!1,type:cs,format:Ut,colorSpace:an,depthBuffer:!1},n=zf(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=zf(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=X_(s)),this._blurMaterial=q_(s,e,t)}return n}_compileMaterial(e){const t=new rt(this._lodPlanes[0],e);this._renderer.compile(t,oh)}_sceneToCubeUV(e,t,i,n){const a=new It(90,1,t,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,d=h.autoClear,u=h.toneMapping;h.getClearColor(Of),h.toneMapping=Fi,h.autoClear=!1;const f=new fn({name:"PMREM.Background",side:kt,depthWrite:!1,depthTest:!1}),m=new rt(new On,f);let v=!1;const g=e.background;g?g.isColor&&(f.color.copy(g),e.background=null,v=!0):(f.color.copy(Of),v=!0);for(let p=0;p<6;p++){const x=p%3;x===0?(a.up.set(0,l[p],0),a.lookAt(c[p],0,0)):x===1?(a.up.set(0,0,l[p]),a.lookAt(0,c[p],0)):(a.up.set(0,l[p],0),a.lookAt(0,0,c[p]));const y=this._cubeSize;al(n,x*y,p>2?y:0,y,y),h.setRenderTarget(n),v&&h.render(m,a),h.render(e,a)}m.geometry.dispose(),m.material.dispose(),h.toneMapping=u,h.autoClear=d,e.background=g}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===zi||e.mapping===rn;n?(this._cubemapMaterial===null&&(this._cubemapMaterial=kf()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Bf());const s=n?this._cubemapMaterial:this._equirectMaterial,o=new rt(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;al(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,oh)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let s=1;s<n;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=Ff[(n-s-1)%Ff.length];this._blur(e,s-1,s,o,a)}t.autoClear=i}_blur(e,t,i,n,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,n,"latitudinal",s),this._halfBlur(o,e,i,i,n,"longitudinal",s)}_halfBlur(e,t,i,n,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,d=new rt(this._lodPlanes[n],c),u=c.uniforms,f=this._sizeLods[i]-1,m=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*Qn-1),v=s/m,g=isFinite(s)?1+Math.floor(h*v):Qn;g>Qn&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Qn}`);const p=[];let x=0;for(let A=0;A<Qn;++A){const I=A/v,S=Math.exp(-I*I/2);p.push(S),A===0?x+=S:A<g&&(x+=2*S)}for(let A=0;A<p.length;A++)p[A]=p[A]/x;u.envMap.value=e.texture,u.samples.value=g,u.weights.value=p,u.latitudinal.value=o==="latitudinal",a&&(u.poleAxis.value=a);const{_lodMax:y}=this;u.dTheta.value=m,u.mipInt.value=y-i;const _=this._sizeLods[n],C=3*_*(n>y-Os?n-y+Os:0),T=4*(this._cubeSize-_);al(t,C,T,3*_,2*_),l.setRenderTarget(t),l.render(d,oh)}}function X_(r){const e=[],t=[],i=[];let n=r;const s=r-Os+1+Nf.length;for(let o=0;o<s;o++){const a=Math.pow(2,n);t.push(a);let l=1/a;o>r-Os?l=Nf[o-r+Os-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),h=-c,d=1+c,u=[h,h,d,h,d,d,h,h,d,d,h,d],f=6,m=6,v=3,g=2,p=1,x=new Float32Array(v*m*f),y=new Float32Array(g*m*f),_=new Float32Array(p*m*f);for(let T=0;T<f;T++){const A=T%3*2/3-1,I=T>2?0:-1,S=[A,I,0,A+2/3,I,0,A+2/3,I+1,0,A,I,0,A+2/3,I+1,0,A,I+1,0];x.set(S,v*m*T),y.set(u,g*m*T);const b=[T,T,T,T,T,T];_.set(b,p*m*T)}const C=new qe;C.setAttribute("position",new ft(x,v)),C.setAttribute("uv",new ft(y,g)),C.setAttribute("faceIndex",new ft(_,p)),e.push(C),n>Os&&n--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function zf(r,e,t){const i=new jt(r,e,t);return i.texture.mapping=os,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function al(r,e,t,i,n){r.viewport.set(e,t,i,n),r.scissor.set(e,t,i,n)}function q_(r,e,t){const i=new Float32Array(Qn),n=new P(0,1,0);return new _t({name:"SphericalGaussianBlur",defines:{n:Qn,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:dh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Oi,depthTest:!1,depthWrite:!1})}function Bf(){return new _t({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:dh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Oi,depthTest:!1,depthWrite:!1})}function kf(){return new _t({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:dh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Oi,depthTest:!1,depthWrite:!1})}function dh(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Y_(r){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===qs||l===Ys,h=l===zi||l===rn;if(c||h){let d=e.get(a);const u=d!==void 0?d.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==u)return t===null&&(t=new uh(r)),d=c?t.fromEquirectangular(a,d):t.fromCubemap(a,d),d.texture.pmremVersion=a.pmremVersion,e.set(a,d),d.texture;if(d!==void 0)return d.texture;{const f=a.image;return c&&f&&f.height>0||h&&f&&n(f)?(t===null&&(t=new uh(r)),d=c?t.fromEquirectangular(a):t.fromCubemap(a),d.texture.pmremVersion=a.pmremVersion,e.set(a,d),a.addEventListener("dispose",s),d.texture):null}}}return a}function n(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function $_(r){const e={};function t(i){if(e[i]!==void 0)return e[i];let n;switch(i){case"WEBGL_depth_texture":n=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=r.getExtension(i)}return e[i]=n,n}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const n=t(i);return n===null&&ds("THREE.WebGLRenderer: "+i+" extension not supported."),n}}}function Z_(r,e,t,i){const n={},s=new WeakMap;function o(d){const u=d.target;u.index!==null&&e.remove(u.index);for(const m in u.attributes)e.remove(u.attributes[m]);u.removeEventListener("dispose",o),delete n[u.id];const f=s.get(u);f&&(e.remove(f),s.delete(u)),i.releaseStatesOfGeometry(u),u.isInstancedBufferGeometry===!0&&delete u._maxInstanceCount,t.memory.geometries--}function a(d,u){return n[u.id]===!0||(u.addEventListener("dispose",o),n[u.id]=!0,t.memory.geometries++),u}function l(d){const u=d.attributes;for(const f in u)e.update(u[f],r.ARRAY_BUFFER)}function c(d){const u=[],f=d.index,m=d.attributes.position;let v=0;if(f!==null){const x=f.array;v=f.version;for(let y=0,_=x.length;y<_;y+=3){const C=x[y+0],T=x[y+1],A=x[y+2];u.push(C,T,T,A,A,C)}}else if(m!==void 0){const x=m.array;v=m.version;for(let y=0,_=x.length/3-1;y<_;y+=3){const C=y+0,T=y+1,A=y+2;u.push(C,T,T,A,A,C)}}else return;const g=new(Su(u)?uc:hc)(u,1);g.version=v;const p=s.get(d);p&&e.remove(p),s.set(d,g)}function h(d){const u=s.get(d);if(u){const f=d.index;f!==null&&u.version<f.version&&c(d)}else c(d);return s.get(d)}return{get:a,update:l,getWireframeAttribute:h}}function j_(r,e,t){let i;function n(u){i=u}let s,o;function a(u){s=u.type,o=u.bytesPerElement}function l(u,f){r.drawElements(i,f,s,u*o),t.update(f,i,1)}function c(u,f,m){m!==0&&(r.drawElementsInstanced(i,f,s,u*o,m),t.update(f,i,m))}function h(u,f,m){if(m===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,f,0,s,u,0,m);let g=0;for(let p=0;p<m;p++)g+=f[p];t.update(g,i,1)}function d(u,f,m,v){if(m===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let p=0;p<u.length;p++)c(u[p]/o,f[p],v[p]);else{g.multiDrawElementsInstancedWEBGL(i,f,0,s,u,0,v,0,m);let p=0;for(let x=0;x<m;x++)p+=f[x]*v[x];t.update(p,i,1)}}this.setMode=n,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=h,this.renderMultiDrawInstances=d}function J_(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(t.calls++,o){case r.TRIANGLES:t.triangles+=a*(s/3);break;case r.LINES:t.lines+=a*(s/2);break;case r.LINE_STRIP:t.lines+=a*(s-1);break;case r.LINE_LOOP:t.lines+=a*s;break;case r.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function n(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:n,update:i}}function K_(r,e,t){const i=new WeakMap,n=new Qe;function s(o,a,l){const c=o.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,d=h!==void 0?h.length:0;let u=i.get(a);if(u===void 0||u.count!==d){let S=function(){A.dispose(),i.delete(a),a.removeEventListener("dispose",S)};u!==void 0&&u.texture.dispose();const f=a.morphAttributes.position!==void 0,m=a.morphAttributes.normal!==void 0,v=a.morphAttributes.color!==void 0,g=a.morphAttributes.position||[],p=a.morphAttributes.normal||[],x=a.morphAttributes.color||[];let y=0;f===!0&&(y=1),m===!0&&(y=2),v===!0&&(y=3);let _=a.attributes.position.count*y,C=1;_>e.maxTextureSize&&(C=Math.ceil(_/e.maxTextureSize),_=e.maxTextureSize);const T=new Float32Array(_*C*4*d),A=new hr(T,_,C,d);A.type=Vt,A.needsUpdate=!0;const I=y*4;for(let b=0;b<d;b++){const L=g[b],D=p[b],F=x[b],B=_*C*4*b;for(let Y=0;Y<L.count;Y++){const H=Y*I;f===!0&&(n.fromBufferAttribute(L,Y),T[B+H+0]=n.x,T[B+H+1]=n.y,T[B+H+2]=n.z,T[B+H+3]=0),m===!0&&(n.fromBufferAttribute(D,Y),T[B+H+4]=n.x,T[B+H+5]=n.y,T[B+H+6]=n.z,T[B+H+7]=0),v===!0&&(n.fromBufferAttribute(F,Y),T[B+H+8]=n.x,T[B+H+9]=n.y,T[B+H+10]=n.z,T[B+H+11]=F.itemSize===4?n.w:1)}}u={count:d,texture:A,size:new G(_,C)},i.set(a,u),a.addEventListener("dispose",S)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(r,"morphTexture",o.morphTexture,t);else{let f=0;for(let v=0;v<c.length;v++)f+=c[v];const m=a.morphTargetsRelative?1:1-f;l.getUniforms().setValue(r,"morphTargetBaseInfluence",m),l.getUniforms().setValue(r,"morphTargetInfluences",c)}l.getUniforms().setValue(r,"morphTargetsTexture",u.texture,t),l.getUniforms().setValue(r,"morphTargetsTextureSize",u.size)}return{update:s}}function Q_(r,e,t,i){let n=new WeakMap;function s(l){const c=i.render.frame,h=l.geometry,d=e.get(l,h);if(n.get(d)!==c&&(e.update(d),n.set(d,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),n.get(l)!==c&&(t.update(l.instanceMatrix,r.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,r.ARRAY_BUFFER),n.set(l,c))),l.isSkinnedMesh){const u=l.skeleton;n.get(u)!==c&&(u.update(),n.set(u,c))}return d}function o(){n=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const Vf=new xt,Hf=new Ec(1,1),Gf=new hr,Wf=new Wo,Xf=new gr,qf=[],Yf=[],$f=new Float32Array(16),Zf=new Float32Array(9),jf=new Float32Array(4);function zs(r,e,t){const i=r[0];if(i<=0||i>0)return r;const n=e*t;let s=qf[n];if(s===void 0&&(s=new Float32Array(n),qf[n]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,r[o].toArray(s,a)}return s}function Ct(r,e){if(r.length!==e.length)return!1;for(let t=0,i=r.length;t<i;t++)if(r[t]!==e[t])return!1;return!0}function Rt(r,e){for(let t=0,i=e.length;t<i;t++)r[t]=e[t]}function ll(r,e){let t=Yf[e];t===void 0&&(t=new Int32Array(e),Yf[e]=t);for(let i=0;i!==e;++i)t[i]=r.allocateTextureUnit();return t}function eb(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function tb(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ct(t,e))return;r.uniform2fv(this.addr,e),Rt(t,e)}}function ib(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Ct(t,e))return;r.uniform3fv(this.addr,e),Rt(t,e)}}function nb(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ct(t,e))return;r.uniform4fv(this.addr,e),Rt(t,e)}}function sb(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(Ct(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Rt(t,e)}else{if(Ct(t,i))return;jf.set(i),r.uniformMatrix2fv(this.addr,!1,jf),Rt(t,i)}}function rb(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(Ct(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Rt(t,e)}else{if(Ct(t,i))return;Zf.set(i),r.uniformMatrix3fv(this.addr,!1,Zf),Rt(t,i)}}function ob(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(Ct(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Rt(t,e)}else{if(Ct(t,i))return;$f.set(i),r.uniformMatrix4fv(this.addr,!1,$f),Rt(t,i)}}function ab(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function lb(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ct(t,e))return;r.uniform2iv(this.addr,e),Rt(t,e)}}function cb(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Ct(t,e))return;r.uniform3iv(this.addr,e),Rt(t,e)}}function hb(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ct(t,e))return;r.uniform4iv(this.addr,e),Rt(t,e)}}function ub(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function db(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ct(t,e))return;r.uniform2uiv(this.addr,e),Rt(t,e)}}function fb(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Ct(t,e))return;r.uniform3uiv(this.addr,e),Rt(t,e)}}function pb(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ct(t,e))return;r.uniform4uiv(this.addr,e),Rt(t,e)}}function mb(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n);let s;this.type===r.SAMPLER_2D_SHADOW?(Hf.compareFunction=Wl,s=Hf):s=Vf,t.setTexture2D(e||s,n)}function gb(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTexture3D(e||Wf,n)}function vb(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTextureCube(e||Xf,n)}function yb(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTexture2DArray(e||Gf,n)}function xb(r){switch(r){case 5126:return eb;case 35664:return tb;case 35665:return ib;case 35666:return nb;case 35674:return sb;case 35675:return rb;case 35676:return ob;case 5124:case 35670:return ab;case 35667:case 35671:return lb;case 35668:case 35672:return cb;case 35669:case 35673:return hb;case 5125:return ub;case 36294:return db;case 36295:return fb;case 36296:return pb;case 35678:case 36198:case 36298:case 36306:case 35682:return mb;case 35679:case 36299:case 36307:return gb;case 35680:case 36300:case 36308:case 36293:return vb;case 36289:case 36303:case 36311:case 36292:return yb}}function _b(r,e){r.uniform1fv(this.addr,e)}function bb(r,e){const t=zs(e,this.size,2);r.uniform2fv(this.addr,t)}function wb(r,e){const t=zs(e,this.size,3);r.uniform3fv(this.addr,t)}function Sb(r,e){const t=zs(e,this.size,4);r.uniform4fv(this.addr,t)}function Mb(r,e){const t=zs(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function Tb(r,e){const t=zs(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function Ab(r,e){const t=zs(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function Eb(r,e){r.uniform1iv(this.addr,e)}function Cb(r,e){r.uniform2iv(this.addr,e)}function Rb(r,e){r.uniform3iv(this.addr,e)}function Pb(r,e){r.uniform4iv(this.addr,e)}function Ib(r,e){r.uniform1uiv(this.addr,e)}function Lb(r,e){r.uniform2uiv(this.addr,e)}function Ub(r,e){r.uniform3uiv(this.addr,e)}function Db(r,e){r.uniform4uiv(this.addr,e)}function Nb(r,e,t){const i=this.cache,n=e.length,s=ll(t,n);Ct(i,s)||(r.uniform1iv(this.addr,s),Rt(i,s));for(let o=0;o!==n;++o)t.setTexture2D(e[o]||Vf,s[o])}function Ob(r,e,t){const i=this.cache,n=e.length,s=ll(t,n);Ct(i,s)||(r.uniform1iv(this.addr,s),Rt(i,s));for(let o=0;o!==n;++o)t.setTexture3D(e[o]||Wf,s[o])}function Fb(r,e,t){const i=this.cache,n=e.length,s=ll(t,n);Ct(i,s)||(r.uniform1iv(this.addr,s),Rt(i,s));for(let o=0;o!==n;++o)t.setTextureCube(e[o]||Xf,s[o])}function zb(r,e,t){const i=this.cache,n=e.length,s=ll(t,n);Ct(i,s)||(r.uniform1iv(this.addr,s),Rt(i,s));for(let o=0;o!==n;++o)t.setTexture2DArray(e[o]||Gf,s[o])}function Bb(r){switch(r){case 5126:return _b;case 35664:return bb;case 35665:return wb;case 35666:return Sb;case 35674:return Mb;case 35675:return Tb;case 35676:return Ab;case 5124:case 35670:return Eb;case 35667:case 35671:return Cb;case 35668:case 35672:return Rb;case 35669:case 35673:return Pb;case 5125:return Ib;case 36294:return Lb;case 36295:return Ub;case 36296:return Db;case 35678:case 36198:case 36298:case 36306:case 35682:return Nb;case 35679:case 36299:case 36307:return Ob;case 35680:case 36300:case 36308:case 36293:return Fb;case 36289:case 36303:case 36311:case 36292:return zb}}class kb{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=xb(t.type)}}class Vb{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=Bb(t.type)}}class Hb{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const n=this.seq;for(let s=0,o=n.length;s!==o;++s){const a=n[s];a.setValue(e,t[a.id],i)}}}const fh=/(\w+)(\])?(\[|\.)?/g;function Jf(r,e){r.seq.push(e),r.map[e.id]=e}function Gb(r,e,t){const i=r.name,n=i.length;for(fh.lastIndex=0;;){const s=fh.exec(i),o=fh.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===n){Jf(t,c===void 0?new kb(a,r,e):new Vb(a,r,e));break}else{let d=t.map[a];d===void 0&&(d=new Hb(a),Jf(t,d)),t=d}}}class cl{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const s=e.getActiveUniform(t,n),o=e.getUniformLocation(t,s.name);Gb(s,o,this)}}setValue(e,t,i,n){const s=this.map[t];s!==void 0&&s.setValue(e,i,n)}setOptional(e,t,i){const n=t[i];n!==void 0&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,n)}}static seqWithValue(e,t){const i=[];for(let n=0,s=e.length;n!==s;++n){const o=e[n];o.id in t&&i.push(o)}return i}}function Kf(r,e,t){const i=r.createShader(e);return r.shaderSource(i,t),r.compileShader(i),i}const Wb=37297;let Xb=0;function qb(r,e){const t=r.split(`
`),i=[],n=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=n;o<s;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}const Qf=new We;function Yb(r){Je._getMatrix(Qf,Je.workingColorSpace,r);const e=`mat3( ${Qf.elements.map(t=>t.toFixed(4))} )`;switch(Je.getTransfer(r)){case rr:return[e,"LinearTransferOETF"];case ut:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",r),[e,"LinearTransferOETF"]}}function ep(r,e,t){const i=r.getShaderParameter(e,r.COMPILE_STATUS),n=r.getShaderInfoLog(e).trim();if(i&&n==="")return"";const s=/ERROR: 0:(\d+)/.exec(n);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+n+`

`+qb(r.getShaderSource(e),o)}else return n}function $b(r,e){const t=Yb(e);return[`vec4 ${r}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function Zb(r,e){let t;switch(e){case iu:t="Linear";break;case nu:t="Reinhard";break;case su:t="Cineon";break;case Pl:t="ACESFilmic";break;case ou:t="AgX";break;case au:t="Neutral";break;case ru:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const hl=new P;function jb(){Je.getLuminanceCoefficients(hl);const r=hl.x.toFixed(4),e=hl.y.toFixed(4),t=hl.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${r}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function Jb(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Vr).join(`
`)}function Kb(r){const e=[];for(const t in r){const i=r[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function Qb(r,e){const t={},i=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let n=0;n<i;n++){const s=r.getActiveAttrib(e,n),o=s.name;let a=1;s.type===r.FLOAT_MAT2&&(a=2),s.type===r.FLOAT_MAT3&&(a=3),s.type===r.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:a}}return t}function Vr(r){return r!==""}function tp(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function ip(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const ew=/^[ \t]*#include +<([\w\d./]+)>/gm;function ph(r){return r.replace(ew,iw)}const tw=new Map;function iw(r,e){let t=Ye[e];if(t===void 0){const i=tw.get(e);if(i!==void 0)t=Ye[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return ph(t)}const nw=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function np(r){return r.replace(nw,sw)}function sw(r,e,t,i){let n="";for(let s=parseInt(e);s<parseInt(t);s++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return n}function sp(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function rw(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Al?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===Nh?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Ai&&(e="SHADOWMAP_TYPE_VSM"),e}function ow(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case zi:case rn:e="ENVMAP_TYPE_CUBE";break;case os:e="ENVMAP_TYPE_CUBE_UV";break}return e}function aw(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case rn:e="ENVMAP_MODE_REFRACTION";break}return e}function lw(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Xs:e="ENVMAP_BLENDING_MULTIPLY";break;case eu:e="ENVMAP_BLENDING_MIX";break;case tu:e="ENVMAP_BLENDING_ADD";break}return e}function cw(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:i,maxMip:t}}function hw(r,e,t,i){const n=r.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=rw(t),c=ow(t),h=aw(t),d=lw(t),u=cw(t),f=Jb(t),m=Kb(s),v=n.createProgram();let g,p,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m].filter(Vr).join(`
`),g.length>0&&(g+=`
`),p=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m].filter(Vr).join(`
`),p.length>0&&(p+=`
`)):(g=[sp(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Vr).join(`
`),p=[sp(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,m,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Fi?"#define TONE_MAPPING":"",t.toneMapping!==Fi?Ye.tonemapping_pars_fragment:"",t.toneMapping!==Fi?Zb("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ye.colorspace_pars_fragment,$b("linearToOutputTexel",t.outputColorSpace),jb(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Vr).join(`
`)),o=ph(o),o=tp(o,t),o=ip(o,t),a=ph(a),a=tp(a,t),a=ip(a,t),o=np(o),a=np(a),t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,p=["#define varying in",t.glslVersion===Xl?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Xl?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const y=x+g+o,_=x+p+a,C=Kf(n,n.VERTEX_SHADER,y),T=Kf(n,n.FRAGMENT_SHADER,_);n.attachShader(v,C),n.attachShader(v,T),t.index0AttributeName!==void 0?n.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&n.bindAttribLocation(v,0,"position"),n.linkProgram(v);function A(L){if(r.debug.checkShaderErrors){const D=n.getProgramInfoLog(v).trim(),F=n.getShaderInfoLog(C).trim(),B=n.getShaderInfoLog(T).trim();let Y=!0,H=!0;if(n.getProgramParameter(v,n.LINK_STATUS)===!1)if(Y=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(n,v,C,T);else{const Q=ep(n,C,"vertex"),q=ep(n,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(v,n.VALIDATE_STATUS)+`

Material Name: `+L.name+`
Material Type: `+L.type+`

Program Info Log: `+D+`
`+Q+`
`+q)}else D!==""?console.warn("THREE.WebGLProgram: Program Info Log:",D):(F===""||B==="")&&(H=!1);H&&(L.diagnostics={runnable:Y,programLog:D,vertexShader:{log:F,prefix:g},fragmentShader:{log:B,prefix:p}})}n.deleteShader(C),n.deleteShader(T),I=new cl(n,v),S=Qb(n,v)}let I;this.getUniforms=function(){return I===void 0&&A(this),I};let S;this.getAttributes=function(){return S===void 0&&A(this),S};let b=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=n.getProgramParameter(v,Wb)),b},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=Xb++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=C,this.fragmentShader=T,this}let uw=0;class dw{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),s=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(n)===!1&&(o.add(n),n.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new fw(e),t.set(e,i)),i}}class fw{constructor(e){this.id=uw++,this.code=e,this.usedTimes=0}}function pw(r,e,t,i,n,s,o){const a=new Jo,l=new dw,c=new Set,h=[],d=n.logarithmicDepthBuffer,u=n.vertexTextures;let f=n.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(S){return c.add(S),S===0?"uv":`uv${S}`}function g(S,b,L,D,F){const B=D.fog,Y=F.geometry,H=S.isMeshStandardMaterial?D.environment:null,Q=(S.isMeshStandardMaterial?t:e).get(S.envMap||H),q=Q&&Q.mapping===os?Q.image.height:null,te=m[S.type];S.precision!==null&&(f=n.getMaxPrecision(S.precision),f!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",f,"instead."));const ce=Y.morphAttributes.position||Y.morphAttributes.normal||Y.morphAttributes.color,fe=ce!==void 0?ce.length:0;let Me=0;Y.morphAttributes.position!==void 0&&(Me=1),Y.morphAttributes.normal!==void 0&&(Me=2),Y.morphAttributes.color!==void 0&&(Me=3);let lt,J,he,Ce;if(te){const dt=yi[te];lt=dt.vertexShader,J=dt.fragmentShader}else lt=S.vertexShader,J=S.fragmentShader,l.update(S),he=l.getVertexShaderID(S),Ce=l.getFragmentShaderID(S);const ue=r.getRenderTarget(),Ue=r.state.buffers.depth.getReversed(),it=F.isInstancedMesh===!0,Le=F.isBatchedMesh===!0,ot=!!S.map,ne=!!S.matcap,ie=!!Q,R=!!S.aoMap,Ie=!!S.lightMap,se=!!S.bumpMap,we=!!S.normalMap,ae=!!S.displacementMap,Be=!!S.emissiveMap,ye=!!S.metalnessMap,E=!!S.roughnessMap,w=S.anisotropy>0,V=S.clearcoat>0,Z=S.dispersion>0,ee=S.iridescence>0,j=S.sheen>0,Pe=S.transmission>0,me=w&&!!S.anisotropyMap,be=V&&!!S.clearcoatMap,je=V&&!!S.clearcoatNormalMap,oe=V&&!!S.clearcoatRoughnessMap,Te=ee&&!!S.iridescenceMap,Fe=ee&&!!S.iridescenceThicknessMap,ke=j&&!!S.sheenColorMap,Ae=j&&!!S.sheenRoughnessMap,Ke=!!S.specularMap,Ze=!!S.specularColorMap,mt=!!S.specularIntensityMap,U=Pe&&!!S.transmissionMap,ge=Pe&&!!S.thicknessMap,$=!!S.gradientMap,K=!!S.alphaMap,_e=S.alphaTest>0,xe=!!S.alphaHash,$e=!!S.extensions;let wt=Fi;S.toneMapped&&(ue===null||ue.isXRRenderTarget===!0)&&(wt=r.toneMapping);const Bt={shaderID:te,shaderType:S.type,shaderName:S.name,vertexShader:lt,fragmentShader:J,defines:S.defines,customVertexShaderID:he,customFragmentShaderID:Ce,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:f,batching:Le,batchingColor:Le&&F._colorsTexture!==null,instancing:it,instancingColor:it&&F.instanceColor!==null,instancingMorph:it&&F.morphTexture!==null,supportsVertexTextures:u,outputColorSpace:ue===null?r.outputColorSpace:ue.isXRRenderTarget===!0?ue.texture.colorSpace:an,alphaToCoverage:!!S.alphaToCoverage,map:ot,matcap:ne,envMap:ie,envMapMode:ie&&Q.mapping,envMapCubeUVHeight:q,aoMap:R,lightMap:Ie,bumpMap:se,normalMap:we,displacementMap:u&&ae,emissiveMap:Be,normalMapObjectSpace:we&&S.normalMapType===pu,normalMapTangentSpace:we&&S.normalMapType===on,metalnessMap:ye,roughnessMap:E,anisotropy:w,anisotropyMap:me,clearcoat:V,clearcoatMap:be,clearcoatNormalMap:je,clearcoatRoughnessMap:oe,dispersion:Z,iridescence:ee,iridescenceMap:Te,iridescenceThicknessMap:Fe,sheen:j,sheenColorMap:ke,sheenRoughnessMap:Ae,specularMap:Ke,specularColorMap:Ze,specularIntensityMap:mt,transmission:Pe,transmissionMap:U,thicknessMap:ge,gradientMap:$,opaque:S.transparent===!1&&S.blending===Sn&&S.alphaToCoverage===!1,alphaMap:K,alphaTest:_e,alphaHash:xe,combine:S.combine,mapUv:ot&&v(S.map.channel),aoMapUv:R&&v(S.aoMap.channel),lightMapUv:Ie&&v(S.lightMap.channel),bumpMapUv:se&&v(S.bumpMap.channel),normalMapUv:we&&v(S.normalMap.channel),displacementMapUv:ae&&v(S.displacementMap.channel),emissiveMapUv:Be&&v(S.emissiveMap.channel),metalnessMapUv:ye&&v(S.metalnessMap.channel),roughnessMapUv:E&&v(S.roughnessMap.channel),anisotropyMapUv:me&&v(S.anisotropyMap.channel),clearcoatMapUv:be&&v(S.clearcoatMap.channel),clearcoatNormalMapUv:je&&v(S.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:oe&&v(S.clearcoatRoughnessMap.channel),iridescenceMapUv:Te&&v(S.iridescenceMap.channel),iridescenceThicknessMapUv:Fe&&v(S.iridescenceThicknessMap.channel),sheenColorMapUv:ke&&v(S.sheenColorMap.channel),sheenRoughnessMapUv:Ae&&v(S.sheenRoughnessMap.channel),specularMapUv:Ke&&v(S.specularMap.channel),specularColorMapUv:Ze&&v(S.specularColorMap.channel),specularIntensityMapUv:mt&&v(S.specularIntensityMap.channel),transmissionMapUv:U&&v(S.transmissionMap.channel),thicknessMapUv:ge&&v(S.thicknessMap.channel),alphaMapUv:K&&v(S.alphaMap.channel),vertexTangents:!!Y.attributes.tangent&&(we||w),vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!Y.attributes.color&&Y.attributes.color.itemSize===4,pointsUvs:F.isPoints===!0&&!!Y.attributes.uv&&(ot||K),fog:!!B,useFog:S.fog===!0,fogExp2:!!B&&B.isFogExp2,flatShading:S.flatShading===!0,sizeAttenuation:S.sizeAttenuation===!0,logarithmicDepthBuffer:d,reverseDepthBuffer:Ue,skinning:F.isSkinnedMesh===!0,morphTargets:Y.morphAttributes.position!==void 0,morphNormals:Y.morphAttributes.normal!==void 0,morphColors:Y.morphAttributes.color!==void 0,morphTargetsCount:fe,morphTextureStride:Me,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:S.dithering,shadowMapEnabled:r.shadowMap.enabled&&L.length>0,shadowMapType:r.shadowMap.type,toneMapping:wt,decodeVideoTexture:ot&&S.map.isVideoTexture===!0&&Je.getTransfer(S.map.colorSpace)===ut,decodeVideoTextureEmissive:Be&&S.emissiveMap.isVideoTexture===!0&&Je.getTransfer(S.emissiveMap.colorSpace)===ut,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===Ei,flipSided:S.side===kt,useDepthPacking:S.depthPacking>=0,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionClipCullDistance:$e&&S.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:($e&&S.extensions.multiDraw===!0||Le)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:S.customProgramCacheKey()};return Bt.vertexUv1s=c.has(1),Bt.vertexUv2s=c.has(2),Bt.vertexUv3s=c.has(3),c.clear(),Bt}function p(S){const b=[];if(S.shaderID?b.push(S.shaderID):(b.push(S.customVertexShaderID),b.push(S.customFragmentShaderID)),S.defines!==void 0)for(const L in S.defines)b.push(L),b.push(S.defines[L]);return S.isRawShaderMaterial===!1&&(x(b,S),y(b,S),b.push(r.outputColorSpace)),b.push(S.customProgramCacheKey),b.join()}function x(S,b){S.push(b.precision),S.push(b.outputColorSpace),S.push(b.envMapMode),S.push(b.envMapCubeUVHeight),S.push(b.mapUv),S.push(b.alphaMapUv),S.push(b.lightMapUv),S.push(b.aoMapUv),S.push(b.bumpMapUv),S.push(b.normalMapUv),S.push(b.displacementMapUv),S.push(b.emissiveMapUv),S.push(b.metalnessMapUv),S.push(b.roughnessMapUv),S.push(b.anisotropyMapUv),S.push(b.clearcoatMapUv),S.push(b.clearcoatNormalMapUv),S.push(b.clearcoatRoughnessMapUv),S.push(b.iridescenceMapUv),S.push(b.iridescenceThicknessMapUv),S.push(b.sheenColorMapUv),S.push(b.sheenRoughnessMapUv),S.push(b.specularMapUv),S.push(b.specularColorMapUv),S.push(b.specularIntensityMapUv),S.push(b.transmissionMapUv),S.push(b.thicknessMapUv),S.push(b.combine),S.push(b.fogExp2),S.push(b.sizeAttenuation),S.push(b.morphTargetsCount),S.push(b.morphAttributeCount),S.push(b.numDirLights),S.push(b.numPointLights),S.push(b.numSpotLights),S.push(b.numSpotLightMaps),S.push(b.numHemiLights),S.push(b.numRectAreaLights),S.push(b.numDirLightShadows),S.push(b.numPointLightShadows),S.push(b.numSpotLightShadows),S.push(b.numSpotLightShadowsWithMaps),S.push(b.numLightProbes),S.push(b.shadowMapType),S.push(b.toneMapping),S.push(b.numClippingPlanes),S.push(b.numClipIntersection),S.push(b.depthPacking)}function y(S,b){a.disableAll(),b.supportsVertexTextures&&a.enable(0),b.instancing&&a.enable(1),b.instancingColor&&a.enable(2),b.instancingMorph&&a.enable(3),b.matcap&&a.enable(4),b.envMap&&a.enable(5),b.normalMapObjectSpace&&a.enable(6),b.normalMapTangentSpace&&a.enable(7),b.clearcoat&&a.enable(8),b.iridescence&&a.enable(9),b.alphaTest&&a.enable(10),b.vertexColors&&a.enable(11),b.vertexAlphas&&a.enable(12),b.vertexUv1s&&a.enable(13),b.vertexUv2s&&a.enable(14),b.vertexUv3s&&a.enable(15),b.vertexTangents&&a.enable(16),b.anisotropy&&a.enable(17),b.alphaHash&&a.enable(18),b.batching&&a.enable(19),b.dispersion&&a.enable(20),b.batchingColor&&a.enable(21),S.push(a.mask),a.disableAll(),b.fog&&a.enable(0),b.useFog&&a.enable(1),b.flatShading&&a.enable(2),b.logarithmicDepthBuffer&&a.enable(3),b.reverseDepthBuffer&&a.enable(4),b.skinning&&a.enable(5),b.morphTargets&&a.enable(6),b.morphNormals&&a.enable(7),b.morphColors&&a.enable(8),b.premultipliedAlpha&&a.enable(9),b.shadowMapEnabled&&a.enable(10),b.doubleSided&&a.enable(11),b.flipSided&&a.enable(12),b.useDepthPacking&&a.enable(13),b.dithering&&a.enable(14),b.transmission&&a.enable(15),b.sheen&&a.enable(16),b.opaque&&a.enable(17),b.pointsUvs&&a.enable(18),b.decodeVideoTexture&&a.enable(19),b.decodeVideoTextureEmissive&&a.enable(20),b.alphaToCoverage&&a.enable(21),S.push(a.mask)}function _(S){const b=m[S.type];let L;if(b){const D=yi[b];L=Gu.clone(D.uniforms)}else L=S.uniforms;return L}function C(S,b){let L;for(let D=0,F=h.length;D<F;D++){const B=h[D];if(B.cacheKey===b){L=B,++L.usedTimes;break}}return L===void 0&&(L=new hw(r,b,S,s),h.push(L)),L}function T(S){if(--S.usedTimes===0){const b=h.indexOf(S);h[b]=h[h.length-1],h.pop(),S.destroy()}}function A(S){l.remove(S)}function I(){l.dispose()}return{getParameters:g,getProgramCacheKey:p,getUniforms:_,acquireProgram:C,releaseProgram:T,releaseShaderCache:A,programs:h,dispose:I}}function mw(){let r=new WeakMap;function e(o){return r.has(o)}function t(o){let a=r.get(o);return a===void 0&&(a={},r.set(o,a)),a}function i(o){r.delete(o)}function n(o,a,l){r.get(o)[a]=l}function s(){r=new WeakMap}return{has:e,get:t,remove:i,update:n,dispose:s}}function gw(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function rp(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function op(){const r=[];let e=0;const t=[],i=[],n=[];function s(){e=0,t.length=0,i.length=0,n.length=0}function o(d,u,f,m,v,g){let p=r[e];return p===void 0?(p={id:d.id,object:d,geometry:u,material:f,groupOrder:m,renderOrder:d.renderOrder,z:v,group:g},r[e]=p):(p.id=d.id,p.object=d,p.geometry=u,p.material=f,p.groupOrder=m,p.renderOrder=d.renderOrder,p.z=v,p.group=g),e++,p}function a(d,u,f,m,v,g){const p=o(d,u,f,m,v,g);f.transmission>0?i.push(p):f.transparent===!0?n.push(p):t.push(p)}function l(d,u,f,m,v,g){const p=o(d,u,f,m,v,g);f.transmission>0?i.unshift(p):f.transparent===!0?n.unshift(p):t.unshift(p)}function c(d,u){t.length>1&&t.sort(d||gw),i.length>1&&i.sort(u||rp),n.length>1&&n.sort(u||rp)}function h(){for(let d=e,u=r.length;d<u;d++){const f=r[d];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:i,transparent:n,init:s,push:a,unshift:l,finish:h,sort:c}}function vw(){let r=new WeakMap;function e(i,n){const s=r.get(i);let o;return s===void 0?(o=new op,r.set(i,[o])):n>=s.length?(o=new op,s.push(o)):o=s[n],o}function t(){r=new WeakMap}return{get:e,dispose:t}}function yw(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new P,color:new le};break;case"SpotLight":t={position:new P,direction:new P,color:new le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new P,color:new le,distance:0,decay:0};break;case"HemisphereLight":t={direction:new P,skyColor:new le,groundColor:new le};break;case"RectAreaLight":t={color:new le,position:new P,halfWidth:new P,halfHeight:new P};break}return r[e.id]=t,t}}}function xw(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new G};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new G};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new G,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let _w=0;function bw(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function ww(r){const e=new yw,t=xw(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)i.probe.push(new P);const n=new P,s=new ze,o=new ze;function a(c){let h=0,d=0,u=0;for(let S=0;S<9;S++)i.probe[S].set(0,0,0);let f=0,m=0,v=0,g=0,p=0,x=0,y=0,_=0,C=0,T=0,A=0;c.sort(bw);for(let S=0,b=c.length;S<b;S++){const L=c[S],D=L.color,F=L.intensity,B=L.distance,Y=L.shadow&&L.shadow.map?L.shadow.map.texture:null;if(L.isAmbientLight)h+=D.r*F,d+=D.g*F,u+=D.b*F;else if(L.isLightProbe){for(let H=0;H<9;H++)i.probe[H].addScaledVector(L.sh.coefficients[H],F);A++}else if(L.isDirectionalLight){const H=e.get(L);if(H.color.copy(L.color).multiplyScalar(L.intensity),L.castShadow){const Q=L.shadow,q=t.get(L);q.shadowIntensity=Q.intensity,q.shadowBias=Q.bias,q.shadowNormalBias=Q.normalBias,q.shadowRadius=Q.radius,q.shadowMapSize=Q.mapSize,i.directionalShadow[f]=q,i.directionalShadowMap[f]=Y,i.directionalShadowMatrix[f]=L.shadow.matrix,x++}i.directional[f]=H,f++}else if(L.isSpotLight){const H=e.get(L);H.position.setFromMatrixPosition(L.matrixWorld),H.color.copy(D).multiplyScalar(F),H.distance=B,H.coneCos=Math.cos(L.angle),H.penumbraCos=Math.cos(L.angle*(1-L.penumbra)),H.decay=L.decay,i.spot[v]=H;const Q=L.shadow;if(L.map&&(i.spotLightMap[C]=L.map,C++,Q.updateMatrices(L),L.castShadow&&T++),i.spotLightMatrix[v]=Q.matrix,L.castShadow){const q=t.get(L);q.shadowIntensity=Q.intensity,q.shadowBias=Q.bias,q.shadowNormalBias=Q.normalBias,q.shadowRadius=Q.radius,q.shadowMapSize=Q.mapSize,i.spotShadow[v]=q,i.spotShadowMap[v]=Y,_++}v++}else if(L.isRectAreaLight){const H=e.get(L);H.color.copy(D).multiplyScalar(F),H.halfWidth.set(L.width*.5,0,0),H.halfHeight.set(0,L.height*.5,0),i.rectArea[g]=H,g++}else if(L.isPointLight){const H=e.get(L);if(H.color.copy(L.color).multiplyScalar(L.intensity),H.distance=L.distance,H.decay=L.decay,L.castShadow){const Q=L.shadow,q=t.get(L);q.shadowIntensity=Q.intensity,q.shadowBias=Q.bias,q.shadowNormalBias=Q.normalBias,q.shadowRadius=Q.radius,q.shadowMapSize=Q.mapSize,q.shadowCameraNear=Q.camera.near,q.shadowCameraFar=Q.camera.far,i.pointShadow[m]=q,i.pointShadowMap[m]=Y,i.pointShadowMatrix[m]=L.shadow.matrix,y++}i.point[m]=H,m++}else if(L.isHemisphereLight){const H=e.get(L);H.skyColor.copy(L.color).multiplyScalar(F),H.groundColor.copy(L.groundColor).multiplyScalar(F),i.hemi[p]=H,p++}}g>0&&(r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=de.LTC_FLOAT_1,i.rectAreaLTC2=de.LTC_FLOAT_2):(i.rectAreaLTC1=de.LTC_HALF_1,i.rectAreaLTC2=de.LTC_HALF_2)),i.ambient[0]=h,i.ambient[1]=d,i.ambient[2]=u;const I=i.hash;(I.directionalLength!==f||I.pointLength!==m||I.spotLength!==v||I.rectAreaLength!==g||I.hemiLength!==p||I.numDirectionalShadows!==x||I.numPointShadows!==y||I.numSpotShadows!==_||I.numSpotMaps!==C||I.numLightProbes!==A)&&(i.directional.length=f,i.spot.length=v,i.rectArea.length=g,i.point.length=m,i.hemi.length=p,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=y,i.pointShadowMap.length=y,i.spotShadow.length=_,i.spotShadowMap.length=_,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=y,i.spotLightMatrix.length=_+C-T,i.spotLightMap.length=C,i.numSpotLightShadowsWithMaps=T,i.numLightProbes=A,I.directionalLength=f,I.pointLength=m,I.spotLength=v,I.rectAreaLength=g,I.hemiLength=p,I.numDirectionalShadows=x,I.numPointShadows=y,I.numSpotShadows=_,I.numSpotMaps=C,I.numLightProbes=A,i.version=_w++)}function l(c,h){let d=0,u=0,f=0,m=0,v=0;const g=h.matrixWorldInverse;for(let p=0,x=c.length;p<x;p++){const y=c[p];if(y.isDirectionalLight){const _=i.directional[d];_.direction.setFromMatrixPosition(y.matrixWorld),n.setFromMatrixPosition(y.target.matrixWorld),_.direction.sub(n),_.direction.transformDirection(g),d++}else if(y.isSpotLight){const _=i.spot[f];_.position.setFromMatrixPosition(y.matrixWorld),_.position.applyMatrix4(g),_.direction.setFromMatrixPosition(y.matrixWorld),n.setFromMatrixPosition(y.target.matrixWorld),_.direction.sub(n),_.direction.transformDirection(g),f++}else if(y.isRectAreaLight){const _=i.rectArea[m];_.position.setFromMatrixPosition(y.matrixWorld),_.position.applyMatrix4(g),o.identity(),s.copy(y.matrixWorld),s.premultiply(g),o.extractRotation(s),_.halfWidth.set(y.width*.5,0,0),_.halfHeight.set(0,y.height*.5,0),_.halfWidth.applyMatrix4(o),_.halfHeight.applyMatrix4(o),m++}else if(y.isPointLight){const _=i.point[u];_.position.setFromMatrixPosition(y.matrixWorld),_.position.applyMatrix4(g),u++}else if(y.isHemisphereLight){const _=i.hemi[v];_.direction.setFromMatrixPosition(y.matrixWorld),_.direction.transformDirection(g),v++}}}return{setup:a,setupView:l,state:i}}function ap(r){const e=new ww(r),t=[],i=[];function n(h){c.camera=h,t.length=0,i.length=0}function s(h){t.push(h)}function o(h){i.push(h)}function a(){e.setup(t)}function l(h){e.setupView(t,h)}const c={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:n,state:c,setupLights:a,setupLightsView:l,pushLight:s,pushShadow:o}}function Sw(r){let e=new WeakMap;function t(n,s=0){const o=e.get(n);let a;return o===void 0?(a=new ap(r),e.set(n,[a])):s>=o.length?(a=new ap(r),o.push(a)):a=o[s],a}function i(){e=new WeakMap}return{get:t,dispose:i}}const Mw=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Tw=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Aw(r,e,t){let i=new wr;const n=new G,s=new G,o=new Qe,a=new Vc({depthPacking:fu}),l=new Hc,c={},h=t.maxTextureSize,d={[Ni]:kt,[kt]:Ni,[Ei]:Ei},u=new _t({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new G},radius:{value:4}},vertexShader:Mw,fragmentShader:Tw}),f=u.clone();f.defines.HORIZONTAL_PASS=1;const m=new qe;m.setAttribute("position",new ft(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const v=new rt(m,u),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Al;let p=this.type;this.render=function(T,A,I){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||T.length===0)return;const S=r.getRenderTarget(),b=r.getActiveCubeFace(),L=r.getActiveMipmapLevel(),D=r.state;D.setBlending(Oi),D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);const F=p!==Ai&&this.type===Ai,B=p===Ai&&this.type!==Ai;for(let Y=0,H=T.length;Y<H;Y++){const Q=T[Y],q=Q.shadow;if(q===void 0){console.warn("THREE.WebGLShadowMap:",Q,"has no shadow.");continue}if(q.autoUpdate===!1&&q.needsUpdate===!1)continue;n.copy(q.mapSize);const te=q.getFrameExtents();if(n.multiply(te),s.copy(q.mapSize),(n.x>h||n.y>h)&&(n.x>h&&(s.x=Math.floor(h/te.x),n.x=s.x*te.x,q.mapSize.x=s.x),n.y>h&&(s.y=Math.floor(h/te.y),n.y=s.y*te.y,q.mapSize.y=s.y)),q.map===null||F===!0||B===!0){const fe=this.type!==Ai?{minFilter:yt,magFilter:yt}:{};q.map!==null&&q.map.dispose(),q.map=new jt(n.x,n.y,fe),q.map.texture.name=Q.name+".shadowMap",q.camera.updateProjectionMatrix()}r.setRenderTarget(q.map),r.clear();const ce=q.getViewportCount();for(let fe=0;fe<ce;fe++){const Me=q.getViewport(fe);o.set(s.x*Me.x,s.y*Me.y,s.x*Me.z,s.y*Me.w),D.viewport(o),q.updateMatrices(Q,fe),i=q.getFrustum(),_(A,I,q.camera,Q,this.type)}q.isPointLightShadow!==!0&&this.type===Ai&&x(q,I),q.needsUpdate=!1}p=this.type,g.needsUpdate=!1,r.setRenderTarget(S,b,L)};function x(T,A){const I=e.update(v);u.defines.VSM_SAMPLES!==T.blurSamples&&(u.defines.VSM_SAMPLES=T.blurSamples,f.defines.VSM_SAMPLES=T.blurSamples,u.needsUpdate=!0,f.needsUpdate=!0),T.mapPass===null&&(T.mapPass=new jt(n.x,n.y)),u.uniforms.shadow_pass.value=T.map.texture,u.uniforms.resolution.value=T.mapSize,u.uniforms.radius.value=T.radius,r.setRenderTarget(T.mapPass),r.clear(),r.renderBufferDirect(A,null,I,u,v,null),f.uniforms.shadow_pass.value=T.mapPass.texture,f.uniforms.resolution.value=T.mapSize,f.uniforms.radius.value=T.radius,r.setRenderTarget(T.map),r.clear(),r.renderBufferDirect(A,null,I,f,v,null)}function y(T,A,I,S){let b=null;const L=I.isPointLight===!0?T.customDistanceMaterial:T.customDepthMaterial;if(L!==void 0)b=L;else if(b=I.isPointLight===!0?l:a,r.localClippingEnabled&&A.clipShadows===!0&&Array.isArray(A.clippingPlanes)&&A.clippingPlanes.length!==0||A.displacementMap&&A.displacementScale!==0||A.alphaMap&&A.alphaTest>0||A.map&&A.alphaTest>0){const D=b.uuid,F=A.uuid;let B=c[D];B===void 0&&(B={},c[D]=B);let Y=B[F];Y===void 0&&(Y=b.clone(),B[F]=Y,A.addEventListener("dispose",C)),b=Y}if(b.visible=A.visible,b.wireframe=A.wireframe,S===Ai?b.side=A.shadowSide!==null?A.shadowSide:A.side:b.side=A.shadowSide!==null?A.shadowSide:d[A.side],b.alphaMap=A.alphaMap,b.alphaTest=A.alphaTest,b.map=A.map,b.clipShadows=A.clipShadows,b.clippingPlanes=A.clippingPlanes,b.clipIntersection=A.clipIntersection,b.displacementMap=A.displacementMap,b.displacementScale=A.displacementScale,b.displacementBias=A.displacementBias,b.wireframeLinewidth=A.wireframeLinewidth,b.linewidth=A.linewidth,I.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const D=r.properties.get(b);D.light=I}return b}function _(T,A,I,S,b){if(T.visible===!1)return;if(T.layers.test(A.layers)&&(T.isMesh||T.isLine||T.isPoints)&&(T.castShadow||T.receiveShadow&&b===Ai)&&(!T.frustumCulled||i.intersectsObject(T))){T.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,T.matrixWorld);const F=e.update(T),B=T.material;if(Array.isArray(B)){const Y=F.groups;for(let H=0,Q=Y.length;H<Q;H++){const q=Y[H],te=B[q.materialIndex];if(te&&te.visible){const ce=y(T,te,S,b);T.onBeforeShadow(r,T,A,I,F,ce,q),r.renderBufferDirect(I,null,F,ce,T,q),T.onAfterShadow(r,T,A,I,F,ce,q)}}}else if(B.visible){const Y=y(T,B,S,b);T.onBeforeShadow(r,T,A,I,F,Y,null),r.renderBufferDirect(I,null,F,Y,T,null),T.onAfterShadow(r,T,A,I,F,Y,null)}}const D=T.children;for(let F=0,B=D.length;F<B;F++)_(D[F],A,I,S,b)}function C(T){T.target.removeEventListener("dispose",C);for(const I in c){const S=c[I],b=T.target.uuid;b in S&&(S[b].dispose(),delete S[b])}}}const Ew={[Qr]:eo,[to]:so,[io]:ro,[Mn]:no,[eo]:Qr,[so]:to,[ro]:io,[no]:Mn};function Cw(r,e){function t(){let U=!1;const ge=new Qe;let $=null;const K=new Qe(0,0,0,0);return{setMask:function(_e){$!==_e&&!U&&(r.colorMask(_e,_e,_e,_e),$=_e)},setLocked:function(_e){U=_e},setClear:function(_e,xe,$e,wt,Bt){Bt===!0&&(_e*=wt,xe*=wt,$e*=wt),ge.set(_e,xe,$e,wt),K.equals(ge)===!1&&(r.clearColor(_e,xe,$e,wt),K.copy(ge))},reset:function(){U=!1,$=null,K.set(-1,0,0,0)}}}function i(){let U=!1,ge=!1,$=null,K=null,_e=null;return{setReversed:function(xe){if(ge!==xe){const $e=e.get("EXT_clip_control");ge?$e.clipControlEXT($e.LOWER_LEFT_EXT,$e.ZERO_TO_ONE_EXT):$e.clipControlEXT($e.LOWER_LEFT_EXT,$e.NEGATIVE_ONE_TO_ONE_EXT);const wt=_e;_e=null,this.setClear(wt)}ge=xe},getReversed:function(){return ge},setTest:function(xe){xe?ue(r.DEPTH_TEST):Ue(r.DEPTH_TEST)},setMask:function(xe){$!==xe&&!U&&(r.depthMask(xe),$=xe)},setFunc:function(xe){if(ge&&(xe=Ew[xe]),K!==xe){switch(xe){case Qr:r.depthFunc(r.NEVER);break;case eo:r.depthFunc(r.ALWAYS);break;case to:r.depthFunc(r.LESS);break;case Mn:r.depthFunc(r.LEQUAL);break;case io:r.depthFunc(r.EQUAL);break;case no:r.depthFunc(r.GEQUAL);break;case so:r.depthFunc(r.GREATER);break;case ro:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}K=xe}},setLocked:function(xe){U=xe},setClear:function(xe){_e!==xe&&(ge&&(xe=1-xe),r.clearDepth(xe),_e=xe)},reset:function(){U=!1,$=null,K=null,_e=null,ge=!1}}}function n(){let U=!1,ge=null,$=null,K=null,_e=null,xe=null,$e=null,wt=null,Bt=null;return{setTest:function(dt){U||(dt?ue(r.STENCIL_TEST):Ue(r.STENCIL_TEST))},setMask:function(dt){ge!==dt&&!U&&(r.stencilMask(dt),ge=dt)},setFunc:function(dt,bi,Ji){($!==dt||K!==bi||_e!==Ji)&&(r.stencilFunc(dt,bi,Ji),$=dt,K=bi,_e=Ji)},setOp:function(dt,bi,Ji){(xe!==dt||$e!==bi||wt!==Ji)&&(r.stencilOp(dt,bi,Ji),xe=dt,$e=bi,wt=Ji)},setLocked:function(dt){U=dt},setClear:function(dt){Bt!==dt&&(r.clearStencil(dt),Bt=dt)},reset:function(){U=!1,ge=null,$=null,K=null,_e=null,xe=null,$e=null,wt=null,Bt=null}}}const s=new t,o=new i,a=new n,l=new WeakMap,c=new WeakMap;let h={},d={},u=new WeakMap,f=[],m=null,v=!1,g=null,p=null,x=null,y=null,_=null,C=null,T=null,A=new le(0,0,0),I=0,S=!1,b=null,L=null,D=null,F=null,B=null;const Y=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let H=!1,Q=0;const q=r.getParameter(r.VERSION);q.indexOf("WebGL")!==-1?(Q=parseFloat(/^WebGL (\d)/.exec(q)[1]),H=Q>=1):q.indexOf("OpenGL ES")!==-1&&(Q=parseFloat(/^OpenGL ES (\d)/.exec(q)[1]),H=Q>=2);let te=null,ce={};const fe=r.getParameter(r.SCISSOR_BOX),Me=r.getParameter(r.VIEWPORT),lt=new Qe().fromArray(fe),J=new Qe().fromArray(Me);function he(U,ge,$,K){const _e=new Uint8Array(4),xe=r.createTexture();r.bindTexture(U,xe),r.texParameteri(U,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(U,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let $e=0;$e<$;$e++)U===r.TEXTURE_3D||U===r.TEXTURE_2D_ARRAY?r.texImage3D(ge,0,r.RGBA,1,1,K,0,r.RGBA,r.UNSIGNED_BYTE,_e):r.texImage2D(ge+$e,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,_e);return xe}const Ce={};Ce[r.TEXTURE_2D]=he(r.TEXTURE_2D,r.TEXTURE_2D,1),Ce[r.TEXTURE_CUBE_MAP]=he(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),Ce[r.TEXTURE_2D_ARRAY]=he(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Ce[r.TEXTURE_3D]=he(r.TEXTURE_3D,r.TEXTURE_3D,1,1),s.setClear(0,0,0,1),o.setClear(1),a.setClear(0),ue(r.DEPTH_TEST),o.setFunc(Mn),se(!1),we(Tl),ue(r.CULL_FACE),R(Oi);function ue(U){h[U]!==!0&&(r.enable(U),h[U]=!0)}function Ue(U){h[U]!==!1&&(r.disable(U),h[U]=!1)}function it(U,ge){return d[U]!==ge?(r.bindFramebuffer(U,ge),d[U]=ge,U===r.DRAW_FRAMEBUFFER&&(d[r.FRAMEBUFFER]=ge),U===r.FRAMEBUFFER&&(d[r.DRAW_FRAMEBUFFER]=ge),!0):!1}function Le(U,ge){let $=f,K=!1;if(U){$=u.get(ge),$===void 0&&($=[],u.set(ge,$));const _e=U.textures;if($.length!==_e.length||$[0]!==r.COLOR_ATTACHMENT0){for(let xe=0,$e=_e.length;xe<$e;xe++)$[xe]=r.COLOR_ATTACHMENT0+xe;$.length=_e.length,K=!0}}else $[0]!==r.BACK&&($[0]=r.BACK,K=!0);K&&r.drawBuffers($)}function ot(U){return m!==U?(r.useProgram(U),m=U,!0):!1}const ne={[sn]:r.FUNC_ADD,[Fh]:r.FUNC_SUBTRACT,[zh]:r.FUNC_REVERSE_SUBTRACT};ne[Bh]=r.MIN,ne[kh]=r.MAX;const ie={[Vh]:r.ZERO,[Hh]:r.ONE,[Gh]:r.SRC_COLOR,[Jr]:r.SRC_ALPHA,[Zh]:r.SRC_ALPHA_SATURATE,[Yh]:r.DST_COLOR,[Xh]:r.DST_ALPHA,[Wh]:r.ONE_MINUS_SRC_COLOR,[Kr]:r.ONE_MINUS_SRC_ALPHA,[$h]:r.ONE_MINUS_DST_COLOR,[qh]:r.ONE_MINUS_DST_ALPHA,[jh]:r.CONSTANT_COLOR,[Jh]:r.ONE_MINUS_CONSTANT_COLOR,[Kh]:r.CONSTANT_ALPHA,[Qh]:r.ONE_MINUS_CONSTANT_ALPHA};function R(U,ge,$,K,_e,xe,$e,wt,Bt,dt){if(U===Oi){v===!0&&(Ue(r.BLEND),v=!1);return}if(v===!1&&(ue(r.BLEND),v=!0),U!==Oh){if(U!==g||dt!==S){if((p!==sn||_!==sn)&&(r.blendEquation(r.FUNC_ADD),p=sn,_=sn),dt)switch(U){case Sn:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case El:r.blendFunc(r.ONE,r.ONE);break;case Cl:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Rl:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}else switch(U){case Sn:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case El:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Cl:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Rl:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}x=null,y=null,C=null,T=null,A.set(0,0,0),I=0,g=U,S=dt}return}_e=_e||ge,xe=xe||$,$e=$e||K,(ge!==p||_e!==_)&&(r.blendEquationSeparate(ne[ge],ne[_e]),p=ge,_=_e),($!==x||K!==y||xe!==C||$e!==T)&&(r.blendFuncSeparate(ie[$],ie[K],ie[xe],ie[$e]),x=$,y=K,C=xe,T=$e),(wt.equals(A)===!1||Bt!==I)&&(r.blendColor(wt.r,wt.g,wt.b,Bt),A.copy(wt),I=Bt),g=U,S=!1}function Ie(U,ge){U.side===Ei?Ue(r.CULL_FACE):ue(r.CULL_FACE);let $=U.side===kt;ge&&($=!$),se($),U.blending===Sn&&U.transparent===!1?R(Oi):R(U.blending,U.blendEquation,U.blendSrc,U.blendDst,U.blendEquationAlpha,U.blendSrcAlpha,U.blendDstAlpha,U.blendColor,U.blendAlpha,U.premultipliedAlpha),o.setFunc(U.depthFunc),o.setTest(U.depthTest),o.setMask(U.depthWrite),s.setMask(U.colorWrite);const K=U.stencilWrite;a.setTest(K),K&&(a.setMask(U.stencilWriteMask),a.setFunc(U.stencilFunc,U.stencilRef,U.stencilFuncMask),a.setOp(U.stencilFail,U.stencilZFail,U.stencilZPass)),Be(U.polygonOffset,U.polygonOffsetFactor,U.polygonOffsetUnits),U.alphaToCoverage===!0?ue(r.SAMPLE_ALPHA_TO_COVERAGE):Ue(r.SAMPLE_ALPHA_TO_COVERAGE)}function se(U){b!==U&&(U?r.frontFace(r.CW):r.frontFace(r.CCW),b=U)}function we(U){U!==Uh?(ue(r.CULL_FACE),U!==L&&(U===Tl?r.cullFace(r.BACK):U===Dh?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Ue(r.CULL_FACE),L=U}function ae(U){U!==D&&(H&&r.lineWidth(U),D=U)}function Be(U,ge,$){U?(ue(r.POLYGON_OFFSET_FILL),(F!==ge||B!==$)&&(r.polygonOffset(ge,$),F=ge,B=$)):Ue(r.POLYGON_OFFSET_FILL)}function ye(U){U?ue(r.SCISSOR_TEST):Ue(r.SCISSOR_TEST)}function E(U){U===void 0&&(U=r.TEXTURE0+Y-1),te!==U&&(r.activeTexture(U),te=U)}function w(U,ge,$){$===void 0&&(te===null?$=r.TEXTURE0+Y-1:$=te);let K=ce[$];K===void 0&&(K={type:void 0,texture:void 0},ce[$]=K),(K.type!==U||K.texture!==ge)&&(te!==$&&(r.activeTexture($),te=$),r.bindTexture(U,ge||Ce[U]),K.type=U,K.texture=ge)}function V(){const U=ce[te];U!==void 0&&U.type!==void 0&&(r.bindTexture(U.type,null),U.type=void 0,U.texture=void 0)}function Z(){try{r.compressedTexImage2D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function ee(){try{r.compressedTexImage3D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function j(){try{r.texSubImage2D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Pe(){try{r.texSubImage3D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function me(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function be(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function je(){try{r.texStorage2D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function oe(){try{r.texStorage3D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Te(){try{r.texImage2D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Fe(){try{r.texImage3D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function ke(U){lt.equals(U)===!1&&(r.scissor(U.x,U.y,U.z,U.w),lt.copy(U))}function Ae(U){J.equals(U)===!1&&(r.viewport(U.x,U.y,U.z,U.w),J.copy(U))}function Ke(U,ge){let $=c.get(ge);$===void 0&&($=new WeakMap,c.set(ge,$));let K=$.get(U);K===void 0&&(K=r.getUniformBlockIndex(ge,U.name),$.set(U,K))}function Ze(U,ge){const K=c.get(ge).get(U);l.get(ge)!==K&&(r.uniformBlockBinding(ge,K,U.__bindingPointIndex),l.set(ge,K))}function mt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),o.setReversed(!1),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),h={},te=null,ce={},d={},u=new WeakMap,f=[],m=null,v=!1,g=null,p=null,x=null,y=null,_=null,C=null,T=null,A=new le(0,0,0),I=0,S=!1,b=null,L=null,D=null,F=null,B=null,lt.set(0,0,r.canvas.width,r.canvas.height),J.set(0,0,r.canvas.width,r.canvas.height),s.reset(),o.reset(),a.reset()}return{buffers:{color:s,depth:o,stencil:a},enable:ue,disable:Ue,bindFramebuffer:it,drawBuffers:Le,useProgram:ot,setBlending:R,setMaterial:Ie,setFlipSided:se,setCullFace:we,setLineWidth:ae,setPolygonOffset:Be,setScissorTest:ye,activeTexture:E,bindTexture:w,unbindTexture:V,compressedTexImage2D:Z,compressedTexImage3D:ee,texImage2D:Te,texImage3D:Fe,updateUBOMapping:Ke,uniformBlockBinding:Ze,texStorage2D:je,texStorage3D:oe,texSubImage2D:j,texSubImage3D:Pe,compressedTexSubImage2D:me,compressedTexSubImage3D:be,scissor:ke,viewport:Ae,reset:mt}}function Rw(r,e,t,i,n,s,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new G,h=new WeakMap;let d;const u=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function m(E,w){return f?new OffscreenCanvas(E,w):cr("canvas")}function v(E,w,V){let Z=1;const ee=ye(E);if((ee.width>V||ee.height>V)&&(Z=V/Math.max(ee.width,ee.height)),Z<1)if(typeof HTMLImageElement<"u"&&E instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&E instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&E instanceof ImageBitmap||typeof VideoFrame<"u"&&E instanceof VideoFrame){const j=Math.floor(Z*ee.width),Pe=Math.floor(Z*ee.height);d===void 0&&(d=m(j,Pe));const me=w?m(j,Pe):d;return me.width=j,me.height=Pe,me.getContext("2d").drawImage(E,0,0,j,Pe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ee.width+"x"+ee.height+") to ("+j+"x"+Pe+")."),me}else return"data"in E&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ee.width+"x"+ee.height+")."),E;return E}function g(E){return E.generateMipmaps}function p(E){r.generateMipmap(E)}function x(E){return E.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:E.isWebGL3DRenderTarget?r.TEXTURE_3D:E.isWebGLArrayRenderTarget||E.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D}function y(E,w,V,Z,ee=!1){if(E!==null){if(r[E]!==void 0)return r[E];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+E+"'")}let j=w;if(w===r.RED&&(V===r.FLOAT&&(j=r.R32F),V===r.HALF_FLOAT&&(j=r.R16F),V===r.UNSIGNED_BYTE&&(j=r.R8)),w===r.RED_INTEGER&&(V===r.UNSIGNED_BYTE&&(j=r.R8UI),V===r.UNSIGNED_SHORT&&(j=r.R16UI),V===r.UNSIGNED_INT&&(j=r.R32UI),V===r.BYTE&&(j=r.R8I),V===r.SHORT&&(j=r.R16I),V===r.INT&&(j=r.R32I)),w===r.RG&&(V===r.FLOAT&&(j=r.RG32F),V===r.HALF_FLOAT&&(j=r.RG16F),V===r.UNSIGNED_BYTE&&(j=r.RG8)),w===r.RG_INTEGER&&(V===r.UNSIGNED_BYTE&&(j=r.RG8UI),V===r.UNSIGNED_SHORT&&(j=r.RG16UI),V===r.UNSIGNED_INT&&(j=r.RG32UI),V===r.BYTE&&(j=r.RG8I),V===r.SHORT&&(j=r.RG16I),V===r.INT&&(j=r.RG32I)),w===r.RGB_INTEGER&&(V===r.UNSIGNED_BYTE&&(j=r.RGB8UI),V===r.UNSIGNED_SHORT&&(j=r.RGB16UI),V===r.UNSIGNED_INT&&(j=r.RGB32UI),V===r.BYTE&&(j=r.RGB8I),V===r.SHORT&&(j=r.RGB16I),V===r.INT&&(j=r.RGB32I)),w===r.RGBA_INTEGER&&(V===r.UNSIGNED_BYTE&&(j=r.RGBA8UI),V===r.UNSIGNED_SHORT&&(j=r.RGBA16UI),V===r.UNSIGNED_INT&&(j=r.RGBA32UI),V===r.BYTE&&(j=r.RGBA8I),V===r.SHORT&&(j=r.RGBA16I),V===r.INT&&(j=r.RGBA32I)),w===r.RGB&&V===r.UNSIGNED_INT_5_9_9_9_REV&&(j=r.RGB9_E5),w===r.RGBA){const Pe=ee?rr:Je.getTransfer(Z);V===r.FLOAT&&(j=r.RGBA32F),V===r.HALF_FLOAT&&(j=r.RGBA16F),V===r.UNSIGNED_BYTE&&(j=Pe===ut?r.SRGB8_ALPHA8:r.RGBA8),V===r.UNSIGNED_SHORT_4_4_4_4&&(j=r.RGBA4),V===r.UNSIGNED_SHORT_5_5_5_1&&(j=r.RGB5_A1)}return(j===r.R16F||j===r.R32F||j===r.RG16F||j===r.RG32F||j===r.RGBA16F||j===r.RGBA32F)&&e.get("EXT_color_buffer_float"),j}function _(E,w){let V;return E?w===null||w===Bi||w===Tn?V=r.DEPTH24_STENCIL8:w===Vt?V=r.DEPTH32F_STENCIL8:w===ls&&(V=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):w===null||w===Bi||w===Tn?V=r.DEPTH_COMPONENT24:w===Vt?V=r.DEPTH_COMPONENT32F:w===ls&&(V=r.DEPTH_COMPONENT16),V}function C(E,w){return g(E)===!0||E.isFramebufferTexture&&E.minFilter!==yt&&E.minFilter!==Mt?Math.log2(Math.max(w.width,w.height))+1:E.mipmaps!==void 0&&E.mipmaps.length>0?E.mipmaps.length:E.isCompressedTexture&&Array.isArray(E.image)?w.mipmaps.length:1}function T(E){const w=E.target;w.removeEventListener("dispose",T),I(w),w.isVideoTexture&&h.delete(w)}function A(E){const w=E.target;w.removeEventListener("dispose",A),b(w)}function I(E){const w=i.get(E);if(w.__webglInit===void 0)return;const V=E.source,Z=u.get(V);if(Z){const ee=Z[w.__cacheKey];ee.usedTimes--,ee.usedTimes===0&&S(E),Object.keys(Z).length===0&&u.delete(V)}i.remove(E)}function S(E){const w=i.get(E);r.deleteTexture(w.__webglTexture);const V=E.source,Z=u.get(V);delete Z[w.__cacheKey],o.memory.textures--}function b(E){const w=i.get(E);if(E.depthTexture&&(E.depthTexture.dispose(),i.remove(E.depthTexture)),E.isWebGLCubeRenderTarget)for(let Z=0;Z<6;Z++){if(Array.isArray(w.__webglFramebuffer[Z]))for(let ee=0;ee<w.__webglFramebuffer[Z].length;ee++)r.deleteFramebuffer(w.__webglFramebuffer[Z][ee]);else r.deleteFramebuffer(w.__webglFramebuffer[Z]);w.__webglDepthbuffer&&r.deleteRenderbuffer(w.__webglDepthbuffer[Z])}else{if(Array.isArray(w.__webglFramebuffer))for(let Z=0;Z<w.__webglFramebuffer.length;Z++)r.deleteFramebuffer(w.__webglFramebuffer[Z]);else r.deleteFramebuffer(w.__webglFramebuffer);if(w.__webglDepthbuffer&&r.deleteRenderbuffer(w.__webglDepthbuffer),w.__webglMultisampledFramebuffer&&r.deleteFramebuffer(w.__webglMultisampledFramebuffer),w.__webglColorRenderbuffer)for(let Z=0;Z<w.__webglColorRenderbuffer.length;Z++)w.__webglColorRenderbuffer[Z]&&r.deleteRenderbuffer(w.__webglColorRenderbuffer[Z]);w.__webglDepthRenderbuffer&&r.deleteRenderbuffer(w.__webglDepthRenderbuffer)}const V=E.textures;for(let Z=0,ee=V.length;Z<ee;Z++){const j=i.get(V[Z]);j.__webglTexture&&(r.deleteTexture(j.__webglTexture),o.memory.textures--),i.remove(V[Z])}i.remove(E)}let L=0;function D(){L=0}function F(){const E=L;return E>=n.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+E+" texture units while this GPU supports only "+n.maxTextures),L+=1,E}function B(E){const w=[];return w.push(E.wrapS),w.push(E.wrapT),w.push(E.wrapR||0),w.push(E.magFilter),w.push(E.minFilter),w.push(E.anisotropy),w.push(E.internalFormat),w.push(E.format),w.push(E.type),w.push(E.generateMipmaps),w.push(E.premultiplyAlpha),w.push(E.flipY),w.push(E.unpackAlignment),w.push(E.colorSpace),w.join()}function Y(E,w){const V=i.get(E);if(E.isVideoTexture&&ae(E),E.isRenderTargetTexture===!1&&E.version>0&&V.__version!==E.version){const Z=E.image;if(Z===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Z.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{J(V,E,w);return}}t.bindTexture(r.TEXTURE_2D,V.__webglTexture,r.TEXTURE0+w)}function H(E,w){const V=i.get(E);if(E.version>0&&V.__version!==E.version){J(V,E,w);return}t.bindTexture(r.TEXTURE_2D_ARRAY,V.__webglTexture,r.TEXTURE0+w)}function Q(E,w){const V=i.get(E);if(E.version>0&&V.__version!==E.version){J(V,E,w);return}t.bindTexture(r.TEXTURE_3D,V.__webglTexture,r.TEXTURE0+w)}function q(E,w){const V=i.get(E);if(E.version>0&&V.__version!==E.version){he(V,E,w);return}t.bindTexture(r.TEXTURE_CUBE_MAP,V.__webglTexture,r.TEXTURE0+w)}const te={[$s]:r.REPEAT,[li]:r.CLAMP_TO_EDGE,[Zs]:r.MIRRORED_REPEAT},ce={[yt]:r.NEAREST,[Ll]:r.NEAREST_MIPMAP_NEAREST,[as]:r.NEAREST_MIPMAP_LINEAR,[Mt]:r.LINEAR,[js]:r.LINEAR_MIPMAP_NEAREST,[Ci]:r.LINEAR_MIPMAP_LINEAR},fe={[mu]:r.NEVER,[bu]:r.ALWAYS,[gu]:r.LESS,[Wl]:r.LEQUAL,[vu]:r.EQUAL,[_u]:r.GEQUAL,[yu]:r.GREATER,[xu]:r.NOTEQUAL};function Me(E,w){if(w.type===Vt&&e.has("OES_texture_float_linear")===!1&&(w.magFilter===Mt||w.magFilter===js||w.magFilter===as||w.magFilter===Ci||w.minFilter===Mt||w.minFilter===js||w.minFilter===as||w.minFilter===Ci)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(E,r.TEXTURE_WRAP_S,te[w.wrapS]),r.texParameteri(E,r.TEXTURE_WRAP_T,te[w.wrapT]),(E===r.TEXTURE_3D||E===r.TEXTURE_2D_ARRAY)&&r.texParameteri(E,r.TEXTURE_WRAP_R,te[w.wrapR]),r.texParameteri(E,r.TEXTURE_MAG_FILTER,ce[w.magFilter]),r.texParameteri(E,r.TEXTURE_MIN_FILTER,ce[w.minFilter]),w.compareFunction&&(r.texParameteri(E,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(E,r.TEXTURE_COMPARE_FUNC,fe[w.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(w.magFilter===yt||w.minFilter!==as&&w.minFilter!==Ci||w.type===Vt&&e.has("OES_texture_float_linear")===!1)return;if(w.anisotropy>1||i.get(w).__currentAnisotropy){const V=e.get("EXT_texture_filter_anisotropic");r.texParameterf(E,V.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(w.anisotropy,n.getMaxAnisotropy())),i.get(w).__currentAnisotropy=w.anisotropy}}}function lt(E,w){let V=!1;E.__webglInit===void 0&&(E.__webglInit=!0,w.addEventListener("dispose",T));const Z=w.source;let ee=u.get(Z);ee===void 0&&(ee={},u.set(Z,ee));const j=B(w);if(j!==E.__cacheKey){ee[j]===void 0&&(ee[j]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,V=!0),ee[j].usedTimes++;const Pe=ee[E.__cacheKey];Pe!==void 0&&(ee[E.__cacheKey].usedTimes--,Pe.usedTimes===0&&S(w)),E.__cacheKey=j,E.__webglTexture=ee[j].texture}return V}function J(E,w,V){let Z=r.TEXTURE_2D;(w.isDataArrayTexture||w.isCompressedArrayTexture)&&(Z=r.TEXTURE_2D_ARRAY),w.isData3DTexture&&(Z=r.TEXTURE_3D);const ee=lt(E,w),j=w.source;t.bindTexture(Z,E.__webglTexture,r.TEXTURE0+V);const Pe=i.get(j);if(j.version!==Pe.__version||ee===!0){t.activeTexture(r.TEXTURE0+V);const me=Je.getPrimaries(Je.workingColorSpace),be=w.colorSpace===ki?null:Je.getPrimaries(w.colorSpace),je=w.colorSpace===ki||me===be?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,w.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,w.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,w.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,je);let oe=v(w.image,!1,n.maxTextureSize);oe=Be(w,oe);const Te=s.convert(w.format,w.colorSpace),Fe=s.convert(w.type);let ke=y(w.internalFormat,Te,Fe,w.colorSpace,w.isVideoTexture);Me(Z,w);let Ae;const Ke=w.mipmaps,Ze=w.isVideoTexture!==!0,mt=Pe.__version===void 0||ee===!0,U=j.dataReady,ge=C(w,oe);if(w.isDepthTexture)ke=_(w.format===En,w.type),mt&&(Ze?t.texStorage2D(r.TEXTURE_2D,1,ke,oe.width,oe.height):t.texImage2D(r.TEXTURE_2D,0,ke,oe.width,oe.height,0,Te,Fe,null));else if(w.isDataTexture)if(Ke.length>0){Ze&&mt&&t.texStorage2D(r.TEXTURE_2D,ge,ke,Ke[0].width,Ke[0].height);for(let $=0,K=Ke.length;$<K;$++)Ae=Ke[$],Ze?U&&t.texSubImage2D(r.TEXTURE_2D,$,0,0,Ae.width,Ae.height,Te,Fe,Ae.data):t.texImage2D(r.TEXTURE_2D,$,ke,Ae.width,Ae.height,0,Te,Fe,Ae.data);w.generateMipmaps=!1}else Ze?(mt&&t.texStorage2D(r.TEXTURE_2D,ge,ke,oe.width,oe.height),U&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,oe.width,oe.height,Te,Fe,oe.data)):t.texImage2D(r.TEXTURE_2D,0,ke,oe.width,oe.height,0,Te,Fe,oe.data);else if(w.isCompressedTexture)if(w.isCompressedArrayTexture){Ze&&mt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,ge,ke,Ke[0].width,Ke[0].height,oe.depth);for(let $=0,K=Ke.length;$<K;$++)if(Ae=Ke[$],w.format!==Ut)if(Te!==null)if(Ze){if(U)if(w.layerUpdates.size>0){const _e=rh(Ae.width,Ae.height,w.format,w.type);for(const xe of w.layerUpdates){const $e=Ae.data.subarray(xe*_e/Ae.data.BYTES_PER_ELEMENT,(xe+1)*_e/Ae.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,$,0,0,xe,Ae.width,Ae.height,1,Te,$e)}w.clearLayerUpdates()}else t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,$,0,0,0,Ae.width,Ae.height,oe.depth,Te,Ae.data)}else t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,$,ke,Ae.width,Ae.height,oe.depth,0,Ae.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else Ze?U&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,$,0,0,0,Ae.width,Ae.height,oe.depth,Te,Fe,Ae.data):t.texImage3D(r.TEXTURE_2D_ARRAY,$,ke,Ae.width,Ae.height,oe.depth,0,Te,Fe,Ae.data)}else{Ze&&mt&&t.texStorage2D(r.TEXTURE_2D,ge,ke,Ke[0].width,Ke[0].height);for(let $=0,K=Ke.length;$<K;$++)Ae=Ke[$],w.format!==Ut?Te!==null?Ze?U&&t.compressedTexSubImage2D(r.TEXTURE_2D,$,0,0,Ae.width,Ae.height,Te,Ae.data):t.compressedTexImage2D(r.TEXTURE_2D,$,ke,Ae.width,Ae.height,0,Ae.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ze?U&&t.texSubImage2D(r.TEXTURE_2D,$,0,0,Ae.width,Ae.height,Te,Fe,Ae.data):t.texImage2D(r.TEXTURE_2D,$,ke,Ae.width,Ae.height,0,Te,Fe,Ae.data)}else if(w.isDataArrayTexture)if(Ze){if(mt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,ge,ke,oe.width,oe.height,oe.depth),U)if(w.layerUpdates.size>0){const $=rh(oe.width,oe.height,w.format,w.type);for(const K of w.layerUpdates){const _e=oe.data.subarray(K*$/oe.data.BYTES_PER_ELEMENT,(K+1)*$/oe.data.BYTES_PER_ELEMENT);t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,K,oe.width,oe.height,1,Te,Fe,_e)}w.clearLayerUpdates()}else t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,oe.width,oe.height,oe.depth,Te,Fe,oe.data)}else t.texImage3D(r.TEXTURE_2D_ARRAY,0,ke,oe.width,oe.height,oe.depth,0,Te,Fe,oe.data);else if(w.isData3DTexture)Ze?(mt&&t.texStorage3D(r.TEXTURE_3D,ge,ke,oe.width,oe.height,oe.depth),U&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,oe.width,oe.height,oe.depth,Te,Fe,oe.data)):t.texImage3D(r.TEXTURE_3D,0,ke,oe.width,oe.height,oe.depth,0,Te,Fe,oe.data);else if(w.isFramebufferTexture){if(mt)if(Ze)t.texStorage2D(r.TEXTURE_2D,ge,ke,oe.width,oe.height);else{let $=oe.width,K=oe.height;for(let _e=0;_e<ge;_e++)t.texImage2D(r.TEXTURE_2D,_e,ke,$,K,0,Te,Fe,null),$>>=1,K>>=1}}else if(Ke.length>0){if(Ze&&mt){const $=ye(Ke[0]);t.texStorage2D(r.TEXTURE_2D,ge,ke,$.width,$.height)}for(let $=0,K=Ke.length;$<K;$++)Ae=Ke[$],Ze?U&&t.texSubImage2D(r.TEXTURE_2D,$,0,0,Te,Fe,Ae):t.texImage2D(r.TEXTURE_2D,$,ke,Te,Fe,Ae);w.generateMipmaps=!1}else if(Ze){if(mt){const $=ye(oe);t.texStorage2D(r.TEXTURE_2D,ge,ke,$.width,$.height)}U&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Te,Fe,oe)}else t.texImage2D(r.TEXTURE_2D,0,ke,Te,Fe,oe);g(w)&&p(Z),Pe.__version=j.version,w.onUpdate&&w.onUpdate(w)}E.__version=w.version}function he(E,w,V){if(w.image.length!==6)return;const Z=lt(E,w),ee=w.source;t.bindTexture(r.TEXTURE_CUBE_MAP,E.__webglTexture,r.TEXTURE0+V);const j=i.get(ee);if(ee.version!==j.__version||Z===!0){t.activeTexture(r.TEXTURE0+V);const Pe=Je.getPrimaries(Je.workingColorSpace),me=w.colorSpace===ki?null:Je.getPrimaries(w.colorSpace),be=w.colorSpace===ki||Pe===me?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,w.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,w.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,w.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,be);const je=w.isCompressedTexture||w.image[0].isCompressedTexture,oe=w.image[0]&&w.image[0].isDataTexture,Te=[];for(let K=0;K<6;K++)!je&&!oe?Te[K]=v(w.image[K],!0,n.maxCubemapSize):Te[K]=oe?w.image[K].image:w.image[K],Te[K]=Be(w,Te[K]);const Fe=Te[0],ke=s.convert(w.format,w.colorSpace),Ae=s.convert(w.type),Ke=y(w.internalFormat,ke,Ae,w.colorSpace),Ze=w.isVideoTexture!==!0,mt=j.__version===void 0||Z===!0,U=ee.dataReady;let ge=C(w,Fe);Me(r.TEXTURE_CUBE_MAP,w);let $;if(je){Ze&&mt&&t.texStorage2D(r.TEXTURE_CUBE_MAP,ge,Ke,Fe.width,Fe.height);for(let K=0;K<6;K++){$=Te[K].mipmaps;for(let _e=0;_e<$.length;_e++){const xe=$[_e];w.format!==Ut?ke!==null?Ze?U&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_e,0,0,xe.width,xe.height,ke,xe.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_e,Ke,xe.width,xe.height,0,xe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ze?U&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_e,0,0,xe.width,xe.height,ke,Ae,xe.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_e,Ke,xe.width,xe.height,0,ke,Ae,xe.data)}}}else{if($=w.mipmaps,Ze&&mt){$.length>0&&ge++;const K=ye(Te[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,ge,Ke,K.width,K.height)}for(let K=0;K<6;K++)if(oe){Ze?U&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,0,0,Te[K].width,Te[K].height,ke,Ae,Te[K].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,Ke,Te[K].width,Te[K].height,0,ke,Ae,Te[K].data);for(let _e=0;_e<$.length;_e++){const $e=$[_e].image[K].image;Ze?U&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_e+1,0,0,$e.width,$e.height,ke,Ae,$e.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_e+1,Ke,$e.width,$e.height,0,ke,Ae,$e.data)}}else{Ze?U&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,0,0,ke,Ae,Te[K]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,Ke,ke,Ae,Te[K]);for(let _e=0;_e<$.length;_e++){const xe=$[_e];Ze?U&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_e+1,0,0,ke,Ae,xe.image[K]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_e+1,Ke,ke,Ae,xe.image[K])}}}g(w)&&p(r.TEXTURE_CUBE_MAP),j.__version=ee.version,w.onUpdate&&w.onUpdate(w)}E.__version=w.version}function Ce(E,w,V,Z,ee,j){const Pe=s.convert(V.format,V.colorSpace),me=s.convert(V.type),be=y(V.internalFormat,Pe,me,V.colorSpace),je=i.get(w),oe=i.get(V);if(oe.__renderTarget=w,!je.__hasExternalTextures){const Te=Math.max(1,w.width>>j),Fe=Math.max(1,w.height>>j);ee===r.TEXTURE_3D||ee===r.TEXTURE_2D_ARRAY?t.texImage3D(ee,j,be,Te,Fe,w.depth,0,Pe,me,null):t.texImage2D(ee,j,be,Te,Fe,0,Pe,me,null)}t.bindFramebuffer(r.FRAMEBUFFER,E),we(w)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,Z,ee,oe.__webglTexture,0,se(w)):(ee===r.TEXTURE_2D||ee>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&ee<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,Z,ee,oe.__webglTexture,j),t.bindFramebuffer(r.FRAMEBUFFER,null)}function ue(E,w,V){if(r.bindRenderbuffer(r.RENDERBUFFER,E),w.depthBuffer){const Z=w.depthTexture,ee=Z&&Z.isDepthTexture?Z.type:null,j=_(w.stencilBuffer,ee),Pe=w.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,me=se(w);we(w)?a.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,me,j,w.width,w.height):V?r.renderbufferStorageMultisample(r.RENDERBUFFER,me,j,w.width,w.height):r.renderbufferStorage(r.RENDERBUFFER,j,w.width,w.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,Pe,r.RENDERBUFFER,E)}else{const Z=w.textures;for(let ee=0;ee<Z.length;ee++){const j=Z[ee],Pe=s.convert(j.format,j.colorSpace),me=s.convert(j.type),be=y(j.internalFormat,Pe,me,j.colorSpace),je=se(w);V&&we(w)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,je,be,w.width,w.height):we(w)?a.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,je,be,w.width,w.height):r.renderbufferStorage(r.RENDERBUFFER,be,w.width,w.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function Ue(E,w){if(w&&w.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,E),!(w.depthTexture&&w.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const Z=i.get(w.depthTexture);Z.__renderTarget=w,(!Z.__webglTexture||w.depthTexture.image.width!==w.width||w.depthTexture.image.height!==w.height)&&(w.depthTexture.image.width=w.width,w.depthTexture.image.height=w.height,w.depthTexture.needsUpdate=!0),Y(w.depthTexture,0);const ee=Z.__webglTexture,j=se(w);if(w.depthTexture.format===An)we(w)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ee,0,j):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ee,0);else if(w.depthTexture.format===En)we(w)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ee,0,j):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ee,0);else throw new Error("Unknown depthTexture format")}function it(E){const w=i.get(E),V=E.isWebGLCubeRenderTarget===!0;if(w.__boundDepthTexture!==E.depthTexture){const Z=E.depthTexture;if(w.__depthDisposeCallback&&w.__depthDisposeCallback(),Z){const ee=()=>{delete w.__boundDepthTexture,delete w.__depthDisposeCallback,Z.removeEventListener("dispose",ee)};Z.addEventListener("dispose",ee),w.__depthDisposeCallback=ee}w.__boundDepthTexture=Z}if(E.depthTexture&&!w.__autoAllocateDepthBuffer){if(V)throw new Error("target.depthTexture not supported in Cube render targets");Ue(w.__webglFramebuffer,E)}else if(V){w.__webglDepthbuffer=[];for(let Z=0;Z<6;Z++)if(t.bindFramebuffer(r.FRAMEBUFFER,w.__webglFramebuffer[Z]),w.__webglDepthbuffer[Z]===void 0)w.__webglDepthbuffer[Z]=r.createRenderbuffer(),ue(w.__webglDepthbuffer[Z],E,!1);else{const ee=E.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,j=w.__webglDepthbuffer[Z];r.bindRenderbuffer(r.RENDERBUFFER,j),r.framebufferRenderbuffer(r.FRAMEBUFFER,ee,r.RENDERBUFFER,j)}}else if(t.bindFramebuffer(r.FRAMEBUFFER,w.__webglFramebuffer),w.__webglDepthbuffer===void 0)w.__webglDepthbuffer=r.createRenderbuffer(),ue(w.__webglDepthbuffer,E,!1);else{const Z=E.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,ee=w.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,ee),r.framebufferRenderbuffer(r.FRAMEBUFFER,Z,r.RENDERBUFFER,ee)}t.bindFramebuffer(r.FRAMEBUFFER,null)}function Le(E,w,V){const Z=i.get(E);w!==void 0&&Ce(Z.__webglFramebuffer,E,E.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),V!==void 0&&it(E)}function ot(E){const w=E.texture,V=i.get(E),Z=i.get(w);E.addEventListener("dispose",A);const ee=E.textures,j=E.isWebGLCubeRenderTarget===!0,Pe=ee.length>1;if(Pe||(Z.__webglTexture===void 0&&(Z.__webglTexture=r.createTexture()),Z.__version=w.version,o.memory.textures++),j){V.__webglFramebuffer=[];for(let me=0;me<6;me++)if(w.mipmaps&&w.mipmaps.length>0){V.__webglFramebuffer[me]=[];for(let be=0;be<w.mipmaps.length;be++)V.__webglFramebuffer[me][be]=r.createFramebuffer()}else V.__webglFramebuffer[me]=r.createFramebuffer()}else{if(w.mipmaps&&w.mipmaps.length>0){V.__webglFramebuffer=[];for(let me=0;me<w.mipmaps.length;me++)V.__webglFramebuffer[me]=r.createFramebuffer()}else V.__webglFramebuffer=r.createFramebuffer();if(Pe)for(let me=0,be=ee.length;me<be;me++){const je=i.get(ee[me]);je.__webglTexture===void 0&&(je.__webglTexture=r.createTexture(),o.memory.textures++)}if(E.samples>0&&we(E)===!1){V.__webglMultisampledFramebuffer=r.createFramebuffer(),V.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,V.__webglMultisampledFramebuffer);for(let me=0;me<ee.length;me++){const be=ee[me];V.__webglColorRenderbuffer[me]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,V.__webglColorRenderbuffer[me]);const je=s.convert(be.format,be.colorSpace),oe=s.convert(be.type),Te=y(be.internalFormat,je,oe,be.colorSpace,E.isXRRenderTarget===!0),Fe=se(E);r.renderbufferStorageMultisample(r.RENDERBUFFER,Fe,Te,E.width,E.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+me,r.RENDERBUFFER,V.__webglColorRenderbuffer[me])}r.bindRenderbuffer(r.RENDERBUFFER,null),E.depthBuffer&&(V.__webglDepthRenderbuffer=r.createRenderbuffer(),ue(V.__webglDepthRenderbuffer,E,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(j){t.bindTexture(r.TEXTURE_CUBE_MAP,Z.__webglTexture),Me(r.TEXTURE_CUBE_MAP,w);for(let me=0;me<6;me++)if(w.mipmaps&&w.mipmaps.length>0)for(let be=0;be<w.mipmaps.length;be++)Ce(V.__webglFramebuffer[me][be],E,w,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+me,be);else Ce(V.__webglFramebuffer[me],E,w,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+me,0);g(w)&&p(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Pe){for(let me=0,be=ee.length;me<be;me++){const je=ee[me],oe=i.get(je);t.bindTexture(r.TEXTURE_2D,oe.__webglTexture),Me(r.TEXTURE_2D,je),Ce(V.__webglFramebuffer,E,je,r.COLOR_ATTACHMENT0+me,r.TEXTURE_2D,0),g(je)&&p(r.TEXTURE_2D)}t.unbindTexture()}else{let me=r.TEXTURE_2D;if((E.isWebGL3DRenderTarget||E.isWebGLArrayRenderTarget)&&(me=E.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(me,Z.__webglTexture),Me(me,w),w.mipmaps&&w.mipmaps.length>0)for(let be=0;be<w.mipmaps.length;be++)Ce(V.__webglFramebuffer[be],E,w,r.COLOR_ATTACHMENT0,me,be);else Ce(V.__webglFramebuffer,E,w,r.COLOR_ATTACHMENT0,me,0);g(w)&&p(me),t.unbindTexture()}E.depthBuffer&&it(E)}function ne(E){const w=E.textures;for(let V=0,Z=w.length;V<Z;V++){const ee=w[V];if(g(ee)){const j=x(E),Pe=i.get(ee).__webglTexture;t.bindTexture(j,Pe),p(j),t.unbindTexture()}}}const ie=[],R=[];function Ie(E){if(E.samples>0){if(we(E)===!1){const w=E.textures,V=E.width,Z=E.height;let ee=r.COLOR_BUFFER_BIT;const j=E.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Pe=i.get(E),me=w.length>1;if(me)for(let be=0;be<w.length;be++)t.bindFramebuffer(r.FRAMEBUFFER,Pe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+be,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,Pe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+be,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,Pe.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Pe.__webglFramebuffer);for(let be=0;be<w.length;be++){if(E.resolveDepthBuffer&&(E.depthBuffer&&(ee|=r.DEPTH_BUFFER_BIT),E.stencilBuffer&&E.resolveStencilBuffer&&(ee|=r.STENCIL_BUFFER_BIT)),me){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Pe.__webglColorRenderbuffer[be]);const je=i.get(w[be]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,je,0)}r.blitFramebuffer(0,0,V,Z,0,0,V,Z,ee,r.NEAREST),l===!0&&(ie.length=0,R.length=0,ie.push(r.COLOR_ATTACHMENT0+be),E.depthBuffer&&E.resolveDepthBuffer===!1&&(ie.push(j),R.push(j),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,R)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,ie))}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),me)for(let be=0;be<w.length;be++){t.bindFramebuffer(r.FRAMEBUFFER,Pe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+be,r.RENDERBUFFER,Pe.__webglColorRenderbuffer[be]);const je=i.get(w[be]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,Pe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+be,r.TEXTURE_2D,je,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Pe.__webglMultisampledFramebuffer)}else if(E.depthBuffer&&E.resolveDepthBuffer===!1&&l){const w=E.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[w])}}}function se(E){return Math.min(n.maxSamples,E.samples)}function we(E){const w=i.get(E);return E.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&w.__useRenderToTexture!==!1}function ae(E){const w=o.render.frame;h.get(E)!==w&&(h.set(E,w),E.update())}function Be(E,w){const V=E.colorSpace,Z=E.format,ee=E.type;return E.isCompressedTexture===!0||E.isVideoTexture===!0||V!==an&&V!==ki&&(Je.getTransfer(V)===ut?(Z!==Ut||ee!==Ri)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",V)),w}function ye(E){return typeof HTMLImageElement<"u"&&E instanceof HTMLImageElement?(c.width=E.naturalWidth||E.width,c.height=E.naturalHeight||E.height):typeof VideoFrame<"u"&&E instanceof VideoFrame?(c.width=E.displayWidth,c.height=E.displayHeight):(c.width=E.width,c.height=E.height),c}this.allocateTextureUnit=F,this.resetTextureUnits=D,this.setTexture2D=Y,this.setTexture2DArray=H,this.setTexture3D=Q,this.setTextureCube=q,this.rebindTextures=Le,this.setupRenderTarget=ot,this.updateRenderTargetMipmap=ne,this.updateMultisampleRenderTarget=Ie,this.setupDepthRenderbuffer=it,this.setupFrameBufferTexture=Ce,this.useMultisampledRTT=we}function lp(r,e){function t(i,n=ki){let s;const o=Je.getTransfer(n);if(i===Ri)return r.UNSIGNED_BYTE;if(i===lo)return r.UNSIGNED_SHORT_4_4_4_4;if(i===co)return r.UNSIGNED_SHORT_5_5_5_1;if(i===Nl)return r.UNSIGNED_INT_5_9_9_9_REV;if(i===Ul)return r.BYTE;if(i===Dl)return r.SHORT;if(i===ls)return r.UNSIGNED_SHORT;if(i===ao)return r.INT;if(i===Bi)return r.UNSIGNED_INT;if(i===Vt)return r.FLOAT;if(i===cs)return r.HALF_FLOAT;if(i===Ol)return r.ALPHA;if(i===Fl)return r.RGB;if(i===Ut)return r.RGBA;if(i===zl)return r.LUMINANCE;if(i===Bl)return r.LUMINANCE_ALPHA;if(i===An)return r.DEPTH_COMPONENT;if(i===En)return r.DEPTH_STENCIL;if(i===ho)return r.RED;if(i===Js)return r.RED_INTEGER;if(i===kl)return r.RG;if(i===uo)return r.RG_INTEGER;if(i===fo)return r.RGBA_INTEGER;if(i===Ks||i===Qs||i===er||i===tr)if(o===ut)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(i===Ks)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===Qs)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===er)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===tr)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(i===Ks)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===Qs)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===er)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===tr)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===po||i===mo||i===go||i===vo)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(i===po)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===mo)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===go)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===vo)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===yo||i===xo||i===_o)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(i===yo||i===xo)return o===ut?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(i===_o)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===bo||i===wo||i===So||i===Mo||i===To||i===Ao||i===Eo||i===Co||i===Ro||i===Po||i===Io||i===Lo||i===Uo||i===Do)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(i===bo)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===wo)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===So)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Mo)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===To)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===Ao)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Eo)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Co)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Ro)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Po)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Io)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Lo)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Uo)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Do)return o===ut?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===ir||i===No||i===Oo)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(i===ir)return o===ut?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===No)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===Oo)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===Vl||i===Fo||i===zo||i===Bo)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(i===ir)return s.COMPRESSED_RED_RGTC1_EXT;if(i===Fo)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===zo)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===Bo)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===Tn?r.UNSIGNED_INT_24_8:r[i]!==void 0?r[i]:null}return{convert:t}}const Pw=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,Iw=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class Lw{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,i){if(this.texture===null){const n=new xt,s=e.properties.get(n);s.__webglTexture=t.texture,(t.depthNear!==i.depthNear||t.depthFar!==i.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new _t({vertexShader:Pw,fragmentShader:Iw,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new rt(new pt(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class Uw extends Pi{constructor(e,t){super();const i=this;let n=null,s=1,o=null,a="local-floor",l=1,c=null,h=null,d=null,u=null,f=null,m=null;const v=new Lw,g=t.getContextAttributes();let p=null,x=null;const y=[],_=[],C=new G;let T=null;const A=new It;A.viewport=new Qe;const I=new It;I.viewport=new Qe;const S=[A,I],b=new mf;let L=null,D=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(J){let he=y[J];return he===void 0&&(he=new ca,y[J]=he),he.getTargetRaySpace()},this.getControllerGrip=function(J){let he=y[J];return he===void 0&&(he=new ca,y[J]=he),he.getGripSpace()},this.getHand=function(J){let he=y[J];return he===void 0&&(he=new ca,y[J]=he),he.getHandSpace()};function F(J){const he=_.indexOf(J.inputSource);if(he===-1)return;const Ce=y[he];Ce!==void 0&&(Ce.update(J.inputSource,J.frame,c||o),Ce.dispatchEvent({type:J.type,data:J.inputSource}))}function B(){n.removeEventListener("select",F),n.removeEventListener("selectstart",F),n.removeEventListener("selectend",F),n.removeEventListener("squeeze",F),n.removeEventListener("squeezestart",F),n.removeEventListener("squeezeend",F),n.removeEventListener("end",B),n.removeEventListener("inputsourceschange",Y);for(let J=0;J<y.length;J++){const he=_[J];he!==null&&(_[J]=null,y[J].disconnect(he))}L=null,D=null,v.reset(),e.setRenderTarget(p),f=null,u=null,d=null,n=null,x=null,lt.stop(),i.isPresenting=!1,e.setPixelRatio(T),e.setSize(C.width,C.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(J){s=J,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(J){a=J,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(J){c=J},this.getBaseLayer=function(){return u!==null?u:f},this.getBinding=function(){return d},this.getFrame=function(){return m},this.getSession=function(){return n},this.setSession=async function(J){if(n=J,n!==null){if(p=e.getRenderTarget(),n.addEventListener("select",F),n.addEventListener("selectstart",F),n.addEventListener("selectend",F),n.addEventListener("squeeze",F),n.addEventListener("squeezestart",F),n.addEventListener("squeezeend",F),n.addEventListener("end",B),n.addEventListener("inputsourceschange",Y),g.xrCompatible!==!0&&await t.makeXRCompatible(),T=e.getPixelRatio(),e.getSize(C),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Ce=null,ue=null,Ue=null;g.depth&&(Ue=g.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Ce=g.stencil?En:An,ue=g.stencil?Tn:Bi);const it={colorFormat:t.RGBA8,depthFormat:Ue,scaleFactor:s};d=new XRWebGLBinding(n,t),u=d.createProjectionLayer(it),n.updateRenderState({layers:[u]}),e.setPixelRatio(1),e.setSize(u.textureWidth,u.textureHeight,!1),x=new jt(u.textureWidth,u.textureHeight,{format:Ut,type:Ri,depthTexture:new Ec(u.textureWidth,u.textureHeight,ue,void 0,void 0,void 0,void 0,void 0,void 0,Ce),stencilBuffer:g.stencil,colorSpace:e.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:u.ignoreDepthValues===!1})}else{const Ce={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(n,t,Ce),n.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),x=new jt(f.framebufferWidth,f.framebufferHeight,{format:Ut,type:Ri,colorSpace:e.outputColorSpace,stencilBuffer:g.stencil})}x.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await n.requestReferenceSpace(a),lt.setContext(n),lt.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(n!==null)return n.environmentBlendMode},this.getDepthTexture=function(){return v.getDepthTexture()};function Y(J){for(let he=0;he<J.removed.length;he++){const Ce=J.removed[he],ue=_.indexOf(Ce);ue>=0&&(_[ue]=null,y[ue].disconnect(Ce))}for(let he=0;he<J.added.length;he++){const Ce=J.added[he];let ue=_.indexOf(Ce);if(ue===-1){for(let it=0;it<y.length;it++)if(it>=_.length){_.push(Ce),ue=it;break}else if(_[it]===null){_[it]=Ce,ue=it;break}if(ue===-1)break}const Ue=y[ue];Ue&&Ue.connect(Ce)}}const H=new P,Q=new P;function q(J,he,Ce){H.setFromMatrixPosition(he.matrixWorld),Q.setFromMatrixPosition(Ce.matrixWorld);const ue=H.distanceTo(Q),Ue=he.projectionMatrix.elements,it=Ce.projectionMatrix.elements,Le=Ue[14]/(Ue[10]-1),ot=Ue[14]/(Ue[10]+1),ne=(Ue[9]+1)/Ue[5],ie=(Ue[9]-1)/Ue[5],R=(Ue[8]-1)/Ue[0],Ie=(it[8]+1)/it[0],se=Le*R,we=Le*Ie,ae=ue/(-R+Ie),Be=ae*-R;if(he.matrixWorld.decompose(J.position,J.quaternion,J.scale),J.translateX(Be),J.translateZ(ae),J.matrixWorld.compose(J.position,J.quaternion,J.scale),J.matrixWorldInverse.copy(J.matrixWorld).invert(),Ue[10]===-1)J.projectionMatrix.copy(he.projectionMatrix),J.projectionMatrixInverse.copy(he.projectionMatrixInverse);else{const ye=Le+ae,E=ot+ae,w=se-Be,V=we+(ue-Be),Z=ne*ot/E*ye,ee=ie*ot/E*ye;J.projectionMatrix.makePerspective(w,V,Z,ee,ye,E),J.projectionMatrixInverse.copy(J.projectionMatrix).invert()}}function te(J,he){he===null?J.matrixWorld.copy(J.matrix):J.matrixWorld.multiplyMatrices(he.matrixWorld,J.matrix),J.matrixWorldInverse.copy(J.matrixWorld).invert()}this.updateCamera=function(J){if(n===null)return;let he=J.near,Ce=J.far;v.texture!==null&&(v.depthNear>0&&(he=v.depthNear),v.depthFar>0&&(Ce=v.depthFar)),b.near=I.near=A.near=he,b.far=I.far=A.far=Ce,(L!==b.near||D!==b.far)&&(n.updateRenderState({depthNear:b.near,depthFar:b.far}),L=b.near,D=b.far),A.layers.mask=J.layers.mask|2,I.layers.mask=J.layers.mask|4,b.layers.mask=A.layers.mask|I.layers.mask;const ue=J.parent,Ue=b.cameras;te(b,ue);for(let it=0;it<Ue.length;it++)te(Ue[it],ue);Ue.length===2?q(b,A,I):b.projectionMatrix.copy(A.projectionMatrix),ce(J,b,ue)};function ce(J,he,Ce){Ce===null?J.matrix.copy(he.matrixWorld):(J.matrix.copy(Ce.matrixWorld),J.matrix.invert(),J.matrix.multiply(he.matrixWorld)),J.matrix.decompose(J.position,J.quaternion,J.scale),J.updateMatrixWorld(!0),J.projectionMatrix.copy(he.projectionMatrix),J.projectionMatrixInverse.copy(he.projectionMatrixInverse),J.isPerspectiveCamera&&(J.fov=hs*2*Math.atan(1/J.projectionMatrix.elements[5]),J.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(u===null&&f===null))return l},this.setFoveation=function(J){l=J,u!==null&&(u.fixedFoveation=J),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=J)},this.hasDepthSensing=function(){return v.texture!==null},this.getDepthSensingMesh=function(){return v.getMesh(b)};let fe=null;function Me(J,he){if(h=he.getViewerPose(c||o),m=he,h!==null){const Ce=h.views;f!==null&&(e.setRenderTargetFramebuffer(x,f.framebuffer),e.setRenderTarget(x));let ue=!1;Ce.length!==b.cameras.length&&(b.cameras.length=0,ue=!0);for(let Le=0;Le<Ce.length;Le++){const ot=Ce[Le];let ne=null;if(f!==null)ne=f.getViewport(ot);else{const R=d.getViewSubImage(u,ot);ne=R.viewport,Le===0&&(e.setRenderTargetTextures(x,R.colorTexture,u.ignoreDepthValues?void 0:R.depthStencilTexture),e.setRenderTarget(x))}let ie=S[Le];ie===void 0&&(ie=new It,ie.layers.enable(Le),ie.viewport=new Qe,S[Le]=ie),ie.matrix.fromArray(ot.transform.matrix),ie.matrix.decompose(ie.position,ie.quaternion,ie.scale),ie.projectionMatrix.fromArray(ot.projectionMatrix),ie.projectionMatrixInverse.copy(ie.projectionMatrix).invert(),ie.viewport.set(ne.x,ne.y,ne.width,ne.height),Le===0&&(b.matrix.copy(ie.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),ue===!0&&b.cameras.push(ie)}const Ue=n.enabledFeatures;if(Ue&&Ue.includes("depth-sensing")&&n.depthUsage=="gpu-optimized"&&d){const Le=d.getDepthInformation(Ce[0]);Le&&Le.isValid&&Le.texture&&v.init(e,Le,n.renderState)}}for(let Ce=0;Ce<y.length;Ce++){const ue=_[Ce],Ue=y[Ce];ue!==null&&Ue!==void 0&&Ue.update(ue,he,c||o)}fe&&fe(J,he),he.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:he}),m=null}const lt=new Df;lt.setAnimationLoop(Me),this.setAnimationLoop=function(J){fe=J},this.dispose=function(){}}}const ts=new ri,Dw=new ze;function Nw(r,e){function t(g,p){g.matrixAutoUpdate===!0&&g.updateMatrix(),p.value.copy(g.matrix)}function i(g,p){p.color.getRGB(g.fogColor.value,Hu(r)),p.isFog?(g.fogNear.value=p.near,g.fogFar.value=p.far):p.isFogExp2&&(g.fogDensity.value=p.density)}function n(g,p,x,y,_){p.isMeshBasicMaterial||p.isMeshLambertMaterial?s(g,p):p.isMeshToonMaterial?(s(g,p),d(g,p)):p.isMeshPhongMaterial?(s(g,p),h(g,p)):p.isMeshStandardMaterial?(s(g,p),u(g,p),p.isMeshPhysicalMaterial&&f(g,p,_)):p.isMeshMatcapMaterial?(s(g,p),m(g,p)):p.isMeshDepthMaterial?s(g,p):p.isMeshDistanceMaterial?(s(g,p),v(g,p)):p.isMeshNormalMaterial?s(g,p):p.isLineBasicMaterial?(o(g,p),p.isLineDashedMaterial&&a(g,p)):p.isPointsMaterial?l(g,p,x,y):p.isSpriteMaterial?c(g,p):p.isShadowMaterial?(g.color.value.copy(p.color),g.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function s(g,p){g.opacity.value=p.opacity,p.color&&g.diffuse.value.copy(p.color),p.emissive&&g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(g.map.value=p.map,t(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,t(p.alphaMap,g.alphaMapTransform)),p.bumpMap&&(g.bumpMap.value=p.bumpMap,t(p.bumpMap,g.bumpMapTransform),g.bumpScale.value=p.bumpScale,p.side===kt&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,t(p.normalMap,g.normalMapTransform),g.normalScale.value.copy(p.normalScale),p.side===kt&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,t(p.displacementMap,g.displacementMapTransform),g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap,t(p.emissiveMap,g.emissiveMapTransform)),p.specularMap&&(g.specularMap.value=p.specularMap,t(p.specularMap,g.specularMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest);const x=e.get(p),y=x.envMap,_=x.envMapRotation;y&&(g.envMap.value=y,ts.copy(_),ts.x*=-1,ts.y*=-1,ts.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(ts.y*=-1,ts.z*=-1),g.envMapRotation.value.setFromMatrix4(Dw.makeRotationFromEuler(ts)),g.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=p.reflectivity,g.ior.value=p.ior,g.refractionRatio.value=p.refractionRatio),p.lightMap&&(g.lightMap.value=p.lightMap,g.lightMapIntensity.value=p.lightMapIntensity,t(p.lightMap,g.lightMapTransform)),p.aoMap&&(g.aoMap.value=p.aoMap,g.aoMapIntensity.value=p.aoMapIntensity,t(p.aoMap,g.aoMapTransform))}function o(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,p.map&&(g.map.value=p.map,t(p.map,g.mapTransform))}function a(g,p){g.dashSize.value=p.dashSize,g.totalSize.value=p.dashSize+p.gapSize,g.scale.value=p.scale}function l(g,p,x,y){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.size.value=p.size*x,g.scale.value=y*.5,p.map&&(g.map.value=p.map,t(p.map,g.uvTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,t(p.alphaMap,g.alphaMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function c(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.rotation.value=p.rotation,p.map&&(g.map.value=p.map,t(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,t(p.alphaMap,g.alphaMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function h(g,p){g.specular.value.copy(p.specular),g.shininess.value=Math.max(p.shininess,1e-4)}function d(g,p){p.gradientMap&&(g.gradientMap.value=p.gradientMap)}function u(g,p){g.metalness.value=p.metalness,p.metalnessMap&&(g.metalnessMap.value=p.metalnessMap,t(p.metalnessMap,g.metalnessMapTransform)),g.roughness.value=p.roughness,p.roughnessMap&&(g.roughnessMap.value=p.roughnessMap,t(p.roughnessMap,g.roughnessMapTransform)),p.envMap&&(g.envMapIntensity.value=p.envMapIntensity)}function f(g,p,x){g.ior.value=p.ior,p.sheen>0&&(g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),g.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(g.sheenColorMap.value=p.sheenColorMap,t(p.sheenColorMap,g.sheenColorMapTransform)),p.sheenRoughnessMap&&(g.sheenRoughnessMap.value=p.sheenRoughnessMap,t(p.sheenRoughnessMap,g.sheenRoughnessMapTransform))),p.clearcoat>0&&(g.clearcoat.value=p.clearcoat,g.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(g.clearcoatMap.value=p.clearcoatMap,t(p.clearcoatMap,g.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,t(p.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(g.clearcoatNormalMap.value=p.clearcoatNormalMap,t(p.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===kt&&g.clearcoatNormalScale.value.negate())),p.dispersion>0&&(g.dispersion.value=p.dispersion),p.iridescence>0&&(g.iridescence.value=p.iridescence,g.iridescenceIOR.value=p.iridescenceIOR,g.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(g.iridescenceMap.value=p.iridescenceMap,t(p.iridescenceMap,g.iridescenceMapTransform)),p.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=p.iridescenceThicknessMap,t(p.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),p.transmission>0&&(g.transmission.value=p.transmission,g.transmissionSamplerMap.value=x.texture,g.transmissionSamplerSize.value.set(x.width,x.height),p.transmissionMap&&(g.transmissionMap.value=p.transmissionMap,t(p.transmissionMap,g.transmissionMapTransform)),g.thickness.value=p.thickness,p.thicknessMap&&(g.thicknessMap.value=p.thicknessMap,t(p.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=p.attenuationDistance,g.attenuationColor.value.copy(p.attenuationColor)),p.anisotropy>0&&(g.anisotropyVector.value.set(p.anisotropy*Math.cos(p.anisotropyRotation),p.anisotropy*Math.sin(p.anisotropyRotation)),p.anisotropyMap&&(g.anisotropyMap.value=p.anisotropyMap,t(p.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=p.specularIntensity,g.specularColor.value.copy(p.specularColor),p.specularColorMap&&(g.specularColorMap.value=p.specularColorMap,t(p.specularColorMap,g.specularColorMapTransform)),p.specularIntensityMap&&(g.specularIntensityMap.value=p.specularIntensityMap,t(p.specularIntensityMap,g.specularIntensityMapTransform))}function m(g,p){p.matcap&&(g.matcap.value=p.matcap)}function v(g,p){const x=e.get(p).light;g.referencePosition.value.setFromMatrixPosition(x.matrixWorld),g.nearDistance.value=x.shadow.camera.near,g.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:n}}function Ow(r,e,t,i){let n={},s={},o=[];const a=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function l(x,y){const _=y.program;i.uniformBlockBinding(x,_)}function c(x,y){let _=n[x.id];_===void 0&&(m(x),_=h(x),n[x.id]=_,x.addEventListener("dispose",g));const C=y.program;i.updateUBOMapping(x,C);const T=e.render.frame;s[x.id]!==T&&(u(x),s[x.id]=T)}function h(x){const y=d();x.__bindingPointIndex=y;const _=r.createBuffer(),C=x.__size,T=x.usage;return r.bindBuffer(r.UNIFORM_BUFFER,_),r.bufferData(r.UNIFORM_BUFFER,C,T),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,y,_),_}function d(){for(let x=0;x<a;x++)if(o.indexOf(x)===-1)return o.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function u(x){const y=n[x.id],_=x.uniforms,C=x.__cache;r.bindBuffer(r.UNIFORM_BUFFER,y);for(let T=0,A=_.length;T<A;T++){const I=Array.isArray(_[T])?_[T]:[_[T]];for(let S=0,b=I.length;S<b;S++){const L=I[S];if(f(L,T,S,C)===!0){const D=L.__offset,F=Array.isArray(L.value)?L.value:[L.value];let B=0;for(let Y=0;Y<F.length;Y++){const H=F[Y],Q=v(H);typeof H=="number"||typeof H=="boolean"?(L.__data[0]=H,r.bufferSubData(r.UNIFORM_BUFFER,D+B,L.__data)):H.isMatrix3?(L.__data[0]=H.elements[0],L.__data[1]=H.elements[1],L.__data[2]=H.elements[2],L.__data[3]=0,L.__data[4]=H.elements[3],L.__data[5]=H.elements[4],L.__data[6]=H.elements[5],L.__data[7]=0,L.__data[8]=H.elements[6],L.__data[9]=H.elements[7],L.__data[10]=H.elements[8],L.__data[11]=0):(H.toArray(L.__data,B),B+=Q.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,D,L.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function f(x,y,_,C){const T=x.value,A=y+"_"+_;if(C[A]===void 0)return typeof T=="number"||typeof T=="boolean"?C[A]=T:C[A]=T.clone(),!0;{const I=C[A];if(typeof T=="number"||typeof T=="boolean"){if(I!==T)return C[A]=T,!0}else if(I.equals(T)===!1)return I.copy(T),!0}return!1}function m(x){const y=x.uniforms;let _=0;const C=16;for(let A=0,I=y.length;A<I;A++){const S=Array.isArray(y[A])?y[A]:[y[A]];for(let b=0,L=S.length;b<L;b++){const D=S[b],F=Array.isArray(D.value)?D.value:[D.value];for(let B=0,Y=F.length;B<Y;B++){const H=F[B],Q=v(H),q=_%C,te=q%Q.boundary,ce=q+te;_+=te,ce!==0&&C-ce<Q.storage&&(_+=C-ce),D.__data=new Float32Array(Q.storage/Float32Array.BYTES_PER_ELEMENT),D.__offset=_,_+=Q.storage}}}const T=_%C;return T>0&&(_+=C-T),x.__size=_,x.__cache={},this}function v(x){const y={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(y.boundary=4,y.storage=4):x.isVector2?(y.boundary=8,y.storage=8):x.isVector3||x.isColor?(y.boundary=16,y.storage=12):x.isVector4?(y.boundary=16,y.storage=16):x.isMatrix3?(y.boundary=48,y.storage=48):x.isMatrix4?(y.boundary=64,y.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),y}function g(x){const y=x.target;y.removeEventListener("dispose",g);const _=o.indexOf(y.__bindingPointIndex);o.splice(_,1),r.deleteBuffer(n[y.id]),delete n[y.id],delete s[y.id]}function p(){for(const x in n)r.deleteBuffer(n[x]);o=[],n={},s={}}return{bind:l,update:c,dispose:p}}class cp{constructor(e={}){const{canvas:t=Mu(),context:i=null,depth:n=!0,stencil:s=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:d=!1,reverseDepthBuffer:u=!1}=e;this.isWebGLRenderer=!0;let f;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=i.getContextAttributes().alpha}else f=o;const m=new Uint32Array(4),v=new Int32Array(4);let g=null,p=null;const x=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Zt,this.toneMapping=Fi,this.toneMappingExposure=1;const _=this;let C=!1,T=0,A=0,I=null,S=-1,b=null;const L=new Qe,D=new Qe;let F=null;const B=new le(0);let Y=0,H=t.width,Q=t.height,q=1,te=null,ce=null;const fe=new Qe(0,0,H,Q),Me=new Qe(0,0,H,Q);let lt=!1;const J=new wr;let he=!1,Ce=!1;this.transmissionResolutionScale=1;const ue=new ze,Ue=new ze,it=new P,Le=new Qe,ot={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ne=!1;function ie(){return I===null?q:1}let R=i;function Ie(M,O){return t.getContext(M,O)}try{const M={alpha:!0,depth:n,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:d};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${jr}`),t.addEventListener("webglcontextlost",K,!1),t.addEventListener("webglcontextrestored",_e,!1),t.addEventListener("webglcontextcreationerror",xe,!1),R===null){const O="webgl2";if(R=Ie(O,M),R===null)throw Ie(O)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(M){throw console.error("THREE.WebGLRenderer: "+M.message),M}let se,we,ae,Be,ye,E,w,V,Z,ee,j,Pe,me,be,je,oe,Te,Fe,ke,Ae,Ke,Ze,mt,U;function ge(){se=new $_(R),se.init(),Ze=new lp(R,se),we=new H_(R,se,e,Ze),ae=new Cw(R,se),we.reverseDepthBuffer&&u&&ae.buffers.depth.setReversed(!0),Be=new J_(R),ye=new mw,E=new Rw(R,se,ae,ye,we,Ze,Be),w=new W_(_),V=new Y_(_),Z=new zy(R),mt=new k_(R,Z),ee=new Z_(R,Z,Be,mt),j=new Q_(R,ee,Z,Be),ke=new K_(R,we,E),oe=new G_(ye),Pe=new pw(_,w,V,se,we,mt,oe),me=new Nw(_,ye),be=new vw,je=new Sw(se),Fe=new B_(_,w,V,ae,j,f,l),Te=new Aw(_,j,we),U=new Ow(R,Be,we,ae),Ae=new V_(R,se,Be),Ke=new j_(R,se,Be),Be.programs=Pe.programs,_.capabilities=we,_.extensions=se,_.properties=ye,_.renderLists=be,_.shadowMap=Te,_.state=ae,_.info=Be}ge();const $=new Uw(_,R);this.xr=$,this.getContext=function(){return R},this.getContextAttributes=function(){return R.getContextAttributes()},this.forceContextLoss=function(){const M=se.get("WEBGL_lose_context");M&&M.loseContext()},this.forceContextRestore=function(){const M=se.get("WEBGL_lose_context");M&&M.restoreContext()},this.getPixelRatio=function(){return q},this.setPixelRatio=function(M){M!==void 0&&(q=M,this.setSize(H,Q,!1))},this.getSize=function(M){return M.set(H,Q)},this.setSize=function(M,O,W=!0){if($.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}H=M,Q=O,t.width=Math.floor(M*q),t.height=Math.floor(O*q),W===!0&&(t.style.width=M+"px",t.style.height=O+"px"),this.setViewport(0,0,M,O)},this.getDrawingBufferSize=function(M){return M.set(H*q,Q*q).floor()},this.setDrawingBufferSize=function(M,O,W){H=M,Q=O,q=W,t.width=Math.floor(M*W),t.height=Math.floor(O*W),this.setViewport(0,0,M,O)},this.getCurrentViewport=function(M){return M.copy(L)},this.getViewport=function(M){return M.copy(fe)},this.setViewport=function(M,O,W,X){M.isVector4?fe.set(M.x,M.y,M.z,M.w):fe.set(M,O,W,X),ae.viewport(L.copy(fe).multiplyScalar(q).round())},this.getScissor=function(M){return M.copy(Me)},this.setScissor=function(M,O,W,X){M.isVector4?Me.set(M.x,M.y,M.z,M.w):Me.set(M,O,W,X),ae.scissor(D.copy(Me).multiplyScalar(q).round())},this.getScissorTest=function(){return lt},this.setScissorTest=function(M){ae.setScissorTest(lt=M)},this.setOpaqueSort=function(M){te=M},this.setTransparentSort=function(M){ce=M},this.getClearColor=function(M){return M.copy(Fe.getClearColor())},this.setClearColor=function(){Fe.setClearColor.apply(Fe,arguments)},this.getClearAlpha=function(){return Fe.getClearAlpha()},this.setClearAlpha=function(){Fe.setClearAlpha.apply(Fe,arguments)},this.clear=function(M=!0,O=!0,W=!0){let X=0;if(M){let z=!1;if(I!==null){const re=I.texture.format;z=re===fo||re===uo||re===Js}if(z){const re=I.texture.type,ve=re===Ri||re===Bi||re===ls||re===Tn||re===lo||re===co,Se=Fe.getClearColor(),Ee=Fe.getClearAlpha(),Ve=Se.r,Ge=Se.g,De=Se.b;ve?(m[0]=Ve,m[1]=Ge,m[2]=De,m[3]=Ee,R.clearBufferuiv(R.COLOR,0,m)):(v[0]=Ve,v[1]=Ge,v[2]=De,v[3]=Ee,R.clearBufferiv(R.COLOR,0,v))}else X|=R.COLOR_BUFFER_BIT}O&&(X|=R.DEPTH_BUFFER_BIT),W&&(X|=R.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),R.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",K,!1),t.removeEventListener("webglcontextrestored",_e,!1),t.removeEventListener("webglcontextcreationerror",xe,!1),Fe.dispose(),be.dispose(),je.dispose(),ye.dispose(),w.dispose(),V.dispose(),j.dispose(),mt.dispose(),U.dispose(),Pe.dispose(),$.dispose(),$.removeEventListener("sessionstart",yp),$.removeEventListener("sessionend",xp),is.stop()};function K(M){M.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),C=!0}function _e(){console.log("THREE.WebGLRenderer: Context Restored."),C=!1;const M=Be.autoReset,O=Te.enabled,W=Te.autoUpdate,X=Te.needsUpdate,z=Te.type;ge(),Be.autoReset=M,Te.enabled=O,Te.autoUpdate=W,Te.needsUpdate=X,Te.type=z}function xe(M){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",M.statusMessage)}function $e(M){const O=M.target;O.removeEventListener("dispose",$e),wt(O)}function wt(M){Bt(M),ye.remove(M)}function Bt(M){const O=ye.get(M).programs;O!==void 0&&(O.forEach(function(W){Pe.releaseProgram(W)}),M.isShaderMaterial&&Pe.releaseShaderCache(M))}this.renderBufferDirect=function(M,O,W,X,z,re){O===null&&(O=ot);const ve=z.isMesh&&z.matrixWorld.determinant()<0,Se=kM(M,O,W,X,z);ae.setMaterial(X,ve);let Ee=W.index,Ve=1;if(X.wireframe===!0){if(Ee=ee.getWireframeAttribute(W),Ee===void 0)return;Ve=2}const Ge=W.drawRange,De=W.attributes.position;let nt=Ge.start*Ve,ct=(Ge.start+Ge.count)*Ve;re!==null&&(nt=Math.max(nt,re.start*Ve),ct=Math.min(ct,(re.start+re.count)*Ve)),Ee!==null?(nt=Math.max(nt,0),ct=Math.min(ct,Ee.count)):De!=null&&(nt=Math.max(nt,0),ct=Math.min(ct,De.count));const Et=ct-nt;if(Et<0||Et===1/0)return;mt.setup(z,X,Se,W,Ee);let St,st=Ae;if(Ee!==null&&(St=Z.get(Ee),st=Ke,st.setIndex(St)),z.isMesh)X.wireframe===!0?(ae.setLineWidth(X.wireframeLinewidth*ie()),st.setMode(R.LINES)):st.setMode(R.TRIANGLES);else if(z.isLine){let Ne=X.linewidth;Ne===void 0&&(Ne=1),ae.setLineWidth(Ne*ie()),z.isLineSegments?st.setMode(R.LINES):z.isLineLoop?st.setMode(R.LINE_LOOP):st.setMode(R.LINE_STRIP)}else z.isPoints?st.setMode(R.POINTS):z.isSprite&&st.setMode(R.TRIANGLES);if(z.isBatchedMesh)if(z._multiDrawInstances!==null)st.renderMultiDrawInstances(z._multiDrawStarts,z._multiDrawCounts,z._multiDrawCount,z._multiDrawInstances);else if(se.get("WEBGL_multi_draw"))st.renderMultiDraw(z._multiDrawStarts,z._multiDrawCounts,z._multiDrawCount);else{const Ne=z._multiDrawStarts,Lt=z._multiDrawCounts,ht=z._multiDrawCount,wi=Ee?Z.get(Ee).bytesPerElement:1,Bs=ye.get(X).currentProgram.getUniforms();for(let ai=0;ai<ht;ai++)Bs.setValue(R,"_gl_DrawID",ai),st.render(Ne[ai]/wi,Lt[ai])}else if(z.isInstancedMesh)st.renderInstances(nt,Et,z.count);else if(W.isInstancedBufferGeometry){const Ne=W._maxInstanceCount!==void 0?W._maxInstanceCount:1/0,Lt=Math.min(W.instanceCount,Ne);st.renderInstances(nt,Et,Lt)}else st.render(nt,Et)};function dt(M,O,W){M.transparent===!0&&M.side===Ei&&M.forceSinglePass===!1?(M.side=kt,M.needsUpdate=!0,pl(M,O,W),M.side=Ni,M.needsUpdate=!0,pl(M,O,W),M.side=Ei):pl(M,O,W)}this.compile=function(M,O,W=null){W===null&&(W=M),p=je.get(W),p.init(O),y.push(p),W.traverseVisible(function(z){z.isLight&&z.layers.test(O.layers)&&(p.pushLight(z),z.castShadow&&p.pushShadow(z))}),M!==W&&M.traverseVisible(function(z){z.isLight&&z.layers.test(O.layers)&&(p.pushLight(z),z.castShadow&&p.pushShadow(z))}),p.setupLights();const X=new Set;return M.traverse(function(z){if(!(z.isMesh||z.isPoints||z.isLine||z.isSprite))return;const re=z.material;if(re)if(Array.isArray(re))for(let ve=0;ve<re.length;ve++){const Se=re[ve];dt(Se,W,z),X.add(Se)}else dt(re,W,z),X.add(re)}),y.pop(),p=null,X},this.compileAsync=function(M,O,W=null){const X=this.compile(M,O,W);return new Promise(z=>{function re(){if(X.forEach(function(ve){ye.get(ve).currentProgram.isReady()&&X.delete(ve)}),X.size===0){z(M);return}setTimeout(re,10)}se.get("KHR_parallel_shader_compile")!==null?re():setTimeout(re,10)})};let bi=null;function Ji(M){bi&&bi(M)}function yp(){is.stop()}function xp(){is.start()}const is=new Df;is.setAnimationLoop(Ji),typeof self<"u"&&is.setContext(self),this.setAnimationLoop=function(M){bi=M,$.setAnimationLoop(M),M===null?is.stop():is.start()},$.addEventListener("sessionstart",yp),$.addEventListener("sessionend",xp),this.render=function(M,O){if(O!==void 0&&O.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(C===!0)return;if(M.matrixWorldAutoUpdate===!0&&M.updateMatrixWorld(),O.parent===null&&O.matrixWorldAutoUpdate===!0&&O.updateMatrixWorld(),$.enabled===!0&&$.isPresenting===!0&&($.cameraAutoUpdate===!0&&$.updateCamera(O),O=$.getCamera()),M.isScene===!0&&M.onBeforeRender(_,M,O,I),p=je.get(M,y.length),p.init(O),y.push(p),Ue.multiplyMatrices(O.projectionMatrix,O.matrixWorldInverse),J.setFromProjectionMatrix(Ue),Ce=this.localClippingEnabled,he=oe.init(this.clippingPlanes,Ce),g=be.get(M,x.length),g.init(),x.push(g),$.enabled===!0&&$.isPresenting===!0){const re=_.xr.getDepthSensingMesh();re!==null&&gh(re,O,-1/0,_.sortObjects)}gh(M,O,0,_.sortObjects),g.finish(),_.sortObjects===!0&&g.sort(te,ce),ne=$.enabled===!1||$.isPresenting===!1||$.hasDepthSensing()===!1,ne&&Fe.addToRenderList(g,M),this.info.render.frame++,he===!0&&oe.beginShadows();const W=p.state.shadowsArray;Te.render(W,M,O),he===!0&&oe.endShadows(),this.info.autoReset===!0&&this.info.reset();const X=g.opaque,z=g.transmissive;if(p.setupLights(),O.isArrayCamera){const re=O.cameras;if(z.length>0)for(let ve=0,Se=re.length;ve<Se;ve++){const Ee=re[ve];bp(X,z,M,Ee)}ne&&Fe.render(M);for(let ve=0,Se=re.length;ve<Se;ve++){const Ee=re[ve];_p(g,M,Ee,Ee.viewport)}}else z.length>0&&bp(X,z,M,O),ne&&Fe.render(M),_p(g,M,O);I!==null&&A===0&&(E.updateMultisampleRenderTarget(I),E.updateRenderTargetMipmap(I)),M.isScene===!0&&M.onAfterRender(_,M,O),mt.resetDefaultState(),S=-1,b=null,y.pop(),y.length>0?(p=y[y.length-1],he===!0&&oe.setGlobalState(_.clippingPlanes,p.state.camera)):p=null,x.pop(),x.length>0?g=x[x.length-1]:g=null};function gh(M,O,W,X){if(M.visible===!1)return;if(M.layers.test(O.layers)){if(M.isGroup)W=M.renderOrder;else if(M.isLOD)M.autoUpdate===!0&&M.update(O);else if(M.isLight)p.pushLight(M),M.castShadow&&p.pushShadow(M);else if(M.isSprite){if(!M.frustumCulled||J.intersectsSprite(M)){X&&Le.setFromMatrixPosition(M.matrixWorld).applyMatrix4(Ue);const ve=j.update(M),Se=M.material;Se.visible&&g.push(M,ve,Se,W,Le.z,null)}}else if((M.isMesh||M.isLine||M.isPoints)&&(!M.frustumCulled||J.intersectsObject(M))){const ve=j.update(M),Se=M.material;if(X&&(M.boundingSphere!==void 0?(M.boundingSphere===null&&M.computeBoundingSphere(),Le.copy(M.boundingSphere.center)):(ve.boundingSphere===null&&ve.computeBoundingSphere(),Le.copy(ve.boundingSphere.center)),Le.applyMatrix4(M.matrixWorld).applyMatrix4(Ue)),Array.isArray(Se)){const Ee=ve.groups;for(let Ve=0,Ge=Ee.length;Ve<Ge;Ve++){const De=Ee[Ve],nt=Se[De.materialIndex];nt&&nt.visible&&g.push(M,ve,nt,W,Le.z,De)}}else Se.visible&&g.push(M,ve,Se,W,Le.z,null)}}const re=M.children;for(let ve=0,Se=re.length;ve<Se;ve++)gh(re[ve],O,W,X)}function _p(M,O,W,X){const z=M.opaque,re=M.transmissive,ve=M.transparent;p.setupLightsView(W),he===!0&&oe.setGlobalState(_.clippingPlanes,W),X&&ae.viewport(L.copy(X)),z.length>0&&fl(z,O,W),re.length>0&&fl(re,O,W),ve.length>0&&fl(ve,O,W),ae.buffers.depth.setTest(!0),ae.buffers.depth.setMask(!0),ae.buffers.color.setMask(!0),ae.setPolygonOffset(!1)}function bp(M,O,W,X){if((W.isScene===!0?W.overrideMaterial:null)!==null)return;p.state.transmissionRenderTarget[X.id]===void 0&&(p.state.transmissionRenderTarget[X.id]=new jt(1,1,{generateMipmaps:!0,type:se.has("EXT_color_buffer_half_float")||se.has("EXT_color_buffer_float")?cs:Ri,minFilter:Ci,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Je.workingColorSpace}));const re=p.state.transmissionRenderTarget[X.id],ve=X.viewport||L;re.setSize(ve.z*_.transmissionResolutionScale,ve.w*_.transmissionResolutionScale);const Se=_.getRenderTarget();_.setRenderTarget(re),_.getClearColor(B),Y=_.getClearAlpha(),Y<1&&_.setClearColor(16777215,.5),_.clear(),ne&&Fe.render(W);const Ee=_.toneMapping;_.toneMapping=Fi;const Ve=X.viewport;if(X.viewport!==void 0&&(X.viewport=void 0),p.setupLightsView(X),he===!0&&oe.setGlobalState(_.clippingPlanes,X),fl(M,W,X),E.updateMultisampleRenderTarget(re),E.updateRenderTargetMipmap(re),se.has("WEBGL_multisampled_render_to_texture")===!1){let Ge=!1;for(let De=0,nt=O.length;De<nt;De++){const ct=O[De],Et=ct.object,St=ct.geometry,st=ct.material,Ne=ct.group;if(st.side===Ei&&Et.layers.test(X.layers)){const Lt=st.side;st.side=kt,st.needsUpdate=!0,wp(Et,W,X,St,st,Ne),st.side=Lt,st.needsUpdate=!0,Ge=!0}}Ge===!0&&(E.updateMultisampleRenderTarget(re),E.updateRenderTargetMipmap(re))}_.setRenderTarget(Se),_.setClearColor(B,Y),Ve!==void 0&&(X.viewport=Ve),_.toneMapping=Ee}function fl(M,O,W){const X=O.isScene===!0?O.overrideMaterial:null;for(let z=0,re=M.length;z<re;z++){const ve=M[z],Se=ve.object,Ee=ve.geometry,Ve=X===null?ve.material:X,Ge=ve.group;Se.layers.test(W.layers)&&wp(Se,O,W,Ee,Ve,Ge)}}function wp(M,O,W,X,z,re){M.onBeforeRender(_,O,W,X,z,re),M.modelViewMatrix.multiplyMatrices(W.matrixWorldInverse,M.matrixWorld),M.normalMatrix.getNormalMatrix(M.modelViewMatrix),z.onBeforeRender(_,O,W,X,M,re),z.transparent===!0&&z.side===Ei&&z.forceSinglePass===!1?(z.side=kt,z.needsUpdate=!0,_.renderBufferDirect(W,O,X,z,M,re),z.side=Ni,z.needsUpdate=!0,_.renderBufferDirect(W,O,X,z,M,re),z.side=Ei):_.renderBufferDirect(W,O,X,z,M,re),M.onAfterRender(_,O,W,X,z,re)}function pl(M,O,W){O.isScene!==!0&&(O=ot);const X=ye.get(M),z=p.state.lights,re=p.state.shadowsArray,ve=z.state.version,Se=Pe.getParameters(M,z.state,re,O,W),Ee=Pe.getProgramCacheKey(Se);let Ve=X.programs;X.environment=M.isMeshStandardMaterial?O.environment:null,X.fog=O.fog,X.envMap=(M.isMeshStandardMaterial?V:w).get(M.envMap||X.environment),X.envMapRotation=X.environment!==null&&M.envMap===null?O.environmentRotation:M.envMapRotation,Ve===void 0&&(M.addEventListener("dispose",$e),Ve=new Map,X.programs=Ve);let Ge=Ve.get(Ee);if(Ge!==void 0){if(X.currentProgram===Ge&&X.lightsStateVersion===ve)return Mp(M,Se),Ge}else Se.uniforms=Pe.getUniforms(M),M.onBeforeCompile(Se,_),Ge=Pe.acquireProgram(Se,Ee),Ve.set(Ee,Ge),X.uniforms=Se.uniforms;const De=X.uniforms;return(!M.isShaderMaterial&&!M.isRawShaderMaterial||M.clipping===!0)&&(De.clippingPlanes=oe.uniform),Mp(M,Se),X.needsLights=HM(M),X.lightsStateVersion=ve,X.needsLights&&(De.ambientLightColor.value=z.state.ambient,De.lightProbe.value=z.state.probe,De.directionalLights.value=z.state.directional,De.directionalLightShadows.value=z.state.directionalShadow,De.spotLights.value=z.state.spot,De.spotLightShadows.value=z.state.spotShadow,De.rectAreaLights.value=z.state.rectArea,De.ltc_1.value=z.state.rectAreaLTC1,De.ltc_2.value=z.state.rectAreaLTC2,De.pointLights.value=z.state.point,De.pointLightShadows.value=z.state.pointShadow,De.hemisphereLights.value=z.state.hemi,De.directionalShadowMap.value=z.state.directionalShadowMap,De.directionalShadowMatrix.value=z.state.directionalShadowMatrix,De.spotShadowMap.value=z.state.spotShadowMap,De.spotLightMatrix.value=z.state.spotLightMatrix,De.spotLightMap.value=z.state.spotLightMap,De.pointShadowMap.value=z.state.pointShadowMap,De.pointShadowMatrix.value=z.state.pointShadowMatrix),X.currentProgram=Ge,X.uniformsList=null,Ge}function Sp(M){if(M.uniformsList===null){const O=M.currentProgram.getUniforms();M.uniformsList=cl.seqWithValue(O.seq,M.uniforms)}return M.uniformsList}function Mp(M,O){const W=ye.get(M);W.outputColorSpace=O.outputColorSpace,W.batching=O.batching,W.batchingColor=O.batchingColor,W.instancing=O.instancing,W.instancingColor=O.instancingColor,W.instancingMorph=O.instancingMorph,W.skinning=O.skinning,W.morphTargets=O.morphTargets,W.morphNormals=O.morphNormals,W.morphColors=O.morphColors,W.morphTargetsCount=O.morphTargetsCount,W.numClippingPlanes=O.numClippingPlanes,W.numIntersection=O.numClipIntersection,W.vertexAlphas=O.vertexAlphas,W.vertexTangents=O.vertexTangents,W.toneMapping=O.toneMapping}function kM(M,O,W,X,z){O.isScene!==!0&&(O=ot),E.resetTextureUnits();const re=O.fog,ve=X.isMeshStandardMaterial?O.environment:null,Se=I===null?_.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:an,Ee=(X.isMeshStandardMaterial?V:w).get(X.envMap||ve),Ve=X.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,Ge=!!W.attributes.tangent&&(!!X.normalMap||X.anisotropy>0),De=!!W.morphAttributes.position,nt=!!W.morphAttributes.normal,ct=!!W.morphAttributes.color;let Et=Fi;X.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(Et=_.toneMapping);const St=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,st=St!==void 0?St.length:0,Ne=ye.get(X),Lt=p.state.lights;if(he===!0&&(Ce===!0||M!==b)){const $t=M===b&&X.id===S;oe.setState(X,M,$t)}let ht=!1;X.version===Ne.__version?(Ne.needsLights&&Ne.lightsStateVersion!==Lt.state.version||Ne.outputColorSpace!==Se||z.isBatchedMesh&&Ne.batching===!1||!z.isBatchedMesh&&Ne.batching===!0||z.isBatchedMesh&&Ne.batchingColor===!0&&z.colorTexture===null||z.isBatchedMesh&&Ne.batchingColor===!1&&z.colorTexture!==null||z.isInstancedMesh&&Ne.instancing===!1||!z.isInstancedMesh&&Ne.instancing===!0||z.isSkinnedMesh&&Ne.skinning===!1||!z.isSkinnedMesh&&Ne.skinning===!0||z.isInstancedMesh&&Ne.instancingColor===!0&&z.instanceColor===null||z.isInstancedMesh&&Ne.instancingColor===!1&&z.instanceColor!==null||z.isInstancedMesh&&Ne.instancingMorph===!0&&z.morphTexture===null||z.isInstancedMesh&&Ne.instancingMorph===!1&&z.morphTexture!==null||Ne.envMap!==Ee||X.fog===!0&&Ne.fog!==re||Ne.numClippingPlanes!==void 0&&(Ne.numClippingPlanes!==oe.numPlanes||Ne.numIntersection!==oe.numIntersection)||Ne.vertexAlphas!==Ve||Ne.vertexTangents!==Ge||Ne.morphTargets!==De||Ne.morphNormals!==nt||Ne.morphColors!==ct||Ne.toneMapping!==Et||Ne.morphTargetsCount!==st)&&(ht=!0):(ht=!0,Ne.__version=X.version);let wi=Ne.currentProgram;ht===!0&&(wi=pl(X,O,z));let Bs=!1,ai=!1,qr=!1;const gt=wi.getUniforms(),hi=Ne.uniforms;if(ae.useProgram(wi.program)&&(Bs=!0,ai=!0,qr=!0),X.id!==S&&(S=X.id,ai=!0),Bs||b!==M){ae.buffers.depth.getReversed()?(ue.copy(M.projectionMatrix),rv(ue),ov(ue),gt.setValue(R,"projectionMatrix",ue)):gt.setValue(R,"projectionMatrix",M.projectionMatrix),gt.setValue(R,"viewMatrix",M.matrixWorldInverse);const ii=gt.map.cameraPosition;ii!==void 0&&ii.setValue(R,it.setFromMatrixPosition(M.matrixWorld)),we.logarithmicDepthBuffer&&gt.setValue(R,"logDepthBufFC",2/(Math.log(M.far+1)/Math.LN2)),(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial)&&gt.setValue(R,"isOrthographic",M.isOrthographicCamera===!0),b!==M&&(b=M,ai=!0,qr=!0)}if(z.isSkinnedMesh){gt.setOptional(R,z,"bindMatrix"),gt.setOptional(R,z,"bindMatrixInverse");const $t=z.skeleton;$t&&($t.boneTexture===null&&$t.computeBoneTexture(),gt.setValue(R,"boneTexture",$t.boneTexture,E))}z.isBatchedMesh&&(gt.setOptional(R,z,"batchingTexture"),gt.setValue(R,"batchingTexture",z._matricesTexture,E),gt.setOptional(R,z,"batchingIdTexture"),gt.setValue(R,"batchingIdTexture",z._indirectTexture,E),gt.setOptional(R,z,"batchingColorTexture"),z._colorsTexture!==null&&gt.setValue(R,"batchingColorTexture",z._colorsTexture,E));const ui=W.morphAttributes;if((ui.position!==void 0||ui.normal!==void 0||ui.color!==void 0)&&ke.update(z,W,wi),(ai||Ne.receiveShadow!==z.receiveShadow)&&(Ne.receiveShadow=z.receiveShadow,gt.setValue(R,"receiveShadow",z.receiveShadow)),X.isMeshGouraudMaterial&&X.envMap!==null&&(hi.envMap.value=Ee,hi.flipEnvMap.value=Ee.isCubeTexture&&Ee.isRenderTargetTexture===!1?-1:1),X.isMeshStandardMaterial&&X.envMap===null&&O.environment!==null&&(hi.envMapIntensity.value=O.environmentIntensity),ai&&(gt.setValue(R,"toneMappingExposure",_.toneMappingExposure),Ne.needsLights&&VM(hi,qr),re&&X.fog===!0&&me.refreshFogUniforms(hi,re),me.refreshMaterialUniforms(hi,X,q,Q,p.state.transmissionRenderTarget[M.id]),cl.upload(R,Sp(Ne),hi,E)),X.isShaderMaterial&&X.uniformsNeedUpdate===!0&&(cl.upload(R,Sp(Ne),hi,E),X.uniformsNeedUpdate=!1),X.isSpriteMaterial&&gt.setValue(R,"center",z.center),gt.setValue(R,"modelViewMatrix",z.modelViewMatrix),gt.setValue(R,"normalMatrix",z.normalMatrix),gt.setValue(R,"modelMatrix",z.matrixWorld),X.isShaderMaterial||X.isRawShaderMaterial){const $t=X.uniformsGroups;for(let ii=0,vh=$t.length;ii<vh;ii++){const ns=$t[ii];U.update(ns,wi),U.bind(ns,wi)}}return wi}function VM(M,O){M.ambientLightColor.needsUpdate=O,M.lightProbe.needsUpdate=O,M.directionalLights.needsUpdate=O,M.directionalLightShadows.needsUpdate=O,M.pointLights.needsUpdate=O,M.pointLightShadows.needsUpdate=O,M.spotLights.needsUpdate=O,M.spotLightShadows.needsUpdate=O,M.rectAreaLights.needsUpdate=O,M.hemisphereLights.needsUpdate=O}function HM(M){return M.isMeshLambertMaterial||M.isMeshToonMaterial||M.isMeshPhongMaterial||M.isMeshStandardMaterial||M.isShadowMaterial||M.isShaderMaterial&&M.lights===!0}this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return A},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(M,O,W){ye.get(M.texture).__webglTexture=O,ye.get(M.depthTexture).__webglTexture=W;const X=ye.get(M);X.__hasExternalTextures=!0,X.__autoAllocateDepthBuffer=W===void 0,X.__autoAllocateDepthBuffer||se.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),X.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(M,O){const W=ye.get(M);W.__webglFramebuffer=O,W.__useDefaultFramebuffer=O===void 0};const GM=R.createFramebuffer();this.setRenderTarget=function(M,O=0,W=0){I=M,T=O,A=W;let X=!0,z=null,re=!1,ve=!1;if(M){const Ee=ye.get(M);if(Ee.__useDefaultFramebuffer!==void 0)ae.bindFramebuffer(R.FRAMEBUFFER,null),X=!1;else if(Ee.__webglFramebuffer===void 0)E.setupRenderTarget(M);else if(Ee.__hasExternalTextures)E.rebindTextures(M,ye.get(M.texture).__webglTexture,ye.get(M.depthTexture).__webglTexture);else if(M.depthBuffer){const De=M.depthTexture;if(Ee.__boundDepthTexture!==De){if(De!==null&&ye.has(De)&&(M.width!==De.image.width||M.height!==De.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");E.setupDepthRenderbuffer(M)}}const Ve=M.texture;(Ve.isData3DTexture||Ve.isDataArrayTexture||Ve.isCompressedArrayTexture)&&(ve=!0);const Ge=ye.get(M).__webglFramebuffer;M.isWebGLCubeRenderTarget?(Array.isArray(Ge[O])?z=Ge[O][W]:z=Ge[O],re=!0):M.samples>0&&E.useMultisampledRTT(M)===!1?z=ye.get(M).__webglMultisampledFramebuffer:Array.isArray(Ge)?z=Ge[W]:z=Ge,L.copy(M.viewport),D.copy(M.scissor),F=M.scissorTest}else L.copy(fe).multiplyScalar(q).floor(),D.copy(Me).multiplyScalar(q).floor(),F=lt;if(W!==0&&(z=GM),ae.bindFramebuffer(R.FRAMEBUFFER,z)&&X&&ae.drawBuffers(M,z),ae.viewport(L),ae.scissor(D),ae.setScissorTest(F),re){const Ee=ye.get(M.texture);R.framebufferTexture2D(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_CUBE_MAP_POSITIVE_X+O,Ee.__webglTexture,W)}else if(ve){const Ee=ye.get(M.texture),Ve=O;R.framebufferTextureLayer(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,Ee.__webglTexture,W,Ve)}else if(M!==null&&W!==0){const Ee=ye.get(M.texture);R.framebufferTexture2D(R.FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_2D,Ee.__webglTexture,W)}S=-1},this.readRenderTargetPixels=function(M,O,W,X,z,re,ve){if(!(M&&M.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Se=ye.get(M).__webglFramebuffer;if(M.isWebGLCubeRenderTarget&&ve!==void 0&&(Se=Se[ve]),Se){ae.bindFramebuffer(R.FRAMEBUFFER,Se);try{const Ee=M.texture,Ve=Ee.format,Ge=Ee.type;if(!we.textureFormatReadable(Ve)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!we.textureTypeReadable(Ge)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}O>=0&&O<=M.width-X&&W>=0&&W<=M.height-z&&R.readPixels(O,W,X,z,Ze.convert(Ve),Ze.convert(Ge),re)}finally{const Ee=I!==null?ye.get(I).__webglFramebuffer:null;ae.bindFramebuffer(R.FRAMEBUFFER,Ee)}}},this.readRenderTargetPixelsAsync=async function(M,O,W,X,z,re,ve){if(!(M&&M.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Se=ye.get(M).__webglFramebuffer;if(M.isWebGLCubeRenderTarget&&ve!==void 0&&(Se=Se[ve]),Se){const Ee=M.texture,Ve=Ee.format,Ge=Ee.type;if(!we.textureFormatReadable(Ve))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!we.textureTypeReadable(Ge))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(O>=0&&O<=M.width-X&&W>=0&&W<=M.height-z){ae.bindFramebuffer(R.FRAMEBUFFER,Se);const De=R.createBuffer();R.bindBuffer(R.PIXEL_PACK_BUFFER,De),R.bufferData(R.PIXEL_PACK_BUFFER,re.byteLength,R.STREAM_READ),R.readPixels(O,W,X,z,Ze.convert(Ve),Ze.convert(Ge),0);const nt=I!==null?ye.get(I).__webglFramebuffer:null;ae.bindFramebuffer(R.FRAMEBUFFER,nt);const ct=R.fenceSync(R.SYNC_GPU_COMMANDS_COMPLETE,0);return R.flush(),await sv(R,ct,4),R.bindBuffer(R.PIXEL_PACK_BUFFER,De),R.getBufferSubData(R.PIXEL_PACK_BUFFER,0,re),R.deleteBuffer(De),R.deleteSync(ct),re}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(M,O=null,W=0){M.isTexture!==!0&&(ds("WebGLRenderer: copyFramebufferToTexture function signature has changed."),O=arguments[0]||null,M=arguments[1]);const X=Math.pow(2,-W),z=Math.floor(M.image.width*X),re=Math.floor(M.image.height*X),ve=O!==null?O.x:0,Se=O!==null?O.y:0;E.setTexture2D(M,0),R.copyTexSubImage2D(R.TEXTURE_2D,W,0,0,ve,Se,z,re),ae.unbindTexture()};const WM=R.createFramebuffer(),XM=R.createFramebuffer();this.copyTextureToTexture=function(M,O,W=null,X=null,z=0,re=null){M.isTexture!==!0&&(ds("WebGLRenderer: copyTextureToTexture function signature has changed."),X=arguments[0]||null,M=arguments[1],O=arguments[2],re=arguments[3]||0,W=null),re===null&&(z!==0?(ds("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),re=z,z=0):re=0);let ve,Se,Ee,Ve,Ge,De,nt,ct,Et;const St=M.isCompressedTexture?M.mipmaps[re]:M.image;if(W!==null)ve=W.max.x-W.min.x,Se=W.max.y-W.min.y,Ee=W.isBox3?W.max.z-W.min.z:1,Ve=W.min.x,Ge=W.min.y,De=W.isBox3?W.min.z:0;else{const ui=Math.pow(2,-z);ve=Math.floor(St.width*ui),Se=Math.floor(St.height*ui),M.isDataArrayTexture?Ee=St.depth:M.isData3DTexture?Ee=Math.floor(St.depth*ui):Ee=1,Ve=0,Ge=0,De=0}X!==null?(nt=X.x,ct=X.y,Et=X.z):(nt=0,ct=0,Et=0);const st=Ze.convert(O.format),Ne=Ze.convert(O.type);let Lt;O.isData3DTexture?(E.setTexture3D(O,0),Lt=R.TEXTURE_3D):O.isDataArrayTexture||O.isCompressedArrayTexture?(E.setTexture2DArray(O,0),Lt=R.TEXTURE_2D_ARRAY):(E.setTexture2D(O,0),Lt=R.TEXTURE_2D),R.pixelStorei(R.UNPACK_FLIP_Y_WEBGL,O.flipY),R.pixelStorei(R.UNPACK_PREMULTIPLY_ALPHA_WEBGL,O.premultiplyAlpha),R.pixelStorei(R.UNPACK_ALIGNMENT,O.unpackAlignment);const ht=R.getParameter(R.UNPACK_ROW_LENGTH),wi=R.getParameter(R.UNPACK_IMAGE_HEIGHT),Bs=R.getParameter(R.UNPACK_SKIP_PIXELS),ai=R.getParameter(R.UNPACK_SKIP_ROWS),qr=R.getParameter(R.UNPACK_SKIP_IMAGES);R.pixelStorei(R.UNPACK_ROW_LENGTH,St.width),R.pixelStorei(R.UNPACK_IMAGE_HEIGHT,St.height),R.pixelStorei(R.UNPACK_SKIP_PIXELS,Ve),R.pixelStorei(R.UNPACK_SKIP_ROWS,Ge),R.pixelStorei(R.UNPACK_SKIP_IMAGES,De);const gt=M.isDataArrayTexture||M.isData3DTexture,hi=O.isDataArrayTexture||O.isData3DTexture;if(M.isDepthTexture){const ui=ye.get(M),$t=ye.get(O),ii=ye.get(ui.__renderTarget),vh=ye.get($t.__renderTarget);ae.bindFramebuffer(R.READ_FRAMEBUFFER,ii.__webglFramebuffer),ae.bindFramebuffer(R.DRAW_FRAMEBUFFER,vh.__webglFramebuffer);for(let ns=0;ns<Ee;ns++)gt&&(R.framebufferTextureLayer(R.READ_FRAMEBUFFER,R.COLOR_ATTACHMENT0,ye.get(M).__webglTexture,z,De+ns),R.framebufferTextureLayer(R.DRAW_FRAMEBUFFER,R.COLOR_ATTACHMENT0,ye.get(O).__webglTexture,re,Et+ns)),R.blitFramebuffer(Ve,Ge,ve,Se,nt,ct,ve,Se,R.DEPTH_BUFFER_BIT,R.NEAREST);ae.bindFramebuffer(R.READ_FRAMEBUFFER,null),ae.bindFramebuffer(R.DRAW_FRAMEBUFFER,null)}else if(z!==0||M.isRenderTargetTexture||ye.has(M)){const ui=ye.get(M),$t=ye.get(O);ae.bindFramebuffer(R.READ_FRAMEBUFFER,WM),ae.bindFramebuffer(R.DRAW_FRAMEBUFFER,XM);for(let ii=0;ii<Ee;ii++)gt?R.framebufferTextureLayer(R.READ_FRAMEBUFFER,R.COLOR_ATTACHMENT0,ui.__webglTexture,z,De+ii):R.framebufferTexture2D(R.READ_FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_2D,ui.__webglTexture,z),hi?R.framebufferTextureLayer(R.DRAW_FRAMEBUFFER,R.COLOR_ATTACHMENT0,$t.__webglTexture,re,Et+ii):R.framebufferTexture2D(R.DRAW_FRAMEBUFFER,R.COLOR_ATTACHMENT0,R.TEXTURE_2D,$t.__webglTexture,re),z!==0?R.blitFramebuffer(Ve,Ge,ve,Se,nt,ct,ve,Se,R.COLOR_BUFFER_BIT,R.NEAREST):hi?R.copyTexSubImage3D(Lt,re,nt,ct,Et+ii,Ve,Ge,ve,Se):R.copyTexSubImage2D(Lt,re,nt,ct,Ve,Ge,ve,Se);ae.bindFramebuffer(R.READ_FRAMEBUFFER,null),ae.bindFramebuffer(R.DRAW_FRAMEBUFFER,null)}else hi?M.isDataTexture||M.isData3DTexture?R.texSubImage3D(Lt,re,nt,ct,Et,ve,Se,Ee,st,Ne,St.data):O.isCompressedArrayTexture?R.compressedTexSubImage3D(Lt,re,nt,ct,Et,ve,Se,Ee,st,St.data):R.texSubImage3D(Lt,re,nt,ct,Et,ve,Se,Ee,st,Ne,St):M.isDataTexture?R.texSubImage2D(R.TEXTURE_2D,re,nt,ct,ve,Se,st,Ne,St.data):M.isCompressedTexture?R.compressedTexSubImage2D(R.TEXTURE_2D,re,nt,ct,St.width,St.height,st,St.data):R.texSubImage2D(R.TEXTURE_2D,re,nt,ct,ve,Se,st,Ne,St);R.pixelStorei(R.UNPACK_ROW_LENGTH,ht),R.pixelStorei(R.UNPACK_IMAGE_HEIGHT,wi),R.pixelStorei(R.UNPACK_SKIP_PIXELS,Bs),R.pixelStorei(R.UNPACK_SKIP_ROWS,ai),R.pixelStorei(R.UNPACK_SKIP_IMAGES,qr),re===0&&O.generateMipmaps&&R.generateMipmap(Lt),ae.unbindTexture()},this.copyTextureToTexture3D=function(M,O,W=null,X=null,z=0){return M.isTexture!==!0&&(ds("WebGLRenderer: copyTextureToTexture3D function signature has changed."),W=arguments[0]||null,X=arguments[1]||null,M=arguments[2],O=arguments[3],z=arguments[4]||0),ds('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(M,O,W,X,z)},this.initRenderTarget=function(M){ye.get(M).__webglFramebuffer===void 0&&E.setupRenderTarget(M)},this.initTexture=function(M){M.isCubeTexture?E.setTextureCube(M,0):M.isData3DTexture?E.setTexture3D(M,0):M.isDataArrayTexture||M.isCompressedArrayTexture?E.setTexture2DArray(M,0):E.setTexture2D(M,0),ae.unbindTexture()},this.resetState=function(){T=0,A=0,I=null,ae.reset(),mt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return di}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorspace=Je._getDrawingBufferColorSpace(e),t.unpackColorSpace=Je._getUnpackColorSpace()}}const Fw=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Pl,AddEquation:sn,AddOperation:tu,AdditiveAnimationBlendMode:Hl,AdditiveBlending:El,AgXToneMapping:ou,AlphaFormat:Ol,AlwaysCompare:bu,AlwaysDepth:eo,AlwaysStencilFunc:Gl,AmbientLight:rf,AnimationAction:wf,AnimationClip:zr,AnimationLoader:P0,AnimationMixer:ry,AnimationObjectGroup:ny,AnimationUtils:A0,ArcCurve:_d,ArrayCamera:mf,ArrowHelper:Ry,AttachedBindMode:Il,Audio:xf,AudioAnalyser:Y0,AudioContext:Kc,AudioListener:W0,AudioLoader:V0,AxesHelper:Py,BackSide:kt,BasicDepthPacking:du,BasicShadowMap:rg,BatchedMesh:ud,Bone:xc,BooleanKeyframeTrack:Xn,Box2:my,Box3:Gt,Box3Helper:Ey,BoxGeometry:On,BoxHelper:Ay,BufferAttribute:ft,BufferGeometry:qe,BufferGeometryLoader:hf,ByteType:Ul,Cache:$i,Camera:la,CameraHelper:Ty,CanvasTexture:jv,CapsuleGeometry:Ua,CatmullRomCurve3:bd,CineonToneMapping:su,CircleGeometry:Da,ClampToEdgeWrapping:li,Clock:gf,Color:le,ColorKeyframeTrack:qc,ColorManagement:Je,CompressedArrayTexture:$v,CompressedCubeTexture:Zv,CompressedTexture:Ra,CompressedTextureLoader:I0,ConeGeometry:Na,ConstantAlphaFactor:Kh,ConstantColorFactor:jh,Controls:Ly,CubeCamera:qu,CubeReflectionMapping:zi,CubeRefractionMapping:rn,CubeTexture:gr,CubeTextureLoader:L0,CubeUVReflectionMapping:os,CubicBezierCurve:Lc,CubicBezierCurve3:Sd,CubicInterpolant:Yd,CullFaceBack:Tl,CullFaceFront:Dh,CullFaceFrontBack:sg,CullFaceNone:Uh,Curve:gi,CurvePath:Td,CustomBlending:Oh,CustomToneMapping:ru,CylinderGeometry:Ds,Cylindrical:py,Data3DTexture:Wo,DataArrayTexture:hr,DataTexture:Ii,DataTextureLoader:U0,DataUtils:bv,DecrementStencilOp:xg,DecrementWrapStencilOp:bg,DefaultLoadingManager:jd,DepthFormat:An,DepthStencilFormat:En,DepthTexture:Ec,DetachedBindMode:lu,DirectionalLight:sf,DirectionalLightHelper:My,DiscreteInterpolant:$d,DodecahedronGeometry:Oa,DoubleSide:Ei,DstAlphaFactor:Xh,DstColorFactor:Yh,DynamicCopyUsage:Og,DynamicDrawUsage:Pg,DynamicReadUsage:Ug,EdgesGeometry:Ad,EllipseCurve:Pa,EqualCompare:vu,EqualDepth:io,EqualStencilFunc:Tg,EquirectangularReflectionMapping:qs,EquirectangularRefractionMapping:Ys,Euler:ri,EventDispatcher:Pi,ExtrudeGeometry:Ga,FileLoader:ji,Float16BufferAttribute:Cv,Float32BufferAttribute:Re,FloatType:Vt,Fog:ua,FogExp2:ha,FramebufferTexture:Yv,FrontSide:Ni,Frustum:wr,GLBufferAttribute:uy,GLSL1:zg,GLSL3:Xl,GreaterCompare:yu,GreaterDepth:so,GreaterEqualCompare:_u,GreaterEqualDepth:no,GreaterEqualStencilFunc:Rg,GreaterStencilFunc:Eg,GridHelper:wy,Group:Fn,HalfFloatType:cs,HemisphereLight:Jd,HemisphereLightHelper:by,IcosahedronGeometry:Wa,ImageBitmapLoader:k0,ImageLoader:Br,ImageUtils:Cu,IncrementStencilOp:yg,IncrementWrapStencilOp:_g,InstancedBufferAttribute:Ls,InstancedBufferGeometry:cf,InstancedInterleavedBuffer:hy,InstancedMesh:cd,Int16BufferAttribute:Av,Int32BufferAttribute:Ev,Int8BufferAttribute:Sv,IntType:ao,InterleavedBuffer:da,InterleavedBufferAttribute:zn,Interpolant:Dr,InterpolateDiscrete:nr,InterpolateLinear:ko,InterpolateSmooth:Vo,InvertStencilOp:wg,KeepStencilOp:Pn,KeyframeTrack:vi,LOD:Qu,LatheGeometry:Cr,Layers:Jo,LessCompare:gu,LessDepth:to,LessEqualCompare:Wl,LessEqualDepth:Mn,LessEqualStencilFunc:Ag,LessStencilFunc:Mg,Light:yn,LightProbe:lf,Line:gn,Line3:gy,LineBasicMaterial:qt,LineCurve:Uc,LineCurve3:Md,LineDashedMaterial:Wd,LineLoop:gd,LineSegments:Li,LinearFilter:Mt,LinearInterpolant:Xc,LinearMipMapLinearFilter:cg,LinearMipMapNearestFilter:lg,LinearMipmapLinearFilter:Ci,LinearMipmapNearestFilter:js,LinearSRGBColorSpace:an,LinearToneMapping:iu,LinearTransfer:rr,Loader:ti,LoaderUtils:Jc,LoadingManager:Yc,LoopOnce:cu,LoopPingPong:uu,LoopRepeat:hu,LuminanceAlphaFormat:Bl,LuminanceFormat:zl,MOUSE:ig,Material:Ft,MaterialLoader:Ka,MathUtils:iv,Matrix2:ih,Matrix3:We,Matrix4:ze,MaxEquation:kh,Mesh:rt,MeshBasicMaterial:fn,MeshDepthMaterial:Vc,MeshDistanceMaterial:Hc,MeshLambertMaterial:Hd,MeshMatcapMaterial:Gd,MeshNormalMaterial:Vd,MeshPhongMaterial:Bd,MeshPhysicalMaterial:zd,MeshStandardMaterial:kc,MeshToonMaterial:kd,MinEquation:Bh,MirroredRepeatWrapping:Zs,MixOperation:eu,MultiplyBlending:Rl,MultiplyOperation:Xs,NearestFilter:yt,NearestMipMapLinearFilter:ag,NearestMipMapNearestFilter:og,NearestMipmapLinearFilter:as,NearestMipmapNearestFilter:Ll,NeutralToneMapping:au,NeverCompare:mu,NeverDepth:Qr,NeverStencilFunc:Sg,NoBlending:Oi,NoColorSpace:ki,NoToneMapping:Fi,NormalAnimationBlendMode:Ho,NormalBlending:Sn,NotEqualCompare:xu,NotEqualDepth:ro,NotEqualStencilFunc:Cg,NumberKeyframeTrack:Nr,Object3D:et,ObjectLoader:z0,ObjectSpaceNormalMap:pu,OctahedronGeometry:Lr,OneFactor:Hh,OneMinusConstantAlphaFactor:Qh,OneMinusConstantColorFactor:Jh,OneMinusDstAlphaFactor:qh,OneMinusDstColorFactor:$h,OneMinusSrcAlphaFactor:Kr,OneMinusSrcColorFactor:Wh,OrthographicCamera:Ja,PCFShadowMap:Al,PCFSoftShadowMap:Nh,PMREMGenerator:uh,Path:Er,PerspectiveCamera:It,Plane:mn,PlaneGeometry:pt,PlaneHelper:Cy,PointLight:nf,PointLightHelper:xy,Points:yd,PointsMaterial:Tc,PolarGridHelper:Sy,PolyhedronGeometry:vn,PositionalAudio:q0,PropertyBinding:tt,PropertyMixer:bf,QuadraticBezierCurve:Dc,QuadraticBezierCurve3:Nc,Quaternion:Jt,QuaternionKeyframeTrack:Or,QuaternionLinearInterpolant:Zd,RED_GREEN_RGTC2_Format:zo,RED_RGTC1_Format:Vl,REVISION:jr,RGBADepthPacking:fu,RGBAFormat:Ut,RGBAIntegerFormat:fo,RGBA_ASTC_10x10_Format:Lo,RGBA_ASTC_10x5_Format:Ro,RGBA_ASTC_10x6_Format:Po,RGBA_ASTC_10x8_Format:Io,RGBA_ASTC_12x10_Format:Uo,RGBA_ASTC_12x12_Format:Do,RGBA_ASTC_4x4_Format:bo,RGBA_ASTC_5x4_Format:wo,RGBA_ASTC_5x5_Format:So,RGBA_ASTC_6x5_Format:Mo,RGBA_ASTC_6x6_Format:To,RGBA_ASTC_8x5_Format:Ao,RGBA_ASTC_8x6_Format:Eo,RGBA_ASTC_8x8_Format:Co,RGBA_BPTC_Format:ir,RGBA_ETC2_EAC_Format:_o,RGBA_PVRTC_2BPPV1_Format:vo,RGBA_PVRTC_4BPPV1_Format:go,RGBA_S3TC_DXT1_Format:Qs,RGBA_S3TC_DXT3_Format:er,RGBA_S3TC_DXT5_Format:tr,RGBDepthPacking:pg,RGBFormat:Fl,RGBIntegerFormat:hg,RGB_BPTC_SIGNED_Format:No,RGB_BPTC_UNSIGNED_Format:Oo,RGB_ETC1_Format:yo,RGB_ETC2_Format:xo,RGB_PVRTC_2BPPV1_Format:mo,RGB_PVRTC_4BPPV1_Format:po,RGB_S3TC_DXT1_Format:Ks,RGDepthPacking:mg,RGFormat:kl,RGIntegerFormat:uo,RawShaderMaterial:Fd,Ray:ys,Raycaster:dy,RectAreaLight:of,RedFormat:ho,RedIntegerFormat:Js,ReinhardToneMapping:nu,RenderTarget:Go,RenderTarget3D:oy,RenderTargetArray:ay,RepeatWrapping:$s,ReplaceStencilOp:vg,ReverseSubtractEquation:zh,RingGeometry:Xa,SIGNED_RED_GREEN_RGTC2_Format:Bo,SIGNED_RED_RGTC1_Format:Fo,SRGBColorSpace:Zt,SRGBTransfer:ut,Scene:pc,ShaderChunk:Ye,ShaderLib:yi,ShaderMaterial:_t,ShadowMaterial:Od,Shape:Hn,ShapeGeometry:qa,ShapePath:Iy,ShapeUtils:Ui,ShortType:Dl,Skeleton:ya,SkeletonHelper:yy,SkinnedMesh:rd,Source:Ln,Sphere:Nt,SphereGeometry:Ur,Spherical:fy,SphericalHarmonics3:af,SplineCurve:Oc,SpotLight:ef,SpotLightHelper:vy,Sprite:Ju,SpriteMaterial:mc,SrcAlphaFactor:Jr,SrcAlphaSaturateFactor:Zh,SrcColorFactor:Gh,StaticCopyUsage:Ng,StaticDrawUsage:or,StaticReadUsage:Lg,StereoCamera:H0,StreamCopyUsage:Fg,StreamDrawUsage:Ig,StreamReadUsage:Dg,StringKeyframeTrack:qn,SubtractEquation:Fh,SubtractiveBlending:Cl,TOUCH:ng,TangentSpaceNormalMap:on,TetrahedronGeometry:Ya,Texture:xt,TextureLoader:D0,TextureUtils:Fy,TimestampQuery:Bg,TorusGeometry:$a,TorusKnotGeometry:Za,Triangle:Kt,TriangleFanDrawMode:fg,TriangleStripDrawMode:dg,TrianglesDrawMode:ug,TubeGeometry:ja,UVMapping:oo,Uint16BufferAttribute:hc,Uint32BufferAttribute:uc,Uint8BufferAttribute:Mv,Uint8ClampedBufferAttribute:Tv,Uniform:N,UniformsGroup:cy,UniformsLib:de,UniformsUtils:Gu,UnsignedByteType:Ri,UnsignedInt248Type:Tn,UnsignedInt5999Type:Nl,UnsignedIntType:Bi,UnsignedShort4444Type:lo,UnsignedShort5551Type:co,UnsignedShortType:ls,VSMShadowMap:Ai,Vector2:G,Vector3:P,Vector4:Qe,VectorKeyframeTrack:Fr,VideoFrameTexture:qv,VideoTexture:at,WebGL3DRenderTarget:uv,WebGLArrayRenderTarget:hv,WebGLCoordinateSystem:di,WebGLCubeRenderTarget:Yu,WebGLRenderTarget:jt,WebGLRenderer:cp,WebGLUtils:lp,WebGPUCoordinateSystem:ar,WebXRController:ca,WireframeGeometry:Ud,WrapAroundEnding:sr,ZeroCurvatureEnding:Cn,ZeroFactor:Vh,ZeroSlopeEnding:Rn,ZeroStencilOp:gg,createCanvasElement:Mu},Symbol.toStringTag,{value:"Module"}));class hp{constructor(e,t,i){this.id=0,this.name=e,this.fg=t,this.bg=i,this.gradient=null,this.PR=Math.round(window.devicePixelRatio||1),this.WIDTH=90*this.PR,this.HEIGHT=48*this.PR,this.TEXT_X=3*this.PR,this.TEXT_Y=2*this.PR,this.GRAPH_X=3*this.PR,this.GRAPH_Y=15*this.PR,this.GRAPH_WIDTH=84*this.PR,this.GRAPH_HEIGHT=30*this.PR,this.canvas=document.createElement("canvas"),this.canvas.width=this.WIDTH,this.canvas.height=this.HEIGHT,this.canvas.style.width="90px",this.canvas.style.height="48px",this.canvas.style.position="absolute",this.canvas.style.cssText="width:90px;height:48px;background-color: transparent !important;",this.context=this.canvas.getContext("2d"),this.initializeCanvas()}createGradient(){if(!this.context)throw new Error("No context");const e=this.context.createLinearGradient(0,this.GRAPH_Y,0,this.GRAPH_Y+this.GRAPH_HEIGHT);let t;const i=this.fg;switch(this.fg.toLowerCase()){case"#0ff":t="#006666";break;case"#0f0":t="#006600";break;case"#ff0":t="#666600";break;case"#e1e1e1":t="#666666";break;default:t=this.bg;break}return e.addColorStop(0,t),e.addColorStop(1,i),e}initializeCanvas(){this.context&&(this.context.imageSmoothingEnabled=!1,this.context.font="bold "+9*this.PR+"px Helvetica,Arial,sans-serif",this.context.textBaseline="top",this.gradient=this.createGradient(),this.context.fillStyle=this.bg,this.context.fillRect(0,0,this.WIDTH,this.HEIGHT),this.context.fillStyle=this.fg,this.context.fillText(this.name,this.TEXT_X,this.TEXT_Y),this.context.fillStyle=this.bg,this.context.globalAlpha=.9,this.context.fillRect(this.GRAPH_X,this.GRAPH_Y,this.GRAPH_WIDTH,this.GRAPH_HEIGHT))}update(e,t,i=0){if(!this.context||!this.gradient)return;const n=Math.min(1/0,e),s=Math.max(t,e);this.context.globalAlpha=1,this.context.fillStyle=this.bg,this.context.fillRect(0,0,this.WIDTH,this.GRAPH_Y),this.context.fillStyle=this.fg,this.context.fillText(`${e.toFixed(i)} ${this.name} (${n.toFixed(i)}-${parseFloat(s.toFixed(i))})`,this.TEXT_X,this.TEXT_Y)}updateGraph(e,t){if(!this.context||!this.gradient)return;e===0&&t===0&&(t=1),t=Math.max(t,e,.1),e=Math.max(e,0);const i=Math.round(this.GRAPH_X),n=Math.round(this.GRAPH_Y),s=Math.round(this.GRAPH_WIDTH),o=Math.round(this.GRAPH_HEIGHT),a=Math.round(this.PR);this.context.drawImage(this.canvas,i+a,n,s-a,o,i,n,s-a,o),this.context.fillStyle=this.bg,this.context.fillRect(i+s-a,n,a,o);const l=Math.min(o,Math.round(e/t*o));l>0&&(this.context.globalAlpha=.9,this.context.fillStyle=this.gradient,this.context.fillRect(i+s-a,n+(o-l),a,l)),this.context.globalAlpha=1}}class zw extends hp{constructor(e,t,i){super(e,t,i),this.vsyncValue=0,this.SMALL_HEIGHT=9*this.PR,this.HEIGHT=this.SMALL_HEIGHT,this.WIDTH=35*this.PR,this.TEXT_Y=0*this.PR,this.canvas.height=this.HEIGHT,this.canvas.width=this.WIDTH,this.canvas.style.height="9px",this.canvas.style.width="35px",this.canvas.style.cssText=`
            width: 35px;
            height: 9px;
            position: absolute;
            top: 0;
            left: 0;
            background-color: transparent !important;
            pointer-events: none;
        `,this.initializeCanvas()}initializeCanvas(){this.context&&(this.context.imageSmoothingEnabled=!1,this.context.font="bold "+9*this.PR+"px Helvetica,Arial,sans-serif",this.context.textBaseline="top",this.context.globalAlpha=1)}update(e,t,i=0){this.context&&(this.vsyncValue=e,this.context.clearRect(0,0,this.WIDTH,this.HEIGHT),this.context.globalAlpha=1,this.context.fillStyle=this.bg,this.context.fillText(`${e.toFixed(0)}Hz`,this.TEXT_X,this.TEXT_Y))}updateGraph(e,t){}setOffset(e,t){this.canvas.style.transform=`translate(${e}px, ${t}px)`}}const up=class ks{constructor({trackGPU:e=!1,trackCPT:t=!1,trackHz:i=!1,logsPerSecond:n=4,graphsPerSecond:s=30,samplesLog:o=40,samplesGraph:a=10,precision:l=2,minimal:c=!1,horizontal:h=!0,mode:d=0}={}){this.gl=null,this.ext=null,this.activeQuery=null,this.gpuQueries=[],this.threeRendererPatched=!1,this.frameTimes=[],this.renderCount=0,this.totalCpuDuration=0,this.totalGpuDuration=0,this.totalGpuDurationCompute=0,this.gpuPanel=null,this.gpuPanelCompute=null,this.vsyncPanel=null,this.averageFps={logs:[],graph:[]},this.averageCpu={logs:[],graph:[]},this.averageGpu={logs:[],graph:[]},this.averageGpuCompute={logs:[],graph:[]},this.updateCounter=0,this.lastMin={},this.lastMax={},this.lastValue={},this.VSYNC_RATES=[{refreshRate:60,frameTime:16.67},{refreshRate:75,frameTime:13.33},{refreshRate:90,frameTime:11.11},{refreshRate:120,frameTime:8.33},{refreshRate:144,frameTime:6.94},{refreshRate:165,frameTime:6.06},{refreshRate:240,frameTime:4.17}],this.detectedVSync=null,this.frameTimeHistory=[],this.HISTORY_SIZE=120,this.VSYNC_THRESHOLD=.05,this.lastFrameTime=0,this.handleClick=f=>{f.preventDefault(),this.showPanel(++this.mode%this.dom.children.length)},this.handleResize=()=>{this.resizePanel(this.fpsPanel),this.resizePanel(this.msPanel),this.gpuPanel&&this.resizePanel(this.gpuPanel),this.gpuPanelCompute&&this.resizePanel(this.gpuPanelCompute)},this.mode=d,this.horizontal=h,this.minimal=c,this.trackGPU=e,this.trackCPT=t,this.trackHz=i,this.samplesLog=o,this.samplesGraph=a,this.precision=l,this.logsPerSecond=n,this.graphsPerSecond=s;const u=performance.now();this.prevGraphTime=u,this.dom=document.createElement("div"),this.initializeDOM(),this.beginTime=performance.now(),this.prevTextTime=this.beginTime,this.prevCpuTime=this.beginTime,this._panelId=0,this.fpsPanel=this.addPanel(new ks.Panel("FPS","#0ff","#002")),this.msPanel=this.addPanel(new ks.Panel("CPU","#0f0","#020")),this.trackHz===!0&&(this.vsyncPanel=new zw("","#f0f","#202"),this.dom.appendChild(this.vsyncPanel.canvas),this.vsyncPanel.setOffset(56,35)),this.setupEventListeners()}initializeDOM(){this.dom.style.cssText=`
      position: fixed;
      top: 0;
      left: 0;
      opacity: 0.9;
      z-index: 10000;
      ${this.minimal?"cursor: pointer;":""}
    `}setupEventListeners(){this.minimal?(this.dom.addEventListener("click",this.handleClick),this.showPanel(this.mode)):window.addEventListener("resize",this.handleResize)}async init(e){if(!e){console.error('Stats: The "canvas" parameter is undefined.');return}if(!this.handleThreeRenderer(e)&&!await this.handleWebGPURenderer(e))if(this.initializeWebGL(e)){this.trackGPU&&this.initializeGPUTracking();return}else console.error("Stats-gl: Failed to initialize WebGL context")}handleThreeRenderer(e){return e.isWebGLRenderer&&!this.threeRendererPatched?(this.patchThreeRenderer(e),this.gl=e.getContext(),this.trackGPU&&this.initializeGPUTracking(),!0):!1}async handleWebGPURenderer(e){return e.isWebGPURenderer?((this.trackGPU||this.trackCPT)&&(e.backend.trackTimestamp=!0,await e.hasFeatureAsync("timestamp-query")&&this.initializeWebGPUPanels()),this.info=e.info,this.patchThreeWebGPU(e),!0):!1}initializeWebGPUPanels(){this.trackGPU&&(this.gpuPanel=this.addPanel(new ks.Panel("GPU","#ff0","#220"))),this.trackCPT&&(this.gpuPanelCompute=this.addPanel(new ks.Panel("CPT","#e1e1e1","#212121")))}initializeWebGL(e){if(e instanceof WebGL2RenderingContext)this.gl=e;else if(e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas){if(this.gl=e.getContext("webgl2"),!this.gl)return console.error("Stats: Unable to obtain WebGL2 context."),!1}else return console.error("Stats: Invalid input type. Expected WebGL2RenderingContext, HTMLCanvasElement, or OffscreenCanvas."),!1;return!0}initializeGPUTracking(){this.gl&&(this.ext=this.gl.getExtension("EXT_disjoint_timer_query_webgl2"),this.ext&&(this.gpuPanel=this.addPanel(new ks.Panel("GPU","#ff0","#220"))))}begin(){this.beginProfiling("cpu-started"),!(!this.gl||!this.ext)&&(this.activeQuery&&this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.activeQuery=this.gl.createQuery(),this.activeQuery&&this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,this.activeQuery))}end(){this.renderCount++,this.gl&&this.ext&&this.activeQuery&&(this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.gpuQueries.push({query:this.activeQuery}),this.activeQuery=null),this.endProfiling("cpu-started","cpu-finished","cpu-duration")}update(){this.endProfiling("cpu-started","cpu-finished","cpu-duration"),this.info?this.processWebGPUTimestamps():this.processGpuQueries(),this.updateAverages(),this.resetCounters()}processWebGPUTimestamps(){this.totalGpuDuration=this.info.render.timestamp,this.totalGpuDurationCompute=this.info.compute.timestamp}resetCounters(){this.renderCount=0,this.totalCpuDuration=0,this.beginTime=this.endInternal()}resizePanel(e){e.canvas.style.position="absolute",this.minimal?e.canvas.style.display="none":(e.canvas.style.display="block",this.horizontal?(e.canvas.style.top="0px",e.canvas.style.left=e.id*e.WIDTH/e.PR+"px"):(e.canvas.style.left="0px",e.canvas.style.top=e.id*e.HEIGHT/e.PR+"px"))}addPanel(e){return e.canvas&&(this.dom.appendChild(e.canvas),e.id=this._panelId,this.resizePanel(e),this._panelId++),e}showPanel(e){for(let t=0;t<this.dom.children.length;t++){const i=this.dom.children[t];i.style.display=t===e?"block":"none"}this.mode=e}processGpuQueries(){!this.gl||!this.ext||(this.totalGpuDuration=0,this.gpuQueries.forEach((e,t)=>{if(this.gl){const i=this.gl.getQueryParameter(e.query,this.gl.QUERY_RESULT_AVAILABLE),n=this.gl.getParameter(this.ext.GPU_DISJOINT_EXT);if(i&&!n){const o=this.gl.getQueryParameter(e.query,this.gl.QUERY_RESULT)*1e-6;this.totalGpuDuration+=o,this.gl.deleteQuery(e.query),this.gpuQueries.splice(t,1)}}}))}detectVSync(e){if(this.lastFrameTime===0){this.lastFrameTime=e;return}const t=e-this.lastFrameTime;if(this.lastFrameTime=e,this.frameTimeHistory.push(t),this.frameTimeHistory.length>this.HISTORY_SIZE&&this.frameTimeHistory.shift(),this.frameTimeHistory.length<60)return;const i=this.frameTimeHistory.reduce((l,c)=>l+c)/this.frameTimeHistory.length,n=this.frameTimeHistory.reduce((l,c)=>l+Math.pow(c-i,2),0)/this.frameTimeHistory.length;if(Math.sqrt(n)>2){this.detectedVSync=null;return}let o=null,a=1/0;for(const l of this.VSYNC_RATES){const c=Math.abs(i-l.frameTime);c<a&&(a=c,o=l)}o&&a/o.frameTime<=this.VSYNC_THRESHOLD?this.detectedVSync=o:this.detectedVSync=null}endInternal(){var e;const t=performance.now();for(this.frameTimes.push(t);this.frameTimes.length>0&&this.frameTimes[0]<=t-1e3;)this.frameTimes.shift();const i=Math.round(this.frameTimes.length);this.addToAverage(i,this.averageFps);const n=t>=this.prevTextTime+1e3/this.logsPerSecond,s=t>=this.prevGraphTime+1e3/this.graphsPerSecond;if(this.updatePanelComponents(this.fpsPanel,this.averageFps,0,n,s),this.updatePanelComponents(this.msPanel,this.averageCpu,this.precision,n,s),this.gpuPanel&&this.updatePanelComponents(this.gpuPanel,this.averageGpu,this.precision,n,s),this.trackCPT&&this.gpuPanelCompute&&this.updatePanelComponents(this.gpuPanelCompute,this.averageGpuCompute,this.precision,n,s),n&&(this.prevTextTime=t),s&&(this.prevGraphTime=t),this.vsyncPanel!==null){this.detectVSync(t);const o=((e=this.detectedVSync)==null?void 0:e.refreshRate)||0;n&&o>0&&this.vsyncPanel.update(o,o)}return t}updatePanelComponents(e,t,i,n,s){if(!e||t.logs.length===0)return;e.name in this.lastMin||(this.lastMin[e.name]=1/0,this.lastMax[e.name]=0,this.lastValue[e.name]=0);const o=t.logs[t.logs.length-1];this.lastMax[e.name]=Math.max(...t.logs),this.lastMin[e.name]=Math.min(this.lastMin[e.name],o),this.lastValue[e.name]=this.lastValue[e.name]*.7+o*.3;const a=Math.max(Math.max(...t.logs),...t.graph.slice(-this.samplesGraph));this.updateCounter++,n&&e.update(this.lastValue[e.name],this.lastMax[e.name],i),s&&e.updateGraph(o,a)}beginProfiling(e){if(window.performance)try{window.performance.clearMarks(e),window.performance.mark(e)}catch(t){console.debug("Stats: Performance marking failed:",t)}}endProfiling(e,t,i){if(!(!window.performance||!t||!e))try{window.performance.getEntriesByName(e,"mark").length===0&&this.beginProfiling(e),window.performance.clearMarks(t),window.performance.mark(t),window.performance.clearMeasures(i);const s=performance.measure(i,e,t);this.totalCpuDuration+=s.duration,window.performance.clearMarks(e),window.performance.clearMarks(t),window.performance.clearMeasures(i)}catch(n){console.debug("Stats: Performance measurement failed:",n)}}updatePanel(e,t,i=2){if(!e||t.logs.length===0)return;const n=performance.now();e.name in this.lastMin||(this.lastMin[e.name]=1/0,this.lastMax[e.name]=0,this.lastValue[e.name]=0);const s=t.logs[t.logs.length-1],o=Math.max(...t.logs.slice(-30));this.lastMin[e.name]=Math.min(this.lastMin[e.name],s),this.lastMax[e.name]=Math.max(this.lastMax[e.name],s),this.lastValue[e.name]=this.lastValue[e.name]*.7+s*.3;const a=Math.max(o,...t.graph.slice(-this.samplesGraph));this.updateCounter++,this.updateCounter%(this.logsPerSecond*2)===0&&(this.lastMax[e.name]=o,this.lastMin[e.name]=s),e.update&&(n>=this.prevCpuTime+1e3/this.logsPerSecond&&e.update(this.lastValue[e.name],s,this.lastMax[e.name],a,i),n>=this.prevGraphTime+1e3/this.graphsPerSecond&&(e.updateGraph(s,a),this.prevGraphTime=n))}updateAverages(){this.addToAverage(this.totalCpuDuration,this.averageCpu),this.addToAverage(this.totalGpuDuration,this.averageGpu),this.info&&this.totalGpuDurationCompute!==void 0&&this.addToAverage(this.totalGpuDurationCompute,this.averageGpuCompute)}addToAverage(e,t){t.logs.push(e),t.logs.length>this.samplesLog&&(t.logs=t.logs.slice(-this.samplesLog)),t.graph.push(e),t.graph.length>this.samplesGraph&&(t.graph=t.graph.slice(-this.samplesGraph))}get domElement(){return this.dom}patchThreeWebGPU(e){const t=e.info.reset,i=this;e.info.reset=function(){i.beginProfiling("cpu-started"),t.call(this)}}patchThreeRenderer(e){const t=e.render,i=this;e.render=function(n,s){i.begin(),t.call(this,n,s),i.end()},this.threeRendererPatched=!0}};up.Panel=hp;let Bw=up;class kw{constructor(e,t,i){this.app=e,this.gl=t,this.sizes=this.app.sizes,this.scene=i,this.canvas=this.gl.canvas,this.setInstance()}setInstance(){this.fovNum=1200,this.fov=Math.atan(this.sizes.height/2/this.fovNum)*2*(180/Math.PI),this.instance=new It(this.fov,this.sizes.width/this.sizes.height,1,2e3),this.instance.position.z=this.fovNum,this.instance.frustumCulled=!0,this.scene.add(this.instance)}resize(){this.fov=Math.atan(this.sizes.height/2/this.fovNum)*2*(180/Math.PI),this.instance.fov=this.fov,this.instance.aspect=this.sizes.width/this.sizes.height,this.instance.updateProjectionMatrix()}orbitControls(){this.controls=new OrbitControls(this.instance,this.canvas),this.controls.enableDamping=!0}update(){}}class Vw{constructor(e,t){this.app=e,this.gl=t,this.canvas=this.gl.canvas,this.sizes=this.app.sizes,this.scene=this.gl.scene,this.camera=this.gl.camera.instance,this.setInstance()}setInstance(){const e=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),t=window.innerWidth<992;this.instance=new cp({canvas:this.canvas,alpha:!0,antialias:!e||!t,powerPreference:e?"high-performance":"default",stencil:!1,depth:!0}),this.instance.setSize(this.sizes.width,this.sizes.height);const i=e?1.5:2;this.instance.setPixelRatio(Math.min(this.sizes.pixelRatio,i)),this.instance.render(this.scene,this.camera),this.instance.toneMapping=Pl,this.instance.shadowMap.enabled=!0,this.app.sizes.isMobile}resize(){this.instance.setSize(this.sizes.width,this.sizes.height)}update(){this.instance.render(this.scene,this.camera)}}const xi=(r,e)=>{r.geometry.dispose(),r.geometry=e};var Hw=`varying vec2 vUv;
varying vec2 vL;
varying vec2 vR;
varying vec2 vT;
varying vec2 vB;

uniform vec2 texelSize;

void main()
{
    vUv = uv;
    vL = vUv - vec2(texelSize.x, 0.0);
    vR = vUv + vec2(texelSize.x, 0.0);
    vT = vUv + vec2(0.0, texelSize.y);
    vB = vUv - vec2(0.0, texelSize.y);

    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}`,Gw=`varying vec2 vUv;

uniform sampler2D uTexture;
uniform float value;

void main ()
{
    gl_FragColor = value * texture2D(uTexture, vUv);
}`,Ww=`varying vec2 vUv;

uniform sampler2D uTarget;
uniform float aspectRatio;
uniform vec3 color;
uniform vec2 point;
uniform float radius;

void main ()
{
    vec2 p = vUv - point.xy;
    p.x *= aspectRatio;
    vec3 splat = pow(2.0, -dot(p, p) / radius) * color;
    vec3 base = texture2D(uTarget, vUv).xyz;
    gl_FragColor = vec4(base + splat, 1.0);
}`,Xw=`varying vec2 vUv;

uniform sampler2D uVelocity;
uniform sampler2D uSource;
uniform vec2 texelSize;
uniform float dt;
uniform float dissipation;

void main ()
{
    vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;
    gl_FragColor = dissipation * texture2D(uSource, coord);
    gl_FragColor.a = 1.0;
}`,qw=`varying highp vec2 vUv;
varying highp vec2 vL;
varying highp vec2 vR;
varying highp vec2 vT;
varying highp vec2 vB;

uniform sampler2D uVelocity;

void main ()
{
    float L = texture2D(uVelocity, vL).x;
    float R = texture2D(uVelocity, vR).x;
    float T = texture2D(uVelocity, vT).y;
    float B = texture2D(uVelocity, vB).y;
    vec2 C = texture2D(uVelocity, vUv).xy;
    if (vL.x < 0.0) { L = -C.x; }
    if (vR.x > 1.0) { R = -C.x; }
    if (vT.y > 1.0) { T = -C.y; }
    if (vB.y < 0.0) { B = -C.y; }
    float div = 0.6 * (R - L + T - B);
    gl_FragColor = vec4(div, 0.0, 0.0, 1.0);
}`,Yw=`varying highp vec2 vUv;
varying highp vec2 vL;
varying highp vec2 vR;
varying highp vec2 vT;
varying highp vec2 vB;

uniform sampler2D uVelocity;

void main ()
{
    float L = texture2D(uVelocity, vL).y;
    float R = texture2D(uVelocity, vR).y;
    float T = texture2D(uVelocity, vT).x;
    float B = texture2D(uVelocity, vB).x;
    float vorticity = R - L - T + B;
    gl_FragColor = vec4(0.05 * vorticity, 0.0, 0.0, 1.0);
}`,$w=`varying vec2 vUv;
varying vec2 vL;
varying vec2 vR;
varying vec2 vT;
varying vec2 vB;

uniform sampler2D uVelocity;
uniform sampler2D uCurl;
uniform float curl;
uniform float dt;

void main ()
{
    float L = texture2D(uCurl, vL).x;
    float R = texture2D(uCurl, vR).x;
    float T = texture2D(uCurl, vT).x;
    float B = texture2D(uCurl, vB).x;
    float C = texture2D(uCurl, vUv).x;
    vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));
    force /= length(force) + 0.0001;
    force *= curl * C;
    force.y *= -1.0;
    vec2 vel = texture2D(uVelocity, vUv).xy;
    gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);
}`,Zw=`varying highp vec2 vUv;
varying highp vec2 vL;
varying highp vec2 vR;
varying highp vec2 vT;
varying highp vec2 vB;

uniform sampler2D uPressure;
uniform sampler2D uDivergence;

void main ()
{
    float L = texture2D(uPressure, vL).x;
    float R = texture2D(uPressure, vR).x;
    float T = texture2D(uPressure, vT).x;
    float B = texture2D(uPressure, vB).x;
    float C = texture2D(uPressure, vUv).x;
    float divergence = texture2D(uDivergence, vUv).x;
    float pressure = (L + R + B + T - divergence) * 0.25;
    gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);
}`,jw=`varying highp vec2 vUv;
varying highp vec2 vL;
varying highp vec2 vR;
varying highp vec2 vT;
varying highp vec2 vB;

uniform sampler2D uPressure;
uniform sampler2D uVelocity;

void main ()
{
    float L = texture2D(uPressure, vL).x;
    float R = texture2D(uPressure, vR).x;
    float T = texture2D(uPressure, vT).x;
    float B = texture2D(uPressure, vB).x;
    vec2 velocity = texture2D(uVelocity, vUv).xy;
    velocity.xy -= vec2(R - L, T - B);
    gl_FragColor = vec4(velocity, 0.0, 1.0);
}`;class Jw{constructor(e,t){this.app=e,this.gl=t,this.renderer=this.gl.renderer.instance,this.camera=this.gl.camera.instance,this.scene=this.gl.scene,this.sizes=this.app.sizes,this.mouse=new G,this.lastMouse=new G(-1),this.splats=[];const i=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);this.simRes=i?96:128,this.dyeRes=i?384:512,this.iterations=i?2:3,this.densityDissipation=.97,this.velocityDissipation=.96,this.pressureDissipation=.85,this.curlStrength=36,this.radius=.3*window.innerWidth*7e-4,this.splatForce=2e3,this.outputColor=new le(1,1,1),this.init()}init(){this.createFramebuffers(),this.createSimulationMeshes()}createFramebuffers(){this.format=Ut,this.type=Vt,this.texelSize=new G(1/this.simRes,1/this.simRes),this.dyeTexelSize=new G(1/this.dyeRes,1/this.dyeRes),this.density=this.createDoubleFBO(this.dyeRes,this.dyeRes,Mt),this.velocity=this.createDoubleFBO(this.simRes,this.simRes,Mt),this.pressure=this.createDoubleFBO(this.simRes,this.simRes,yt),this.curl=new jt(this.simRes,this.simRes,{format:this.format,type:this.type,minFilter:yt,magFilter:yt}),this.divergence=new jt(this.simRes,this.simRes,{format:this.format,type:this.type,minFilter:yt,magFilter:yt})}createDoubleFBO(e,t,i){const n={format:this.format,type:this.type,minFilter:i,magFilter:i,depthBuffer:!1,stencilBuffer:!1};return{read:new jt(e,t,n),write:new jt(e,t,n),swap:function(){const s=this.read;this.read=this.write,this.write=s}}}createSimulationMeshes(){this.clearMesh=this.createShaderMesh(Gw,{texelSize:new N(this.texelSize),uTexture:new N(null),value:new N(this.pressureDissipation)}),this.splatMesh=this.createShaderMesh(Ww,{texelSize:new N(this.texelSize),uTarget:new N(null),aspectRatio:new N(this.sizes.width/this.sizes.height),color:new N(new le),point:new N(new G),radius:new N(this.radius/100)}),this.advectionMesh=this.createShaderMesh(Xw,{texelSize:new N(this.texelSize),dyeTexelSize:new N(this.dyeTexelSize),uVelocity:new N(null),uSource:new N(null),dt:new N(.016),dissipation:new N(1)}),this.divergenceMesh=this.createShaderMesh(qw,{texelSize:new N(this.texelSize),uVelocity:new N(null)}),this.curlMesh=this.createShaderMesh(Yw,{texelSize:new N(this.texelSize),uVelocity:new N(null)}),this.vorticityMesh=this.createShaderMesh($w,{texelSize:new N(this.texelSize),uVelocity:new N(null),uCurl:new N(null),curl:new N(this.curlStrength),dt:new N(.016)}),this.pressureMesh=this.createShaderMesh(Zw,{texelSize:new N(this.texelSize),uPressure:new N(null),uDivergence:new N(null)}),this.gradientSubtractMesh=this.createShaderMesh(jw,{texelSize:new N(this.texelSize),uPressure:new N(null),uVelocity:new N(null)})}createShaderMesh(e,t){const i=new _t({vertexShader:Hw,fragmentShader:e,uniforms:{...t},depthTest:!1,depthWrite:!1}),n=new pt(this.sizes.width,this.sizes.height);return new rt(n,i)}splat({x:e,y:t,dx:i,dy:n}){this.splatMesh.material.uniforms.uTarget.value=this.velocity.read.texture,this.splatMesh.material.uniforms.aspectRatio.value=this.sizes.width/this.sizes.height,this.splatMesh.material.uniforms.point.value.set(e,t),this.splatMesh.material.uniforms.color.value.set(i,n,1),this.splatMesh.material.uniforms.radius.value=this.radius/100,this.renderer.setRenderTarget(this.velocity.write),this.renderer.render(this.splatMesh,this.camera),this.velocity.swap(),this.splatMesh.material.uniforms.uTarget.value=this.density.read.texture,this.splatMesh.material.uniforms.color.value.set(this.outputColor),this.renderer.setRenderTarget(this.density.write),this.renderer.render(this.splatMesh,this.camera),this.density.swap()}simulateFluid(){for(let e=this.splats.length-1;e>=0;e--)this.splat(this.splats.splice(e,1)[0]);this.curlMesh.material.uniforms.uVelocity.value=this.velocity.read.texture,this.renderer.setRenderTarget(this.curl),this.renderer.render(this.curlMesh,this.camera),this.vorticityMesh.material.uniforms.uVelocity.value=this.velocity.read.texture,this.vorticityMesh.material.uniforms.uCurl.value=this.curl.texture,this.renderer.setRenderTarget(this.velocity.write),this.renderer.render(this.vorticityMesh,this.camera),this.velocity.swap(),this.divergenceMesh.material.uniforms.uVelocity.value=this.velocity.read.texture,this.renderer.setRenderTarget(this.divergence),this.renderer.render(this.divergenceMesh,this.camera),this.clearMesh.material.uniforms.uTexture.value=this.pressure.read.texture,this.clearMesh.material.uniforms.value.value=this.pressureDissipation,this.renderer.setRenderTarget(this.pressure.write),this.renderer.render(this.clearMesh,this.camera),this.pressure.swap(),this.pressureMesh.material.uniforms.uDivergence.value=this.divergence.texture;for(let e=0;e<this.iterations;e++)this.pressureMesh.material.uniforms.uPressure.value=this.pressure.read.texture,this.renderer.setRenderTarget(this.pressure.write),this.renderer.render(this.pressureMesh,this.camera),this.pressure.swap();this.gradientSubtractMesh.material.uniforms.uPressure.value=this.pressure.read.texture,this.gradientSubtractMesh.material.uniforms.uVelocity.value=this.velocity.read.texture,this.renderer.setRenderTarget(this.velocity.write),this.renderer.render(this.gradientSubtractMesh,this.camera),this.velocity.swap(),this.advectionMesh.material.uniforms.dyeTexelSize.value.copy(this.texelSize),this.advectionMesh.material.uniforms.uVelocity.value=this.velocity.read.texture,this.advectionMesh.material.uniforms.uSource.value=this.velocity.read.texture,this.advectionMesh.material.uniforms.dissipation.value=this.velocityDissipation,this.renderer.setRenderTarget(this.velocity.write),this.renderer.render(this.advectionMesh,this.camera),this.velocity.swap(),this.advectionMesh.material.uniforms.dyeTexelSize.value.copy(this.dyeTexelSize),this.advectionMesh.material.uniforms.uVelocity.value=this.velocity.read.texture,this.advectionMesh.material.uniforms.uSource.value=this.density.read.texture,this.advectionMesh.material.uniforms.dissipation.value=this.densityDissipation,this.renderer.setRenderTarget(this.density.write),this.renderer.render(this.advectionMesh,this.camera),this.renderer.setRenderTarget(null),this.density.swap(),this.gl.fluidTexture=this.density.read.texture}resize(){this.radius=.3*window.innerWidth*7e-4,this.texelSize.set(1/this.simRes,1/this.simRes),this.dyeTexelSize.set(1/this.dyeRes,1/this.dyeRes),this.updateTexelSizeUniforms()}updateTexelSizeUniforms(){[this.clearMesh,this.splatMesh,this.advectionMesh,this.divergenceMesh,this.curlMesh,this.vorticityMesh,this.pressureMesh,this.gradientSubtractMesh].forEach(t=>{t&&t.material&&t.material.uniforms.texelSize&&t.material.uniforms.texelSize.value.copy(this.texelSize),xi(t,new pt(this.sizes.width,this.sizes.height))})}update(){this.simulateFluid()}getMouse(e,t){const i=e.clientX/this.sizes.width,n=1-e.clientY/this.sizes.height;if(this.lastMouse.x<0){this.lastMouse.set(i,n);return}const s=(i-this.lastMouse.x)*this.splatForce,o=(n-this.lastMouse.y)*this.splatForce;this.lastMouse.set(i,n),(Math.abs(s)>0||Math.abs(o)>0)&&this.splats.push({x:i,y:n,dx:s,dy:o})}}class Kw extends wn{constructor(e,t,i){if(super(),this.app=t,this.main=i,this.scroll=this.app.scroll.lenis,this.sizes=this.app.sizes,window.innerWidth<991){this.app.onceLoaded||(this.app.page.triggerLoad(),this.app.globalLoader.tl.play());return}this.canvas=e,this.scene=new pc,this.camera=new kw(this.app,this,this.scene),this.renderer=new Vw(this.app,this),this.loadWorld(this.main),this.app.debug.active&&(this.stats=new Bw({trackGPU:!0}),this.stats.init(this.renderer.instance),document.body.appendChild(this.stats.dom),this.stats.dom.style.left="50%",this.stats.dom.style.translate="-50%"),this.initWidth=window.innerWidth,this.app.on("tick",()=>this.update()),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy()),this.fluid=new Jw(this.app,this),this.mouse=new G,window.addEventListener("mousemove",n=>this.onMouseMove(n)),this.scroll.on("scroll",n=>this.setScroll(n))}onMouseMove(e){var t,i;this.mouse.x=e.clientX/window.innerWidth*2-1,this.mouse.y=e.clientY/window.innerHeight*-2+1,(t=this.displacement)==null||t.onMouseMove(e,this.mouse),(i=this.fluid)==null||i.getMouse(e,this.mouse),this.world&&this.loaded&&this.world.onMouseMove(e,this.mouse)}setScroll(e){this.world&&this.loaded&&this.world.setScroll(e)}resize(){var e;this.camera.resize(),this.renderer.resize(),(e=this.fluid)==null||e.resize(),this.world&&this.loaded&&setTimeout(()=>this.world.resize(),10)}update(){var e,t;document.hidden||(this.camera.update(),(e=this.displacement)==null||e.update(),(t=this.fluid)==null||t.update(),this.world&&this.loaded&&this.world.update(),this.renderer.update(),this.stats&&this.stats.update())}destroy(){this.world&&(this.world.destroy(),this.world=null),this.loaded=!1}async loadWorld(e){switch(this.world&&(this.world.destroy(),this.world=null),this.loaded=!1,e.getAttribute("data-transition-page")){case"home":await Oe(()=>Promise.resolve().then(()=>gM),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href).then(i=>this.world=new i.default(this,this.app,this.scene,e));break;case"cases":await Oe(()=>Promise.resolve().then(()=>_M),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href).then(i=>this.world=new i.default(this,this.app,this.scene,e));break;case"services":await Oe(()=>Promise.resolve().then(()=>MM),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href).then(i=>this.world=new i.default(this,this.app,this.scene,e));break;case"fintech":await Oe(()=>Promise.resolve().then(()=>IM),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href).then(i=>this.world=new i.default(this,this.app,this.scene,e));break;default:await Oe(()=>Promise.resolve().then(()=>BM),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href).then(i=>this.world=new i.default(this,this.app,this.scene,e))}}}const Qw=Object.freeze(Object.defineProperty({__proto__:null,default:Kw},Symbol.toStringTag,{value:"Module"}));class eS{constructor(e){this.app=e,this.instance=document.querySelector("nav"),this.top=this.instance.querySelector(".nav_top"),this.items=this.instance.querySelectorAll(".nav_item"),this.navDots=this.instance.querySelector(".nav_dots"),this.navLogo=this.instance.querySelector(".nav_logo"),this.items.forEach((t,i)=>{const n=.05*i+.1;t.style.setProperty("--delay",`${n}s`)}),this.setupEventListeners(),this.resize(),this.app.on("resize",()=>this.resize())}setupEventListeners(){this.top.addEventListener("click",e=>{window.innerWidth>=991||this.navLogo&&this.navLogo.contains(e.target)||this.toggleMenu()}),this.navDots.addEventListener("click",e=>{e.stopPropagation(),this.toggleMenu()}),this.setupClickOutside()}toggleMenu(){this.instance.classList.contains("active")?this.instance.classList.remove("active"):this.instance.classList.add("active")}setupClickOutside(){document.addEventListener("click",e=>{!this.instance.classList.contains("active")||window.innerWidth>=991||this.instance.contains(e.target)||this.instance.classList.remove("active")})}resize(){const e=this.top.offsetHeight;this.instance.style.setProperty("--topHeight",`${e}px`)}}const tS=Object.freeze(Object.defineProperty({__proto__:null,default:eS},Symbol.toStringTag,{value:"Module"}));class iS{constructor(e,t,i){this.app=i,this.toLoad=t,this.main=e.container,this.container=e,this.app.globalLoader=this,this.loader=document.querySelector(".loader"),this.nav=document.querySelector(".nav"),this.navLogo=this.nav.querySelector(".nav_logo"),this.navDots=this.nav.querySelector(".nav_dots"),this.loaderText=this.loader.querySelectorAll(".f-48"),this.loaderLayer=this.loader.querySelectorAll(".loader_layer"),this.loaderLogo=this.loaderLayer[0].querySelector(".loader_logo"),this.progress={value:0},gsap.to([this.main],{autoAlpha:1}),this.tl=gsap.timeline({defaults:{ease:"power2",duration:1},paused:!0,onComplete:()=>{this.loader.classList.add("loaded"),this.loader.classList.add("hidden"),gsap.to(this.nav,{autoAlpha:1}),this.app.onceLoaded=!0}}),this.tl.fromTo(this.progress,{value:0},{value:70,onUpdate:()=>this.updateTextProgress(),onComplete:()=>this.load()},.2).addLabel("start",">").to(this.progress,{value:100,duration:.8,ease:"power2.inOut",onUpdate:()=>this.updateTextProgress()},">").fromTo(this.loader,{"--clip":0},{"--clip":100,duration:.8},"<0.5"),this.tl.tweenTo("start")}updateTextProgress(){const e=Math.round(this.progress.value);this.loaderText.forEach(t=>{t.textContent=e+"%"}),this.loaderLayer[1].style.setProperty("--clip",this.progress.value)}async load(){await this.toLoad(this.main,this.app)}}const nS=Object.freeze(Object.defineProperty({__proto__:null,default:iS},Symbol.toStringTag,{value:"Module"}));class sS{constructor(e,t){this.main=e,this.app=t,this.destroyed=!1,document.querySelector("nav").style.setProperty("--progress",0),this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.scroll=ScrollTrigger.create({trigger:this.main,start:"top top",end:"bottom bottom",onUpdate:e=>{document.querySelector("nav").style.setProperty("--progress",e.progress)}})}resize(){var e;this.destroyed||((e=this.scroll)==null||e.kill(),this.init())}destroy(){this.destroyed||(this.destroyed=!0)}}const rS=Object.freeze(Object.defineProperty({__proto__:null,default:sS},Symbol.toStringTag,{value:"Module"}));class oS{constructor(e,t,i){this.element=e,this.main=t,this.app=i,this.destroyed=!1,this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){const e=this.getCustomAspectRatio();e&&e.ratio?this.element.style.aspectRatio=e.ratio:this.element.style.aspectRatio="auto"}resize(){this.destroyed}destroy(){this.destroyed||(this.destroyed=!0)}getCustomAspectRatio(){const e=this.element.dataset.aspectMobile,t=this.element.dataset.aspect;let i,n;if(this.isMobile&&e?(i=e,n="data-aspect-mobile"):t&&(i=t,n="data-aspect"),i){if(i==="auto")return null;const o=this.parseAspectRatio(i);if(o)return{width:o.width,height:o.height,ratio:o.ratio,source:n}}const s=this.getAspectRatioFromCSS(this.element);return s?{width:s.width,height:s.height,ratio:s.ratio,source:"CSS aspect-ratio"}:null}parseAspectRatio(e){if(!e)return null;if(e.includes(":")){const[i,n]=e.split(":").map(Number);if(i&&n)return{width:i,height:n,ratio:i/n}}if(e.includes("/")){const[i,n]=e.split("/").map(Number);if(i&&n)return{width:i,height:n,ratio:i/n}}const t=parseFloat(e);return!isNaN(t)&&t>0?{ratio:t,width:null,height:null}:null}}const aS=Object.freeze(Object.defineProperty({__proto__:null,default:oS},Symbol.toStringTag,{value:"Module"}));class Hr{constructor(e,t,i=!1){this.instance=e,this.app=t,this.isVisible=!1,this.reAnimate=i,this.hasAnimated=!1,this.setupObserver(),this.app.on("destroy",()=>this.destroy())}setupObserver(){this.app.animationObserver.instance.observe(this.instance),this.startVisibilityCheck()}startVisibilityCheck(){const e=()=>{const t=this.instance.dataset.animationVisible==="true";if(t&&!this.isVisible){if(this.app.isTransitioning)return;(this.reAnimate||!this.hasAnimated)&&this.animateIn()}else!t&&this.isVisible&&this.reAnimate&&this.animateOut();requestAnimationFrame(e)};e()}animateIn(){this.isVisible=!0,this.hasAnimated=!0}animateOut(){this.isVisible=!1}destroy(){}}class lS extends Hr{constructor(e,t){super(e,t),this.init()}init(){gsap.set(this.instance.parentElement,{perspective:1e3,perspectiveOrigin:"center center"}),gsap.set(this.instance,{transformOrigin:"center center",transformStyle:"preserve-3d"}),this.tl=gsap.timeline({paused:!0,defaults:{ease:"power3.out",duration:1}}),this.tl.fromTo(this.instance,{autoAlpha:0,rotationZ:-18,rotationY:45,rotationX:-45,scale:.4},{autoAlpha:1,rotationZ:0,rotationY:0,rotationX:0,scale:1})}animateIn(){this.tl&&!this.isVisible&&(this.tl.play(),super.animateIn())}animateOut(){this.tl&&this.isVisible&&(this.tl.pause(0),super.animateOut())}destroy(){var e;(e=this.tl)==null||e.kill(),super.destroy()}}const cS=Object.freeze(Object.defineProperty({__proto__:null,default:lS},Symbol.toStringTag,{value:"Module"}));class hS{constructor(e,t){this.instance=e,this.app=t,this.destroyed=!1,this.enterPlayed=!1,this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.instance.dataset.scroll!="false"&&(this.tlEnter=gsap.timeline({paused:!0,defaults:{ease:"power1",duration:.8}}),this.tlEnter.fromTo(this.instance,{opacity:0,y:"20%"},{y:"0%",opacity:1}),this.scroll=ScrollTrigger.create({trigger:this.instance,start:"top 80%",onEnter:()=>this.tlEnter.play()}),this.srcollBack=ScrollTrigger.create({trigger:this.instance,start:"top bottom",onLeaveBack:()=>this.tlEnter.pause(0)}))}resize(){var e,t,i,n;this.destroyed||(this.enterPlayed=!1,(e=this.tl)==null||e.kill(),(t=this.tlEnter)==null||t.kill(),(i=this.scroll)==null||i.kill(),(n=this.srcollBack)==null||n.kill(),this.init())}destroy(){this.destroyed||(this.destroyed=!0)}}const uS=Object.freeze(Object.defineProperty({__proto__:null,default:hS},Symbol.toStringTag,{value:"Module"}));class dS{constructor(e,t){this.instance=e,this.app=t,this.destroyed=!1,this.calLoaded=!1,this.calNamespace=this.generateNamespace(),this.calendarId=`my-cal-inline-${Math.random().toString(36).substr(2,9)}`,this.lastHeight=0,this.heightObserver=null,this.config=this.getConfigFromAttributes(),this.init(),this.app.on("destroy",()=>this.destroy()),this.app.on("resize",()=>this.resize()),this.app.on("pageEnter",()=>this.onPageTransition()),this.app.on("pageReady",()=>this.onPageTransition())}generateNamespace(){return`cal_${Math.random().toString(36).substr(2,9)}`}getConfigFromAttributes(){return{calLink:this.instance.dataset.calLink||"skvarenina/30min",theme:this.instance.dataset.theme||"dark",layout:this.instance.dataset.layout||"month_view",hideEventTypeDetails:this.instance.dataset.hideEventTypeDetails!=="true"}}init(){this.createCalendarContainer(),this.loadCalScript()}createCalendarContainer(){this.instance.innerHTML="",this.calendarDiv=document.createElement("div"),this.calendarDiv.id=this.calendarId,this.calendarDiv.style.width="100%",this.calendarDiv.style.height=window.innerWidth<992?"auto":"100%",this.calendarDiv.style.scrollbarWidth="none",this.instance.appendChild(this.calendarDiv)}loadCalScript(){if(window.Cal){this.initCalendar();return}if(window.calScriptLoading){const i=()=>{window.Cal?this.initCalendar():setTimeout(i,100)};i();return}if(window.calScriptLoading=!0,document.querySelector('script[src*="cal.com/embed/embed.js"]')){this.initCalendar();return}this.initCalLoader();const t=()=>{window.Cal?(window.calScriptLoading=!1,this.initCalendar()):setTimeout(t,100)};t()}initCalLoader(){window.Cal||(function(e,t,i){let n=function(o,a){o.q.push(a)},s=e.document;e.Cal=e.Cal||function(){let o=e.Cal,a=arguments;if(o.loaded||(o.ns={},o.q=o.q||[],s.head.appendChild(s.createElement("script")).src=t,o.loaded=!0),a[0]===i){const l=function(){n(l,arguments)},c=a[1];l.q=l.q||[],typeof c=="string"?(o.ns[c]=o.ns[c]||l,n(o.ns[c],a),n(o,["initNamespace",c])):n(o,a);return}n(o,a)}})(window,"https://app.cal.com/embed/embed.js","init")}initCalendar(){if(!window.Cal){console.error("Cal.com script not loaded");return}if(!this.destroyed)try{window.Cal("init",this.calNamespace,{origin:"https://cal.com"}),setTimeout(()=>{this.destroyed||(window.Cal.ns[this.calNamespace]("inline",{elementOrSelector:`#${this.calendarId}`,config:{layout:this.config.layout,theme:this.config.theme},calLink:this.config.calLink}),window.Cal.ns[this.calNamespace]("ui",{theme:this.config.theme,hideEventTypeDetails:this.config.hideEventTypeDetails,layout:this.config.layout}),this.calInstance=window.Cal.ns[this.calNamespace],this.onCalendarLoaded())},200)}catch(e){console.error("Error initializing Cal.com calendar:",e)}}onCalendarLoaded(){this.startHeightMonitoring(),setTimeout(()=>ScrollTrigger.refresh(),100)}startHeightMonitoring(){!this.calendarDiv||this.destroyed||(window.ResizeObserver?(this.heightObserver=new ResizeObserver(e=>{for(let t of e){const i=t.contentRect.height;Math.abs(i-this.lastHeight)>50&&(this.lastHeight=i,setTimeout(()=>{this.destroyed||ScrollTrigger.refresh()},300))}}),this.heightObserver.observe(this.calendarDiv)):this.heightPolling=setInterval(()=>{if(this.destroyed)return;const e=this.calendarDiv.offsetHeight;Math.abs(e-this.lastHeight)>50&&(this.lastHeight=e,ScrollTrigger.refresh())},1e3))}stopHeightMonitoring(){this.heightObserver&&(this.heightObserver.disconnect(),this.heightObserver=null),this.heightPolling&&(clearInterval(this.heightPolling),this.heightPolling=null)}onPageTransition(){this.destroyed||setTimeout(()=>{!this.destroyed&&this.calInstance&&ScrollTrigger.refresh()},500)}updateConfig(e){if(!this.calInstance){console.warn("Calendar not initialized yet");return}try{this.calInstance("ui",e)}catch(t){console.error("Error updating calendar config:",t)}}setTheme(e="dark"){this.config.theme=e,this.updateConfig({theme:e,hideEventTypeDetails:this.config.hideEventTypeDetails,layout:this.config.layout,scrollbarWidth:"none"})}resize(){this.destroyed||!this.calInstance||setTimeout(()=>{if(this.calInstance&&!this.destroyed)try{this.calInstance("ui",{theme:this.config.theme,hideEventTypeDetails:this.config.hideEventTypeDetails,layout:this.config.layout,scrollbarWidth:"none"})}catch(e){console.error("Error resizing calendar:",e)}},100)}destroy(){if(!this.destroyed){if(this.destroyed=!0,this.stopHeightMonitoring(),this.calendarDiv&&(this.calendarDiv.innerHTML=""),window.Cal&&window.Cal.ns&&window.Cal.ns[this.calNamespace])try{delete window.Cal.ns[this.calNamespace]}catch(e){console.warn("Could not clean up Cal.com namespace:",e)}this.calInstance=null}}}const fS=Object.freeze(Object.defineProperty({__proto__:null,default:dS},Symbol.toStringTag,{value:"Module"}));class pS extends Hr{constructor(e,t){super(e,t),this.splits=[],this.tl=null,this.init()}init(){if(this.instance.dataset.scroll==="false"||(this.caseItems=this.instance.querySelectorAll(".cases_item"),this.caseItems.length===0))return;this.caseItems.forEach(t=>{t.querySelectorAll(".cases_item_text").forEach(n=>{if(n.textContent.trim().length>0){const s=new SplitText(n,{type:"lines"}),o=new SplitText(n,{type:"lines"});this.splits.push(s),gsap.set(o.lines,{overflow:"clip"}),gsap.set(s.lines,{y:"120%"})}})}),this.tl=gsap.timeline({paused:!0,defaults:{duration:1,ease:"power3.out"}}),this.caseImages=this.instance.querySelectorAll(".cases_image"),this.caseImages.length>0&&(gsap.set(this.caseImages,{transformOrigin:"bottom",transformStyle:"preserve-3d"}),this.tl.fromTo(this.caseImages,{yPercent:40,rotateY:12,rotateX:45,opacity:0},{yPercent:0,rotateY:0,rotateX:0,opacity:1,stagger:.08},0));const e=this.splits.map(t=>t.lines).flat();e.length>0&&this.tl.fromTo(e,{y:"120%"},{y:"0%",stagger:.08,ease:"power3.out"},.5)}animateIn(){this.tl&&!this.isVisible&&(this.tl.play(),super.animateIn())}animateOut(){this.tl&&this.isVisible&&(this.tl.pause(0),super.animateOut())}destroy(){var e;this.splits.forEach(t=>t.revert()),(e=this.tl)==null||e.kill(),super.destroy()}}const mS=Object.freeze(Object.defineProperty({__proto__:null,default:pS},Symbol.toStringTag,{value:"Module"}));class gS{constructor(e,t){this.instance=e,this.app=t,this.text=this.instance.children.length>0?this.instance.children:this.instance,this.destroyed=!1,this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.instance.dataset.scroll!=="false"&&this.instance.dataset.splitTextProcessed!=="true"&&(this.split=new SplitText(this.text,{type:"lines",mask:"lines"}),this.instance.dataset.splitTextProcessed="true",gsap.set(this.split.lines,{paddingBottom:"0.1em",marginBottom:"-0.1em",perspective:1e3}),this.tl=gsap.timeline({paused:!0,defaults:{duration:1.2},onComplete:()=>this.split.revert()}),this.tl.fromTo(this.split.lines,{yPercent:120},{yPercent:0,stagger:.1,ease:"power3",stagger:.1},"<0.2").fromTo(this.split.lines,{rotateX:"-35deg",rotateY:"-5deg",z:"-1rem",transformStyle:"preserve-3d",transformOrigin:"50% 0"},{rotateX:"0deg",rotateY:"0deg",z:"0rem",stagger:.1,ease:"power2",stagger:.1},"<"),this.scroll=ScrollTrigger.create({trigger:this.instance,start:"top 90%",onEnter:()=>{this.tl.play()}}),this.srcollBack=ScrollTrigger.create({trigger:this.instance,start:"top bottom",onLeaveBack:()=>{this.tl.pause(0)}}))}resize(){var e,t,i,n;this.destroyed||(this.played=!1,(e=this.split)==null||e.revert(),(t=this.tl)==null||t.kill(),(i=this.scroll)==null||i.kill(),(n=this.srcollBack)==null||n.kill(),this.init())}destroy(){var e,t,i,n;this.destroyed||(this.destroyed=!0,(e=this.split)==null||e.revert(),this.instance.dataset.splitTextProcessed="false",(t=this.tl)==null||t.kill(),(i=this.scroll)==null||i.kill(),(n=this.srcollBack)==null||n.kill())}}const vS=Object.freeze(Object.defineProperty({__proto__:null,default:gS},Symbol.toStringTag,{value:"Module"}));class yS{constructor(e,t,i){this.instance=e,this.app=t,this.main=i,this.app.cursor=this,this.instance.classList.add("loaded"),this.destroyed=!1,this.cursor=this.instance.querySelector(".cursor"),this.cursorText=this.instance.querySelector(".heading_span"),this.triggers=this.main.querySelectorAll("[data-cursor-trigger]"),this.lastTrigger=null,this.quicks={x:gsap.quickTo(this.cursor,"x",{duration:.3,ease:"power2"}),y:gsap.quickTo(this.cursor,"y",{duration:.3,ease:"power2"})},window.addEventListener("mousemove",n=>{if(this.destroyed)return;const s=this.cursor.getBoundingClientRect().width/2,o={x:(n.clientX/window.innerWidth-.5)*2,y:(n.clientY/window.innerHeight-.5)*2},a=gsap.utils.clamp(0,1,gsap.utils.mapRange(.9,1,0,1,Math.abs(o.x))),l=gsap.utils.clamp(0,1,gsap.utils.mapRange(.9,1,0,1,Math.abs(o.y)));let c=o.x*window.innerWidth/2;o.x<0?c+=s*a:c-=s*a;let h=o.y*window.innerHeight/2;o.y<0?h+=s*l:h-=s*l,this.quicks.x(c),this.quicks.y(h)}),this.tl=gsap.timeline({paused:!0,onReverseComplete:()=>{this.lastTrigger.dataset.cursorTrigger==="Scroll"&&this.cursor.classList.remove("stroke")}}),this.tl.fromTo(this.cursor,{scale:0},{scale:1,duration:.4,ease:"power2"}),this.triggers.forEach(n=>{const s=n.getAttribute("data-cursor-trigger");n.addEventListener("mouseenter",()=>{n.dataset.cursorTrigger==="Scroll"&&this.cursor.classList.add("stroke"),this.tl.play(),this.cursorText.textContent=n.dataset.cursorTrigger==="Scroll Text"?"Scroll":s,this.lastTrigger=n}),n.addEventListener("mouseleave",()=>{this.tl.reverse()})}),this.app.on("destroy",()=>this.destroy())}destroy(){this.destroyed||(this.destroyed=!0)}}const xS=Object.freeze(Object.defineProperty({__proto__:null,default:yS},Symbol.toStringTag,{value:"Module"}));class _S extends Hr{constructor(e,t,i){super(e,t),this.main=i,this.init()}init(){this.clocks=this.instance.querySelectorAll(".footer_clock-item"),this.clockLines=this.instance.querySelectorAll(".footer_clock-lines"),this.links=this.instance.querySelectorAll(".footer_link"),this.clockData=[],this.clocks.forEach((e,t)=>{const i=e.querySelector("[data-city]"),n=e.querySelector("[data-time]"),s=e.querySelector(".footer_clock-lines"),o={London:"Europe/London",Bangkok:"Asia/Bangkok",Bucharest:"Europe/Bucharest"},a=i.textContent.trim(),l=o[a];l&&(this.clockData.push({clock:e,timeDiv:n,timezone:l,clockLines:s}),e.style.setProperty("--time",0))}),this.startTimeUpdates()}getTime(e){const t=new Date().toLocaleString("en-US",{timeZone:e,hour12:!1,hour:"2-digit",minute:"2-digit"}),[i,n]=t.split(":").map(Number),s=n*6,o=i%12*30+n*.5;return{time:t,minuteRotation:s,totalMinutes:o}}startTimeUpdates(){const e=()=>{this.clockData.forEach(i=>{const{timeDiv:n,timezone:s,clock:o}=i,{time:a,totalMinutes:l}=this.getTime(s);n.textContent=a,this.hasAnimated&&o.style.setProperty("--time",l)})};e();const t=setInterval(()=>{e(),this.destroyed&&clearInterval(t)},1e4)}animateIn(){this.hasAnimated||this.animateClocks(),super.animateIn()}animateOut(){super.animateOut()}animateClocks(){this.clockData.forEach((e,t)=>{const{clock:i,timezone:n}=e,{totalMinutes:s}=this.getTime(n),o=360+s;gsap.to(i,{"--time":o,duration:1.6+t*.3,ease:"power2.out",onComplete:()=>{i.style.setProperty("--time",s)}})})}destroy(){this.destroyed=!0,super.destroy()}}const bS=Object.freeze(Object.defineProperty({__proto__:null,default:_S},Symbol.toStringTag,{value:"Module"}));class wS{constructor(e,t,i){this.instance=e,this.app=t,this.main=i,this.destroyed=!1,this.wrapper=this.instance.querySelector(".full_wrapper"),this.items=this.instance.querySelectorAll(".full_item"),this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.splits=[],this.scrolls=[],gsap.set(this.wrapper,{height:this.items.length*150+150+"svh"}),ScrollTrigger.refresh(),this.height=this.instance.getBoundingClientRect().height,this.itemPart=this.height/(this.items.length+.3),this.items.forEach((e,t)=>{const i=e.querySelector(".f-64"),n=e.querySelector("p"),s=e.querySelector("video"),o=e.querySelector(".full_button"),a=new SplitText(i,{type:"lines",linesClass:"full_line"}),l=new SplitText(i,{type:"lines",linesClass:"full_line-parent"}),c=new SplitText(n,{type:"lines",linesClass:"full_line"}),h=new SplitText(n,{type:"lines",linesClass:"full_line-parent"});this.splits.push(c,a,h);const d=[...l.lines],u=[...h.lines],f=[...a.lines],m=[...c.lines],v=[...d,...u],g=[...f,...m];gsap.set(v,{overflow:"hidden",perspective:1e3,perspectiveOrigin:"center center"}),gsap.set(g,{y:"120%",rotateX:"-45deg",transformOrigin:"center bottom",transformStyle:"preserve-3d"});const p=gsap.timeline({paused:!0});if(p.to(f,{y:"0%",rotateX:"0deg",duration:.8,ease:"power3.out",stagger:.1},0).to(m,{y:"0%",rotateX:"0deg",duration:.8,ease:"power3.out",stagger:.1},.05),o&&window.innerWidth<=991&&(gsap.set(o,{opacity:0,y:20,scale:.8}),p.to(o,{opacity:1,y:0,scale:1,duration:.6,ease:"power3.out"},">")),e.textTl=p,c.lines.forEach((x,y)=>{const _=y*.1+.1;x.style.setProperty("--delay",_+"s")}),a.lines.forEach((x,y)=>{const _=y*.1+.1;x.style.setProperty("--delay",_+"s")}),s&&window.innerWidth<=991){gsap.set(s.parentElement,{perspective:1e3,perspectiveOrigin:"center center"}),gsap.set(s,{transformOrigin:"center center",transformStyle:"preserve-3d",opacity:0,rotationZ:-18,rotationY:45,rotationX:-45,scale:.4});const x=gsap.timeline({paused:!0});x.to(s,{opacity:1,rotationZ:0,rotationY:0,rotationX:0,scale:1,duration:1,ease:"power3.out"}),e.mobileTl=x}this.scrolls[t]=ScrollTrigger.create({trigger:e,start:`top center-=${this.itemPart*t}`,end:`+=${this.itemPart}`,onEnter:()=>{var x,y,_,C,T;if(this.items.forEach(A=>{A.classList.remove("active"),A.textTl&&A.textTl.pause(0)}),e.classList.add("active"),e.classList.add("show-bg"),window.innerWidth<991){this.items.forEach(A=>{A.querySelector("video")&&A.mobileTl&&A.mobileTl.pause(0)}),e.mobileTl&&e.mobileTl.play(),e.textTl&&e.textTl.play();return}(T=(C=(_=(y=(x=this.app.gl)==null?void 0:x.world)==null?void 0:y.full)==null?void 0:_.meshs)==null?void 0:C[t])!=null&&T.tl&&this.app.gl.world.full.meshs[t].tl.play(),e.textTl&&e.textTl.play()},onEnterBack:()=>{if(this.items.forEach(x=>{x.classList.remove("active"),x.textTl&&x.textTl.pause(0)}),e.classList.add("active"),window.innerWidth<991){this.items.forEach(x=>{x.mobileTl&&x.mobileTl.pause(0)}),e.mobileTl&&e.mobileTl.play(),e.textTl&&e.textTl.play();return}e.textTl&&e.textTl.play()},onLeaveBack:()=>{var x,y,_,C,T;if(e.classList.remove("show-bg"),e.textTl&&e.textTl.reverse(),window.innerWidth<991){e.mobileTl&&e.mobileTl.reverse();return}(T=(C=(_=(y=(x=this.app.gl)==null?void 0:x.world)==null?void 0:y.full)==null?void 0:_.meshs)==null?void 0:C[t])!=null&&T.tl&&this.app.gl.world.full.meshs[t].tl.reverse()}})})}resize(){this.destroyed}destroy(){this.destroyed||(this.destroyed=!0)}}const SS=Object.freeze(Object.defineProperty({__proto__:null,default:wS},Symbol.toStringTag,{value:"Module"}));class MS{constructor(e,t){this.instance=e,this.app=t,this.list=this.instance.querySelector(".goals_list"),this.items=this.list.querySelectorAll(".goals_item"),this.destroyed=!1,this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.sectionHeight=this.instance.offsetHeight-window.innerHeight*.8,this.itemPart=this.sectionHeight/this.items.length,this.splits=[...this.items].map(e=>{const t=e.querySelector(".v-flex-left-center"),i=e.querySelector(".v-flex-right-center"),n=new SplitText(t.querySelector("p"),{type:"lines",linesClass:"line"}),s=new SplitText(t.querySelector("p"),{type:"lines",linesClass:"line-parent"}),o=new SplitText(i.querySelector("p"),{type:"lines",linesClass:"line"}),a=new SplitText(i.querySelector("p"),{type:"lines",linesClass:"line-parent"}),l=[...s.lines,...a.lines];gsap.set(l,{overflow:"hidden",perspective:1e3,perspectiveOrigin:"center center"});const c=[...n.lines,...o.lines];return gsap.set(c,{y:"120%",rotateX:"-35deg",transformOrigin:"center bottom",transformStyle:"preserve-3d"}),{title:n,descr:o}}),this.mastelTL=gsap.timeline({paused:!0,defaults:{ease:"none"}}),this.tls=[...this.items].map((e,t)=>{const i=this.splits[t],n=gsap.timeline({defaults:{ease:"power3",duration:Ti.duration,stagger:{from:"center",each:Ti.stagger}}});t>0&&n.to(this.splits[t-1].title.lines,{rotateX:"-35deg",z:"-1rem",y:"120%",transformStyle:"preserve-3d",transformOrigin:"50% 0",stagger:.1,duration:.8},0).to(this.splits[t-1].descr.lines,{rotateX:"-35deg",z:"-1rem",y:"120%",transformStyle:"preserve-3d",transformOrigin:"50% 0",stagger:.1,duration:.8},0).to(this.items[t-1].querySelector(".goals_number"),{rotateX:"-15deg",z:"-1rem",y:"120%",transformStyle:"preserve-3d",transformOrigin:"50% 0",duration:1.2},0),n.fromTo(i.title.lines,{y:"120%"},{y:"0%",stagger:.1,ease:"power3"},"<50%").fromTo(i.title.lines,{rotateX:"-35deg",z:"-1rem",transformStyle:"preserve-3d",transformOrigin:"50% 0"},{rotateX:"0deg",z:"0rem",stagger:.1,ease:"power2"},"<0.2").fromTo(i.descr.lines,{y:"120%"},{y:"0%",stagger:.1,ease:"power3"},"<0.1").fromTo(i.descr.lines,{rotateX:"-35deg",z:"-1rem",transformStyle:"preserve-3d",transformOrigin:"50% 0"},{rotateX:"0deg",z:"0rem",stagger:.1,ease:"power2"},"<0.2").fromTo(e.querySelector(".goals_number"),{y:"120%"},{y:"0%",ease:"power3",duration:2},"<0.2").fromTo(e.querySelector(".goals_number"),{rotateX:"-15deg",z:"-1rem",transformStyle:"preserve-3d",transformOrigin:"50% 0"},{rotateX:"0deg",z:"0rem",ease:"power2",duration:2},"<0.3");const s=t===0?0:">0.2";return this.mastelTL.add(n,s),n}),this.scroll=ScrollTrigger.create({trigger:this.instance,start:"top top",end:"bottom bottom+=150%",scrub:2,animation:this.mastelTL})}resize(){this.destroyed||(this.splits.forEach(e=>{e.title.revert(),e.descr.revert()}),this.tls.forEach(e=>e.kill()),this.mastelTL.kill(),this.scroll.kill(),this.init())}destroy(){this.destroyed||(this.destroyed=!0)}}const TS=Object.freeze(Object.defineProperty({__proto__:null,default:MS},Symbol.toStringTag,{value:"Module"}));class AS{constructor(e,t){this.instance=e,this.app=t,this.scroll=this.app.scroll.lenis,this.destroyed=!1,this.section=this.instance.querySelector(".h-cta"),this.items=this.instance.querySelectorAll(".h-cta_item"),this.section.style.setProperty("--length",`${this.items.length}`),ScrollTrigger.refresh(),this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.splits=[...this.items].map(e=>{const t=e.querySelector(".heading_span");return new SplitText(t,{type:"lines, words",mask:"words"})}),this.sectionHeight=this.section.offsetHeight-window.innerHeight*.8,this.itemPart=this.sectionHeight/this.items.length,this.masterTl=gsap.timeline({paused:!0,defaults:{ease:"none"}}),this.tls=[...this.items].map((e,t)=>{const i=this.splits[t],n=window.innerWidth<=992;gsap.set(i.lines,{paddingBottom:"0.1em",marginBottom:"-0.1em",perspective:n?"none":1e3});const s=gsap.timeline({defaults:{ease:"power3",duration:1}});t>0&&(n?s.to(this.splits[t-1].words,{yPercent:120,stagger:.1,duration:.8},0):s.to(this.splits[t-1].words,{rotateX:"-35deg",rotateY:"-5deg",z:"-1rem",yPercent:120,transformStyle:"preserve-3d",transformOrigin:"50% 0",stagger:.1,duration:.8},0)),s.fromTo(i.words,{yPercent:120},{yPercent:0,stagger:.1,ease:"power3",stagger:.1},"<50%"),n||s.fromTo(i.words,{rotateX:"-35deg",rotateY:"-5deg",z:"-1rem",transformStyle:"preserve-3d",transformOrigin:"50% 0"},{rotateX:"0deg",rotateY:"0deg",z:"0rem",stagger:.1,ease:"power2",stagger:.1},"<0.2");const o=t===0?0:">0.2";return this.masterTl.add(s,o),s}),this.scroll=ScrollTrigger.create({trigger:this.section,start:"top top",end:"bottom bottom",scrub:!0,animation:this.masterTl})}getTop(e){let t=0;for(;e&&e!==document.body;)t+=e.offsetTop||0,e=e.offsetParent;return t}resize(){this.destroyed||(this.splits.forEach(e=>e.revert()),this.tls.forEach(e=>e.kill()),this.masterTl.kill(),this.scroll.kill(),this.init())}destroy(){this.destroyed||(this.destroyed=!0)}}const ES=Object.freeze(Object.defineProperty({__proto__:null,default:AS},Symbol.toStringTag,{value:"Module"})),CS="cubic-bezier(0.77, 0, 0.175, 1)";class RS extends Hr{constructor(e,t){super(e,t),this.destroyed=!1,this.init(),this.app.on("resize",()=>this.resize())}init(){if(this.instance.dataset.scroll==="false")return;const e=this.instance.querySelectorAll(".line-animation");e.length>0&&gsap.set(e,{perspective:1e3,perspectiveOrigin:"center center"});const t=this.instance.querySelectorAll(".line-item");this.animationTargets=[],t.forEach(n=>{gsap.set(n.parentElement,{overflow:"hidden"}),gsap.set(n,{transformOrigin:"center bottom",transformStyle:"preserve-3d",y:"120%",rotateX:"-90deg"}),this.animationTargets.push(n)});const i=parseFloat(this.instance.dataset.delay)||0;this.tl=gsap.timeline({paused:!0,delay:i,defaults:{duration:.8,ease:CS}}),this.animationTargets.forEach((n,s)=>{this.tl.to(n,{y:"0%",rotateX:"0deg"},s*.1)})}animateIn(){this.tl&&!this.isVisible&&(this.tl.play(),super.animateIn())}animateOut(){this.tl&&this.isVisible&&(this.tl.pause(0),super.animateOut())}resize(){var e;this.destroyed||((e=this.tl)==null||e.kill(),this.init())}destroy(){var e;this.destroyed||(this.destroyed=!0,(e=this.tl)==null||e.kill(),super.destroy())}}const PS=Object.freeze(Object.defineProperty({__proto__:null,default:RS},Symbol.toStringTag,{value:"Module"})),IS=r=>{const e=r.querySelectorAll("img"),t=[...e].map(n=>{const s=n.getAttribute("src");return n.removeAttribute("srcset"),n.removeAttribute("src"),n.removeAttribute("loading"),s});let i=!1;ScrollTrigger.create({trigger:r,start:"top bottom+=150%",onEnter:()=>{i||(e.forEach((n,s)=>{const o=t[s];n.setAttribute("src",o)}),i=!0)}})};class Yt extends wn{constructor(e,t,i={}){super(),t&&typeof t=="object"&&!t.moduleLoader&&!t.scroll&&(t.timeout||t.lazyLoad!==void 0||t.rootMargin||t.threshold)&&(i=t,t=null),this.video=e.tagName==="VIDEO"?e:e.querySelector("video"),this.instance=e,this.app=t,this.options={timeout:i.timeout||15e3,lazyLoad:i.lazyLoad!==!1,rootMargin:i.rootMargin||"100px",threshold:i.threshold||.1},this.isLoaded=!1,this.isInView=!1,this.observer=null,this.loadingIndicator=null,this.isMobile=window.innerWidth<=992,this.isLowPowerMode=this.detectLowPowerMode(),this.video._videoLoaderInstance=this,this.isWebGLVideo=this.detectWebGLVideo(),this.source=this.video.querySelector("source");const n=this.source.getAttribute("data-src-mobile")||this.source.dataset.srcMobile,s=this.source.getAttribute("data-src")||this.source.dataset.src;this.src=this.isMobile&&n?n:s,(!this.options.lazyLoad||this.isWebGLVideo)&&this.source.setAttribute("src",this.src),this.init()}detectWebGLVideo(){const e=[".double-video",".cases_video",".preview_img",".talk_full"],t=this.video===this.instance?this.video.parentElement:this.instance;return e.some(i=>{const n=i.substring(1);if(t&&t.classList.contains(n))return!0;let s=t==null?void 0:t.parentElement;for(;s;){if(s.classList.contains(n))return!0;s=s.parentElement}return!1})}getCustomAspectRatio(){const e=[".double-video",".case_split-video"],t=this.video===this.instance?this.video.parentElement:this.instance,i=this.findContainerWithClass(t,e);if(!i)return null;const n=i.dataset.aspectMobile,s=i.dataset.aspect;let o,a;if(this.isMobile&&n?(o=n,a="data-aspect-mobile"):s&&(o=s,a="data-aspect"),o){const c=this.parseAspectRatio(o);if(c)return{width:c.width,height:c.height,ratio:c.ratio,source:a}}const l=this.getAspectRatioFromCSS(i);return l?{width:l.width,height:l.height,ratio:l.ratio,source:"CSS aspect-ratio"}:null}findContainerWithClass(e,t){let i=e;for(;i;){for(const n of t){const s=n.substring(1);if(i.classList&&i.classList.contains(s))return i}i=i.parentElement}return null}parseAspectRatio(e){if(!e)return null;if(e.includes(":")){const[i,n]=e.split(":").map(Number);if(i&&n)return{width:i,height:n,ratio:i/n}}if(e.includes("/")){const[i,n]=e.split("/").map(Number);if(i&&n)return{width:i,height:n,ratio:i/n}}const t=parseFloat(e);return!isNaN(t)&&t>0?{ratio:t,width:null,height:null}:null}getAspectRatioFromCSS(e){try{const i=window.getComputedStyle(e).getPropertyValue("aspect-ratio");return!i||i==="auto"?null:this.parseAspectRatio(i.replace(/\s+/g,""))}catch(t){return console.warn("Failed to read CSS aspect-ratio:",t),null}}init(){if(this.video.readyState>=3){this.isLoaded=!0,this.trigger("loaded"),this.setupDOMPlayback();return}!this.isMobile&&(this.isWebGLVideo||!this.options.lazyLoad)?this.startLoading():this.setupIntersectionObserver()}detectLowPowerMode(){if(window.matchMedia&&window.matchMedia("(prefers-reduced-motion: reduce)").matches)return!0;if(navigator.connection){const e=navigator.connection;return e.saveData||e.effectiveType==="slow-2g"||e.effectiveType==="2g"}return!1}setupIntersectionObserver(){if(!("IntersectionObserver"in window)){this.startLoading();return}this.observer=new IntersectionObserver(e=>{e.forEach(t=>{t.isIntersecting&&!this.isLoaded&&!this.isInView&&(this.isInView=!0,this.startLoading())})},{rootMargin:this.options.rootMargin,threshold:this.options.threshold}),this.observer.observe(this.video)}startLoading(){performance.now(),this.source.getAttribute("src")||this.source.setAttribute("src",this.src),this.setOptimalPreloadBehavior(),this.video.load(),this.addEventListeners(),this.startTimeout()}setOptimalPreloadBehavior(){this.isMobile||this.isLowPowerMode?(this.video.preload="metadata",this.setupUserInteractionUpgrade()):this.video.preload="auto"}setupUserInteractionUpgrade(){const e=t=>{this.video.preload="auto",this.video.load(),document.removeEventListener("touchstart",e,{passive:!0}),document.removeEventListener("scroll",e,{passive:!0}),document.removeEventListener("click",e)};document.addEventListener("touchstart",t=>e(),{passive:!0,once:!0}),document.addEventListener("scroll",t=>e(),{passive:!0,once:!0}),document.addEventListener("click",t=>e(),{once:!0})}addEventListeners(){this.video.addEventListener("canplaythrough",()=>{this.onVideoLoaded()},{once:!0}),this.video.addEventListener("error",e=>{this.onVideoError(e)},{once:!0})}startTimeout(){this.timeout=setTimeout(()=>{this.isLoaded||(console.warn("Video load timeout - proceeding anyway"),this.onVideoLoaded(!0))},this.options.timeout)}onVideoLoaded(){if(this.isLoaded)return;this.isLoaded=!0,clearTimeout(this.timeout),this.observer&&(this.observer.disconnect(),this.observer=null);const e=this.isMobile?this.getCustomAspectRatio():null;e&&e.width&&e.height?(this.width=e.width,this.height=e.height):(this.width=this.video.videoWidth,this.height=this.video.videoHeight),this.setupDOMPlayback(),this.trigger("loaded")}setupDOMPlayback(){this.isWebGLVideo||(this.video.getAttribute("autoplay")==="true"?this.playVideo():(this.video.currentTime=0,this.video.pause(),this.playVideo())),this.video.classList.add("loaded")}playVideo(){this.video.paused&&this.video.play().catch(e=>{console.warn("Video autoplay failed:",e)})}onVideoError(e){clearTimeout(this.timeout),console.error("Error loading video:",e),this.observer&&(this.observer.disconnect(),this.observer=null),this.trigger("error")}waitForLoad(){return new Promise((e,t)=>{if(this.isLoaded){e(this.video);return}this.on("loaded",()=>e(this.video)),this.on("error",i=>t(i.error))})}destroy(){clearTimeout(this.timeout),this.observer&&(this.observer.disconnect(),this.observer=null),this.video&&(this.video._videoLoaderInstance=null,this.video.paused||this.video.pause()),this.off(),this.video=null,this.source=null}static optimizeMultipleVideos(e,t={}){const i=[],n=t.mobileThreshold||992;return window.innerWidth<=n&&e.length>3?e.forEach((o,a)=>{setTimeout(()=>{const l=new Yt(o,{...t,lazyLoad:!0,rootMargin:a<2?"50px":"200px"});i.push(l)},a*500)}):e.forEach(o=>{const a=new Yt(o,t);i.push(a)}),i}}const LS=Object.freeze(Object.defineProperty({__proto__:null,default:Yt},Symbol.toStringTag,{value:"Module"}));class US{constructor(e,t,i){var n;this.instance=e,this.app=t,this.main=i,this.scroll=this.app.scroll.lenis,this.observer=this.app.observer.instance,this.destroyed=!1,!((n=this.instance.parentElement)!=null&&n.classList.contains("w-condition-invisible"))&&(this.axis=this.instance.dataset.axis==="vertical"?"y":"x",this.multiDirection=this.instance.dataset.direction==="1"?1:-1,this.direction=1*this.multiDirection,this.prevDirection=this.direction,this.velocity={value:0},this.enter={value:1},this.move=0,this.draggableMove={value:0},this.draggableVelocity=0,this.proxy=document.createElement("div"),this.props=gsap.getProperty(this.proxy),this.wrappers=this.instance.querySelectorAll("[wrapper]"),this.items=this.instance.querySelectorAll("[item]"),this.duplicateMarqueeWrappers(),this.setupCardVisibility(),this.partLength=this.items.length/this.wrappers.length,this.axis==="y"?this.newOrderItems=Array.from(this.items):this.newOrderItems=[...Array.from(this.items).slice(this.partLength/2),...Array.from(this.items).slice(0,this.partLength/2)],IS(this.instance),this.quicks=[...this.wrappers].map(s=>gsap.quickSetter(s,this.axis,"%")),this.draggbleQuick=gsap.quickTo(this.draggableMove,"value",{duration:.2,ease:"power2"}),this.changeVelocity=gsap.quickTo(this.velocity,"value",{duration:.2,ease:"power2"}),this.scroll.on("scroll",s=>{this.destroyed||this.instance.dataset.visible=="false"||(this.changeVelocity(Math.abs(s.velocity)),this.prevDirection!==s.direction&&(this.direction=s.direction*this.multiDirection,this.prevDirection=s.direction))}),this.initDraggable(),this.observer.observe(this.instance),this.wrappers.forEach(s=>{s.addEventListener("mouseenter",()=>{var o;(o=this.enterTl)==null||o.kill(),this.enterTl=gsap.to(this.enter,{value:0,duration:.6,ease:"power3"})}),s.addEventListener("mouseleave",()=>{var o;(o=this.enterTl)==null||o.kill(),this.enterTl=gsap.to(this.enter,{value:1,duration:.6,ease:"power3"})})}),this.revealed=!1,this.revealTl=gsap.timeline({paused:!0,defaults:{duration:1,ease:"power3.out"}}),gsap.set(this.newOrderItems,{transformOrigin:"bottom"}),this.revealTl.fromTo(this.newOrderItems,{yPercent:40,rotateY:12,rotateX:45,opacity:0},{yPercent:0,rotateY:0,rotateX:0,opacity:1,stagger:.08,onComplete:()=>this.revealed=!0}),this.scrollTrigger=ScrollTrigger.create({trigger:this.wrappers[0],start:"top 80%",onEnter:()=>{this.revealed||this.revealTl.play()}}),this.app.on("tick",()=>this.tick()),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy()))}duplicateMarqueeWrappers(){this.instance.querySelectorAll("[data-duplicate]").forEach(t=>{const i=t.parentNode;for(let n=0;n<2;n++){const s=t.cloneNode(!0),a=window.innerWidth<=992?"2.75rem":"7.5rem";this.axis==="y"?s.style.marginTop=a:s.style.marginLeft=a,i.appendChild(s)}}),this.wrappers=this.instance.querySelectorAll("[wrapper]"),this.items=this.instance.querySelectorAll("[item]")}initDraggable(){this.draggable=Draggable.create(this.proxy,{type:this.axis,inertia:!0,trigger:this.instance,onDrag:()=>{if(this.destroyed)return;const e=this.axis==="y"?this.draggable[0].deltaY:this.draggable[0].deltaX;this.draggbleQuick(e)},onThrowUpdate:()=>{if(this.destroyed)return;const e=this.axis==="y"?this.draggable[0].deltaY:this.draggable[0].deltaX;this.draggbleQuick(e)}})}tick(){if(this.destroyed||this.instance.dataset.visible=="false")return;this.quicks.forEach(t=>t(this.move));const e=gsap.utils.mapRange(0,100,0,1,this.velocity.value);this.move,this.move+=this.direction*(.05+e)*this.enter.value+this.draggableMove.value/10,this.draggbleQuick(0),(this.move>100||this.move<-100)&&(this.move=0),this.changeVelocity(0)}resize(){this.destroyed}setupCardVisibility(){this.items.forEach(e=>{const t=window.innerWidth<=992,i=e.querySelector(".s-card_image"),n=e.querySelector(".s-card_video");if(i&&n){const o=n.querySelector("video"),a=n.querySelector("source");if(a&&o){const l=a.getAttribute("data-src-mobile"),c=a.getAttribute("data-src"),h=t&&l?l:c;h&&h.trim()!==""?(i.style.display="none",n.style.display="block",new Yt(o).on("error",()=>{i.style.display="block",n.style.display="none"})):(i.style.display="block",n.style.display="none")}}const s=e.querySelector(".s-gallery_item_wrapper");if(s){const a=s.dataset.layout==="big",l=t?a?"25rem":"15rem":a?"45rem":"30rem",c=t?a?"395 / 295":"238 / 295":a?"725 / 545":"389 / 440";s.style.setProperty("width",l,"important"),s.style.setProperty("aspect-ratio",c,"important");const h=e.querySelector(".s-gallery_item_image"),d=e.querySelector(".s-gallery_item_video");if(h&&d){const u=d.querySelector("video"),f=u==null?void 0:u.querySelector("source");if(f&&u){const m=f.getAttribute("data-src-mobile"),v=f.getAttribute("data-src"),g=t&&m?m:v;g&&g.trim()!==""?(h.style.display="none",d.style.display="block",new Yt(u).on("error",()=>{console.warn("Gallery video failed to load, falling back to image"),h.style.display="block",d.style.display="none"})):(h.style.display="block",d.style.display="none")}}}})}destroy(){this.destroyed||(this.destroyed=!0)}}const DS=Object.freeze(Object.defineProperty({__proto__:null,default:US},Symbol.toStringTag,{value:"Module"}));class NS{constructor(e,t){this.instance=e,this.app=t,this.destroyed=!1,this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){if(window.innerWidth>992)return;gsap.set(this.instance.parentElement,{perspective:1e3,perspectiveOrigin:"center center"}),gsap.set(this.instance,{transformOrigin:"center center",transformStyle:"preserve-3d"}),this.tl=gsap.timeline({paused:!0,defaults:{ease:"power3.out",duration:1}});const e=this.instance.classList.contains("talk_full"),t=e?.1:.4,i=e?.5:1,n=document.querySelector("main").dataset.transitionPage==="cases",s=this.instance.classList.contains("cases_item");let o=!1;if(n&&s){const l=document.querySelectorAll(".cases_item");o=Array.from(l).indexOf(this.instance)<2}const a=o?1.2:0;this.tl.fromTo(this.instance,{autoAlpha:0,rotationZ:-18,rotationY:45,rotationX:-45,scale:t},{autoAlpha:1,rotationZ:0,rotationY:0,rotationX:0,scale:i,delay:a}),this.scroll=ScrollTrigger.create({trigger:this.instance,start:"top 85%",onEnter:()=>this.tl.play()})}resize(){var e,t,i;this.destroyed||((e=this.tl)==null||e.kill(),(t=this.scroll)==null||t.kill(),(i=this.scrollBack)==null||i.kill(),this.init())}destroy(){this.destroyed||(this.destroyed=!0)}}const OS=Object.freeze(Object.defineProperty({__proto__:null,default:NS},Symbol.toStringTag,{value:"Module"}));class FS extends Hr{constructor(e,t){super(e,t),this.splits=[],this.animationTargets=[],this.tl=null,this.init()}init(){if(this.instance.dataset.scroll==="false")return;const e=this.instance.querySelectorAll(".paragraph-animation");e.length>0&&gsap.set(e,{overflow:"hidden"}),this.items=this.instance.querySelectorAll(".paragraph-item"),this.items.forEach(i=>{const n=i.children.length>0?i.children:[i];if(Array.from(n).some(o=>o.textContent.trim().length>0&&(o.tagName==="P"||o.tagName==="H1"||o.tagName==="H2"||o.tagName==="H3"||o.tagName==="H4"||o.tagName==="H5"||o.tagName==="H6"||o.tagName==="SPAN"||o.tagName==="DIV"))){const o=new SplitText(n,{type:"lines"}),a=new SplitText(n,{type:"lines"});this.splits.push(o),gsap.set(a.lines,{overflow:"clip"}),gsap.set(o.lines,{y:"120%"}),this.animationTargets.push(o.lines)}else gsap.set(i,{y:"120%"}),this.animationTargets.push(i)});const t=parseFloat(this.instance.dataset.delay)||0;this.tl=gsap.timeline({paused:!0,delay:t}),this.animationTargets.forEach((i,n)=>{this.tl.to(i,{y:"0%",duration:.6,ease:"power2.out",stagger:Array.isArray(i)?.1:0},n*.1)})}animateIn(){this.tl&&!this.isVisible&&(this.tl.play(),super.animateIn())}animateOut(){this.tl&&this.isVisible&&(this.tl.pause(0),super.animateOut())}destroy(){var e;this.splits.forEach(t=>t.revert()),(e=this.tl)==null||e.kill()}}const zS=Object.freeze(Object.defineProperty({__proto__:null,default:FS},Symbol.toStringTag,{value:"Module"}));class BS{constructor(e,t,i){this.instance=e,this.app=t,this.main=i,this.scroll=this.app.scroll.lenis,this.bodyMain=document.body,this.btns=this.bodyMain.querySelectorAll('[data-popup-trigger="true"]'),this.close=this.instance.querySelector(".btn"),this.body=this.instance.querySelector(".popup_body"),this.overlay=this.instance.querySelector(".popup_overlay"),this.isAnimating=!1,this.isOpen=!1,this.init()}init(){this.enterTl=gsap.timeline({paused:!0,defaults:{duration:1,ease:"power2"},onStart:()=>{this.isAnimating=!0,this.instance.classList.add("active"),this.scroll.stop(),this.bodyMain.classList.add("hide-nav"),this.handleCanvasZIndex(!1)},onComplete:()=>{this.isAnimating=!1,this.isOpen=!0}}),this.enterTl.fromTo(this.body,{yPercent:100,scale:.9,opacity:1},{opacity:1,yPercent:0,scale:1,overwrite:"auto"}).fromTo(this.overlay,{opacity:0},{opacity:1,overwrite:"auto"},"<"),this.btns.forEach(e=>e.addEventListener("click",t=>{t.preventDefault(),this.openPopup()})),this.leaveTl=gsap.timeline({paused:!0,defaults:{duration:.6,ease:"power2"},onStart:()=>{this.isAnimating=!0,this.scroll.start(),this.bodyMain.classList.remove("hide-nav")},onComplete:()=>{this.isAnimating=!1,this.isOpen=!1,this.instance.classList.remove("active"),this.handleCanvasZIndex(!0)}}),this.leaveTl.to(this.body,{opacity:0,overwrite:"auto"}).to(this.overlay,{opacity:0,overwrite:"auto"},"<"),this.close.addEventListener("click",e=>{e.preventDefault(),e.stopPropagation(),this.closePopup()}),this.overlay.addEventListener("click",e=>{e.target===this.overlay&&this.closePopup()})}openPopup(){this.isAnimating||this.isOpen||this.enterTl.restart()}closePopup(){this.isAnimating||!this.isOpen||this.leaveTl.restart()}handleCanvasZIndex(e){const t=document.querySelector(".canvas-container");if(!t)return;const i=document.querySelector("main").dataset.transitionPage==="case-inner";e&&i?t.style.zIndex="2":t.style.zIndex="-1"}}const kS=Object.freeze(Object.defineProperty({__proto__:null,default:BS},Symbol.toStringTag,{value:"Module"}));class VS{constructor(e,t){this.instance=e,this.app=t,this.divider=this.instance.querySelector(".section-heading_line"),this.dot=this.instance.querySelector(".section-heading_circle"),this.title=this.instance.querySelector("h3"),this.destroyed=!1,this.played=!1,this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.split=new SplitText(this.title,{type:"lines"}),this.splitSecond=new SplitText(this.title,{type:"lines"}),gsap.set(this.splitSecond.lines,{overflow:"clip",paddingBottom:"0.1em",marginBottom:"-0.1em"}),this.tl=gsap.timeline({paused:!0,defaults:{ease:Ti.ease,duration:1.2}}),this.tl.fromTo(this.divider,{transformOrigin:"left",scaleX:0},{scaleX:1}).fromTo(this.dot,{scale:0},{scale:1},"<0.1").fromTo(this.split.lines,{y:"120%"},{y:"0%",stagger:.1,ease:"power3"},"<0.1"),this.scroll=ScrollTrigger.create({trigger:this.instance,start:"top 90%",onEnter:()=>this.tl.play()}),this.srcollBack=ScrollTrigger.create({trigger:this.instance,start:"top bottom",onLeaveBack:()=>this.tl.pause(0)})}resize(){var e,t,i,n;this.destroyed||((e=this.split)==null||e.revert(),(t=this.tl)==null||t.kill(),(i=this.scroll)==null||i.kill(),(n=this.srcollBack)==null||n.kill(),this.init())}destroy(){this.destroyed||(this.destroyed=!0)}}const HS=Object.freeze(Object.defineProperty({__proto__:null,default:VS},Symbol.toStringTag,{value:"Module"}));class GS{constructor(e,t){this.instance=e,this.app=t,this.destroyed=!1,this.isMobile=window.innerWidth<992,this.title=this.instance.querySelector(".h-services_title"),this.text=this.title.querySelector("h1"),this.btn=this.instance.querySelector(".h-services_btn"),this.bg=this.instance.querySelector(".h-services_bg"),this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.isMobile?this.initMobile():this.initDesktop()}initMobile(){this.tl=gsap.timeline({paused:!0});const e=this.title.offsetHeight,t=Math.min(e*.5,150);this.tl.fromTo(this.title,{y:0},{y:-t,ease:"power2.out",duration:1}).fromTo(this.text,{scale:1},{scale:1.05,ease:"power2.out",duration:1},"<").fromTo(this.btn,{yPercent:100,opacity:0},{yPercent:0,opacity:1,ease:"power2.out",duration:.4},.3),this.scroll=ScrollTrigger.create({trigger:this.instance,start:"top top",end:"bottom center",animation:this.tl,scrub:1,onUpdate:i=>{this.bg.style.setProperty("--progress",i.progress)}})}initDesktop(){this.tl=gsap.timeline({paused:!0});const e=window.innerHeight/2,t=this.title.getBoundingClientRect(),i=t.top+t.height/2-e;this.tl.fromTo(this.title,{y:0},{y:-i,ease:"power3",duration:1}).fromTo(this.text,{scale:1},{scale:1.4,ease:"power3",duration:1},"<").fromTo(this.btn,{yPercent:100,opacity:0},{yPercent:0,opacity:1,ease:"power3",duration:.5},.5),this.scroll=ScrollTrigger.create({trigger:this.instance,start:"top top",end:"bottom bottom",animation:this.tl,scrub:!0,onUpdate:n=>{var s,o,a,l,c;(c=(l=(a=(o=(s=this.app.gl)==null?void 0:s.world)==null?void 0:o.hero)==null?void 0:a.material)==null?void 0:l.uniforms)!=null&&c.uScroll&&(this.app.gl.world.hero.material.uniforms.uScroll.value=n.progress),this.bg.style.setProperty("--progress",n.progress)}})}resize(){var t,i;if(this.destroyed)return;const e=this.isMobile;this.isMobile=window.innerWidth<992,e!==this.isMobile&&((t=this.tl)==null||t.kill(),(i=this.scroll)==null||i.kill(),this.init())}destroy(){var e,t;this.destroyed||(this.destroyed=!0,(e=this.tl)==null||e.kill(),(t=this.scroll)==null||t.kill(),this.tl=null,this.scroll=null)}}const WS=Object.freeze(Object.defineProperty({__proto__:null,default:GS},Symbol.toStringTag,{value:"Module"}));class XS{constructor(e,t){this.instance=e,this.app=t,this.destroyed=!1,this.splits=[],this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){if(this.instance.dataset.scroll==="false"||(this.parentItems=this.instance.querySelectorAll(".stagger-animation"),this.parentItems.length===0))return;gsap.set(this.parentItems,{overflow:"hidden"}),this.items=this.instance.querySelectorAll(".stagger-item, .paragraph-item"),this.animationTargets=[],this.items.forEach(t=>{const i=t.children.length>0?t.children:[t];if(Array.from(i).some(s=>s.textContent.trim().length>0&&(s.tagName==="P"||s.tagName==="H1"||s.tagName==="H2"||s.tagName==="H3"||s.tagName==="H4"||s.tagName==="H5"||s.tagName==="H6"||s.tagName==="SPAN"||s.tagName==="DIV"))){const s=new SplitText(i,{type:"lines"}),o=new SplitText(i,{type:"lines"});this.splits.push(s),gsap.set(o.lines,{overflow:"clip"}),gsap.set(s.lines,{y:"120%"}),this.animationTargets.push(s.lines)}else gsap.set(t,{y:"120%"}),this.animationTargets.push(t)}),this.tl=gsap.timeline({paused:!0}),window.innerWidth<992?this.animationTargets.forEach((t,i)=>{const n=gsap.timeline({paused:!0});n.to(t,{y:"0%",duration:.6,ease:"power2.out",stagger:Array.isArray(t)?.05:0}),ScrollTrigger.create({trigger:this.items[i],start:"top 90%",onEnter:()=>n.play()}),ScrollTrigger.create({trigger:this.items[i],start:"top bottom",onLeaveBack:()=>n.pause(0)})}):(this.animationTargets.forEach((t,i)=>{this.tl.to(t,{y:"0%",duration:.6,ease:"power2.out",stagger:Array.isArray(t)?.05:0},i*.05)}),this.scroll=ScrollTrigger.create({trigger:this.instance,start:"top 85%",onEnter:()=>this.tl.play()}))}resize(){var e,t,i;this.destroyed||(this.splits.forEach(n=>n.revert()),(e=this.tl)==null||e.kill(),(t=this.scroll)==null||t.kill(),(i=this.scrollBack)==null||i.kill(),this.init())}destroy(){var e,t,i;this.destroyed||(this.destroyed=!0,this.splits.forEach(n=>n.revert()),(e=this.tl)==null||e.kill(),(t=this.scroll)==null||t.kill(),(i=this.scrollBack)==null||i.kill())}}const qS=Object.freeze(Object.defineProperty({__proto__:null,default:XS},Symbol.toStringTag,{value:"Module"}));class YS{constructor(e,t){this.instance=e,this.app=t,this.title=this.instance.querySelector(".talk_title"),this.list=this.instance.querySelector(".talk_item"),this.items=this.list.querySelectorAll(".f-96"),this.destroyed=!1,this.titleHidden=!1,this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){this.split=new SplitText(this.title,{type:"lines",mask:"lines"}),gsap.set(this.split.lines,{paddingBottom:"0.1em",marginBottom:"-0.1em",perspective:1e3}),this.calculatePositions(),this.setupTitleAnimation(),this.setupScrollAnimation()}calculatePositions(){const e=Math.min(window.innerWidth,window.innerHeight)*.4,t=16;this.items.forEach((i,n)=>{const s=n*t*(Math.PI/180),o=n*-t,a=0,l=Math.sin(s)*e,c=Math.cos(s)*e;i.style.transform=`translate3d(-50%, -50%, 0) translate3d(${a}px, ${l}px, ${c}px) rotateX(${o}deg)`})}setupTitleAnimation(){this.titleTl=gsap.timeline({paused:!0,defaults:{duration:.8,ease:"power3.out"}}),this.titleTl.fromTo(this.split.lines,{yPercent:120,rotateX:"-65deg",transformStyle:"preserve-3d",transformOrigin:"center bottom"},{yPercent:0,rotateX:"0deg",stagger:.1}),this.titleScrollTrigger=ScrollTrigger.create({trigger:this.title,start:"top 85%",onEnter:()=>this.titleTl.play(),onLeaveBack:()=>this.titleTl.reverse(),onEnterBack:()=>this.titleTl.play()})}setupScrollAnimation(){this.scrollTrigger=ScrollTrigger.create({trigger:this.title,start:"center center",end:"+=1850vh",pin:this.instance,scrub:2,animation:gsap.fromTo(this.list,{rotateX:-80},{rotateX:270,ease:"none"}),onUpdate:e=>{var l,c,h;e.progress>.001&&!this.titleHidden?(this.hideTitleAnimation(),this.titleHidden=!0):e.progress<=.001&&this.titleHidden&&(this.showTitleAnimation(),this.titleHidden=!1);const t=Math.max(0,e.progress-.1),i=e.progress,n=1-t*.8,s=1-i*.7,o=Math.max(.2,n),a=Math.max(.3,s);if(window.innerWidth>=991)(h=(c=(l=this.app.gl)==null?void 0:l.world)==null?void 0:c.video)!=null&&h.meshs&&this.app.gl.world.video.meshs.forEach((d,u)=>{var f,m,v;(f=d.item)!=null&&f.classList.contains("talk_full")&&(v=(m=d.material)==null?void 0:m.uniforms)!=null&&v.uAlpha&&(d.material.uniforms.uAlpha.value=a)});else{const d=document.querySelector(".talk_full");d&&(d.style.opacity=o)}}}),this.list.style.pointerEvents="none"}hideTitleAnimation(){gsap.to(this.split.lines,{yPercent:-120,rotateX:"65deg",duration:.6,ease:"power3.in"})}showTitleAnimation(){gsap.to(this.split.lines,{yPercent:0,rotateX:"0deg",duration:.6,ease:"power3.out",stagger:.05})}resize(){this.destroyed||(this.calculatePositions(),this.scrollTrigger&&(this.scrollTrigger.kill(),this.setupScrollAnimation()))}destroy(){this.destroyed||(this.destroyed=!0,this.titleScrollTrigger&&this.titleScrollTrigger.kill(),this.scrollTrigger&&this.scrollTrigger.kill(),this.titleSplit&&this.titleSplit.revert())}}const $S=Object.freeze(Object.defineProperty({__proto__:null,default:YS},Symbol.toStringTag,{value:"Module"}));class ZS{constructor(e,t){this.instance=e,this.app=t,this.destroyed=!1,this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){if(this.instance.dataset.scroll==="false"||window.innerWidth>=992||this.instance.dataset.splitTextProcessed==="true")return;const e=this.instance.querySelector("svg"),t=e!==null;t?(this.paths=e.querySelectorAll("path"),gsap.set(this.paths,{transformOrigin:"50% 50%",opacity:0,scaleY:0}),this.tl=gsap.timeline({paused:!0}),this.tl.to(this.paths,{opacity:1,scaleY:1,duration:.8,ease:"power2.out",stagger:.15})):(this.split=new SplitText(this.instance,{type:"chars"}),this.instance.dataset.splitTextProcessed="true",gsap.set(this.instance,{overflow:"hidden",whiteSpace:"nowrap"}),gsap.set(this.split.chars,{display:"inline-block",transformStyle:"preserve-3d",transformOrigin:"50% 0%",verticalAlign:"top"}),this.tl=gsap.timeline({paused:!0,onComplete:()=>this.split.revert()}),this.tl.fromTo(this.split.chars,{yPercent:100,rotateX:"-90deg",rotateY:"0deg",z:"0"},{yPercent:0,rotateX:"0deg",rotateY:"0deg",z:"0",duration:.8,ease:"power2.out",stagger:.15})),this.scroll=ScrollTrigger.create({trigger:this.instance,start:t?"top 70%":"top 90%",onEnter:()=>this.tl.play()}),this.scrollBack=ScrollTrigger.create({trigger:this.instance,start:"top bottom",onLeaveBack:()=>this.tl.pause(0)})}resize(){var e,t,i,n;this.destroyed||((e=this.split)==null||e.revert(),(t=this.tl)==null||t.kill(),(i=this.scroll)==null||i.kill(),(n=this.scrollBack)==null||n.kill(),this.init())}destroy(){var e,t,i,n;this.destroyed||(this.destroyed=!0,(e=this.split)==null||e.revert(),this.instance.dataset.splitTextProcessed="false",(t=this.tl)==null||t.kill(),(i=this.scroll)==null||i.kill(),(n=this.scrollBack)==null||n.kill())}}const jS=Object.freeze(Object.defineProperty({__proto__:null,default:ZS},Symbol.toStringTag,{value:"Module"}));class JS{constructor(e){const t=new Date().getFullYear();e.innerHTML=t}}const KS=Object.freeze(Object.defineProperty({__proto__:null,default:JS},Symbol.toStringTag,{value:"Module"}));/**
* lil-gui
* https://lil-gui.georgealways.com
* @version 0.20.0
* @author George Michael Brower
* @license MIT
*/class _i{constructor(e,t,i,n,s="div"){this.parent=e,this.object=t,this.property=i,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement(s),this.domElement.classList.add("controller"),this.domElement.classList.add(n),this.$name=document.createElement("div"),this.$name.classList.add("name"),_i.nextNameID=_i.nextNameID||0,this.$name.id=`lil-gui-name-${++_i.nextNameID}`,this.$widget=document.createElement("div"),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.domElement.addEventListener("keydown",o=>o.stopPropagation()),this.domElement.addEventListener("keyup",o=>o.stopPropagation()),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(i)}name(e){return this._name=e,this.$name.textContent=e,this}onChange(e){return this._onChange=e,this}_callOnChange(){this.parent._callOnChange(this),this._onChange!==void 0&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),this._onFinishChange!==void 0&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(e=!0){return this.disable(!e)}disable(e=!0){return e===this._disabled?this:(this._disabled=e,this.domElement.classList.toggle("disabled",e),this.$disable.toggleAttribute("disabled",e),this)}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(e){const t=this.parent.add(this.object,this.property,e);return t.name(this._name),this.destroy(),t}min(e){return this}max(e){return this}step(e){return this}decimals(e){return this}listen(e=!0){return this._listening=e,this._listenCallbackID!==void 0&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const e=this.save();e!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=e}getValue(){return this.object[this.property]}setValue(e){return this.getValue()!==e&&(this.object[this.property]=e,this._callOnChange(),this.updateDisplay()),this}updateDisplay(){return this}load(e){return this.setValue(e),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class dp extends _i{constructor(e,t,i){super(e,t,i,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",()=>{this.setValue(this.$input.checked),this._callOnFinishChange()}),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function mh(r){let e,t;return(e=r.match(/(#|0x)?([a-f0-9]{6})/i))?t=e[2]:(e=r.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?t=parseInt(e[1]).toString(16).padStart(2,0)+parseInt(e[2]).toString(16).padStart(2,0)+parseInt(e[3]).toString(16).padStart(2,0):(e=r.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(t=e[1]+e[1]+e[2]+e[2]+e[3]+e[3]),t?"#"+t:!1}const QS={isPrimitive:!0,match:r=>typeof r=="string",fromHexString:mh,toHexString:mh},Gr={isPrimitive:!0,match:r=>typeof r=="number",fromHexString:r=>parseInt(r.substring(1),16),toHexString:r=>"#"+r.toString(16).padStart(6,0)},eM=[QS,Gr,{isPrimitive:!1,match:r=>Array.isArray(r),fromHexString(r,e,t=1){const i=Gr.fromHexString(r);e[0]=(i>>16&255)/255*t,e[1]=(i>>8&255)/255*t,e[2]=(i&255)/255*t},toHexString([r,e,t],i=1){i=255/i;const n=r*i<<16^e*i<<8^t*i<<0;return Gr.toHexString(n)}},{isPrimitive:!1,match:r=>Object(r)===r,fromHexString(r,e,t=1){const i=Gr.fromHexString(r);e.r=(i>>16&255)/255*t,e.g=(i>>8&255)/255*t,e.b=(i&255)/255*t},toHexString({r,g:e,b:t},i=1){i=255/i;const n=r*i<<16^e*i<<8^t*i<<0;return Gr.toHexString(n)}}];function tM(r){return eM.find(e=>e.match(r))}class fp extends _i{constructor(e,t,i,n){super(e,t,i,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=tM(this.initialValue),this._rgbScale=n,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",()=>{this._setValueFromHexString(this.$input.value)}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$text.addEventListener("input",()=>{const s=mh(this.$text.value);s&&this._setValueFromHexString(s)}),this.$text.addEventListener("focus",()=>{this._textFocused=!0,this.$text.select()}),this.$text.addEventListener("blur",()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()}),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(e){if(this._format.isPrimitive){const t=this._format.fromHexString(e);this.setValue(t)}else this._format.fromHexString(e,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(e){return this._setValueFromHexString(e),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class ul extends _i{constructor(e,t,i){super(e,t,i,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",n=>{n.preventDefault(),this.getValue().call(this.object),this._callOnChange()}),this.$button.addEventListener("touchstart",()=>{},{passive:!0}),this.$disable=this.$button}}class pp extends _i{constructor(e,t,i,n,s,o){super(e,t,i,"number"),this._initInput(),this.min(n),this.max(s);const a=o!==void 0;this.step(a?o:this._getImplicitStep(),a),this.updateDisplay()}decimals(e){return this._decimals=e,this.updateDisplay(),this}min(e){return this._min=e,this._onUpdateMinMax(),this}max(e){return this._max=e,this._onUpdateMinMax(),this}step(e,t=!0){return this._step=e,this._stepExplicit=t,this}updateDisplay(){const e=this.getValue();if(this._hasSlider){let t=(e-this._min)/(this._max-this._min);t=Math.max(0,Math.min(t,1)),this.$fill.style.width=t*100+"%"}return this._inputFocused||(this.$input.value=this._decimals===void 0?e:e.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),window.matchMedia("(pointer: coarse)").matches&&(this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any")),this.$widget.appendChild(this.$input),this.$disable=this.$input;const t=()=>{let x=parseFloat(this.$input.value);isNaN(x)||(this._stepExplicit&&(x=this._snap(x)),this.setValue(this._clamp(x)))},i=x=>{const y=parseFloat(this.$input.value);isNaN(y)||(this._snapClampSetValue(y+x),this.$input.value=this.getValue())},n=x=>{x.key==="Enter"&&this.$input.blur(),x.code==="ArrowUp"&&(x.preventDefault(),i(this._step*this._arrowKeyMultiplier(x))),x.code==="ArrowDown"&&(x.preventDefault(),i(this._step*this._arrowKeyMultiplier(x)*-1))},s=x=>{this._inputFocused&&(x.preventDefault(),i(this._step*this._normalizeMouseWheel(x)))};let o=!1,a,l,c,h,d;const u=5,f=x=>{a=x.clientX,l=c=x.clientY,o=!0,h=this.getValue(),d=0,window.addEventListener("mousemove",m),window.addEventListener("mouseup",v)},m=x=>{if(o){const y=x.clientX-a,_=x.clientY-l;Math.abs(_)>u?(x.preventDefault(),this.$input.blur(),o=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(y)>u&&v()}if(!o){const y=x.clientY-c;d-=y*this._step*this._arrowKeyMultiplier(x),h+d>this._max?d=this._max-h:h+d<this._min&&(d=this._min-h),this._snapClampSetValue(h+d)}c=x.clientY},v=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",m),window.removeEventListener("mouseup",v)},g=()=>{this._inputFocused=!0},p=()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()};this.$input.addEventListener("input",t),this.$input.addEventListener("keydown",n),this.$input.addEventListener("wheel",s,{passive:!1}),this.$input.addEventListener("mousedown",f),this.$input.addEventListener("focus",g),this.$input.addEventListener("blur",p)}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const e=(p,x,y,_,C)=>(p-x)/(y-x)*(C-_)+_,t=p=>{const x=this.$slider.getBoundingClientRect();let y=e(p,x.left,x.right,this._min,this._max);this._snapClampSetValue(y)},i=p=>{this._setDraggingStyle(!0),t(p.clientX),window.addEventListener("mousemove",n),window.addEventListener("mouseup",s)},n=p=>{t(p.clientX)},s=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",n),window.removeEventListener("mouseup",s)};let o=!1,a,l;const c=p=>{p.preventDefault(),this._setDraggingStyle(!0),t(p.touches[0].clientX),o=!1},h=p=>{p.touches.length>1||(this._hasScrollBar?(a=p.touches[0].clientX,l=p.touches[0].clientY,o=!0):c(p),window.addEventListener("touchmove",d,{passive:!1}),window.addEventListener("touchend",u))},d=p=>{if(o){const x=p.touches[0].clientX-a,y=p.touches[0].clientY-l;Math.abs(x)>Math.abs(y)?c(p):(window.removeEventListener("touchmove",d),window.removeEventListener("touchend",u))}else p.preventDefault(),t(p.touches[0].clientX)},u=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",d),window.removeEventListener("touchend",u)},f=this._callOnFinishChange.bind(this),m=400;let v;const g=p=>{if(Math.abs(p.deltaX)<Math.abs(p.deltaY)&&this._hasScrollBar)return;p.preventDefault();const y=this._normalizeMouseWheel(p)*this._step;this._snapClampSetValue(this.getValue()+y),this.$input.value=this.getValue(),clearTimeout(v),v=setTimeout(f,m)};this.$slider.addEventListener("mousedown",i),this.$slider.addEventListener("touchstart",h,{passive:!1}),this.$slider.addEventListener("wheel",g,{passive:!1})}_setDraggingStyle(e,t="horizontal"){this.$slider&&this.$slider.classList.toggle("active",e),document.body.classList.toggle("lil-gui-dragging",e),document.body.classList.toggle(`lil-gui-${t}`,e)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(e){let{deltaX:t,deltaY:i}=e;return Math.floor(e.deltaY)!==e.deltaY&&e.wheelDelta&&(t=0,i=-e.wheelDelta/120,i*=this._stepExplicit?1:10),t+-i}_arrowKeyMultiplier(e){let t=this._stepExplicit?1:10;return e.shiftKey?t*=10:e.altKey&&(t/=10),t}_snap(e){let t=0;return this._hasMin?t=this._min:this._hasMax&&(t=this._max),e-=t,e=Math.round(e/this._step)*this._step,e+=t,e=parseFloat(e.toPrecision(15)),e}_clamp(e){return e<this._min&&(e=this._min),e>this._max&&(e=this._max),e}_snapClampSetValue(e){this.setValue(this._clamp(this._snap(e)))}get _hasScrollBar(){const e=this.parent.root.$children;return e.scrollHeight>e.clientHeight}get _hasMin(){return this._min!==void 0}get _hasMax(){return this._max!==void 0}}class mp extends _i{constructor(e,t,i,n){super(e,t,i,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$select.addEventListener("change",()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()}),this.$select.addEventListener("focus",()=>{this.$display.classList.add("focus")}),this.$select.addEventListener("blur",()=>{this.$display.classList.remove("focus")}),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.options(n)}options(e){return this._values=Array.isArray(e)?e:Object.values(e),this._names=Array.isArray(e)?e:Object.keys(e),this.$select.replaceChildren(),this._names.forEach(t=>{const i=document.createElement("option");i.textContent=t,this.$select.appendChild(i)}),this.updateDisplay(),this}updateDisplay(){const e=this.getValue(),t=this._values.indexOf(e);return this.$select.selectedIndex=t,this.$display.textContent=t===-1?e:this._names[t],this}}class gp extends _i{constructor(e,t,i){super(e,t,i,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("spellcheck","false"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",()=>{this.setValue(this.$input.value)}),this.$input.addEventListener("keydown",n=>{n.code==="Enter"&&this.$input.blur()}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}var iM=`.lil-gui {
  font-family: var(--font-family);
  font-size: var(--font-size);
  line-height: 1;
  font-weight: normal;
  font-style: normal;
  text-align: left;
  color: var(--text-color);
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  --background-color: #1f1f1f;
  --text-color: #ebebeb;
  --title-background-color: #111111;
  --title-text-color: #ebebeb;
  --widget-color: #424242;
  --hover-color: #4f4f4f;
  --focus-color: #595959;
  --number-color: #2cc9ff;
  --string-color: #a2db3c;
  --font-size: 11px;
  --input-font-size: 11px;
  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Arial, sans-serif;
  --font-family-mono: Menlo, Monaco, Consolas, "Droid Sans Mono", monospace;
  --padding: 4px;
  --spacing: 4px;
  --widget-height: 20px;
  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);
  --name-width: 45%;
  --slider-knob-width: 2px;
  --slider-input-width: 27%;
  --color-input-width: 27%;
  --slider-input-min-width: 45px;
  --color-input-min-width: 45px;
  --folder-indent: 7px;
  --widget-padding: 0 0 0 3px;
  --widget-border-radius: 2px;
  --checkbox-size: calc(0.75 * var(--widget-height));
  --scrollbar-width: 5px;
}
.lil-gui, .lil-gui * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
.lil-gui.root {
  width: var(--width, 245px);
  display: flex;
  flex-direction: column;
  background: var(--background-color);
}
.lil-gui.root > .title {
  background: var(--title-background-color);
  color: var(--title-text-color);
}
.lil-gui.root > .children {
  overflow-x: hidden;
  overflow-y: auto;
}
.lil-gui.root > .children::-webkit-scrollbar {
  width: var(--scrollbar-width);
  height: var(--scrollbar-width);
  background: var(--background-color);
}
.lil-gui.root > .children::-webkit-scrollbar-thumb {
  border-radius: var(--scrollbar-width);
  background: var(--focus-color);
}
@media (pointer: coarse) {
  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {
    --widget-height: 28px;
    --padding: 6px;
    --spacing: 6px;
    --font-size: 13px;
    --input-font-size: 16px;
    --folder-indent: 10px;
    --scrollbar-width: 7px;
    --slider-input-min-width: 50px;
    --color-input-min-width: 65px;
  }
}
.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {
  --widget-height: 28px;
  --padding: 6px;
  --spacing: 6px;
  --font-size: 13px;
  --input-font-size: 16px;
  --folder-indent: 10px;
  --scrollbar-width: 7px;
  --slider-input-min-width: 50px;
  --color-input-min-width: 65px;
}
.lil-gui.autoPlace {
  max-height: 100%;
  position: fixed;
  top: 0;
  right: 15px;
  z-index: 1001;
}

.lil-gui .controller {
  display: flex;
  align-items: center;
  padding: 0 var(--padding);
  margin: var(--spacing) 0;
}
.lil-gui .controller.disabled {
  opacity: 0.5;
}
.lil-gui .controller.disabled, .lil-gui .controller.disabled * {
  pointer-events: none !important;
}
.lil-gui .controller > .name {
  min-width: var(--name-width);
  flex-shrink: 0;
  white-space: pre;
  padding-right: var(--spacing);
  line-height: var(--widget-height);
}
.lil-gui .controller .widget {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  min-height: var(--widget-height);
}
.lil-gui .controller.string input {
  color: var(--string-color);
}
.lil-gui .controller.boolean {
  cursor: pointer;
}
.lil-gui .controller.color .display {
  width: 100%;
  height: var(--widget-height);
  border-radius: var(--widget-border-radius);
  position: relative;
}
@media (hover: hover) {
  .lil-gui .controller.color .display:hover:before {
    content: " ";
    display: block;
    position: absolute;
    border-radius: var(--widget-border-radius);
    border: 1px solid #fff9;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
}
.lil-gui .controller.color input[type=color] {
  opacity: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}
.lil-gui .controller.color input[type=text] {
  margin-left: var(--spacing);
  font-family: var(--font-family-mono);
  min-width: var(--color-input-min-width);
  width: var(--color-input-width);
  flex-shrink: 0;
}
.lil-gui .controller.option select {
  opacity: 0;
  position: absolute;
  width: 100%;
  max-width: 100%;
}
.lil-gui .controller.option .display {
  position: relative;
  pointer-events: none;
  border-radius: var(--widget-border-radius);
  height: var(--widget-height);
  line-height: var(--widget-height);
  max-width: 100%;
  overflow: hidden;
  word-break: break-all;
  padding-left: 0.55em;
  padding-right: 1.75em;
  background: var(--widget-color);
}
@media (hover: hover) {
  .lil-gui .controller.option .display.focus {
    background: var(--focus-color);
  }
}
.lil-gui .controller.option .display.active {
  background: var(--focus-color);
}
.lil-gui .controller.option .display:after {
  font-family: "lil-gui";
  content: "↕";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  padding-right: 0.375em;
}
.lil-gui .controller.option .widget,
.lil-gui .controller.option select {
  cursor: pointer;
}
@media (hover: hover) {
  .lil-gui .controller.option .widget:hover .display {
    background: var(--hover-color);
  }
}
.lil-gui .controller.number input {
  color: var(--number-color);
}
.lil-gui .controller.number.hasSlider input {
  margin-left: var(--spacing);
  width: var(--slider-input-width);
  min-width: var(--slider-input-min-width);
  flex-shrink: 0;
}
.lil-gui .controller.number .slider {
  width: 100%;
  height: var(--widget-height);
  background: var(--widget-color);
  border-radius: var(--widget-border-radius);
  padding-right: var(--slider-knob-width);
  overflow: hidden;
  cursor: ew-resize;
  touch-action: pan-y;
}
@media (hover: hover) {
  .lil-gui .controller.number .slider:hover {
    background: var(--hover-color);
  }
}
.lil-gui .controller.number .slider.active {
  background: var(--focus-color);
}
.lil-gui .controller.number .slider.active .fill {
  opacity: 0.95;
}
.lil-gui .controller.number .fill {
  height: 100%;
  border-right: var(--slider-knob-width) solid var(--number-color);
  box-sizing: content-box;
}

.lil-gui-dragging .lil-gui {
  --hover-color: var(--widget-color);
}
.lil-gui-dragging * {
  cursor: ew-resize !important;
}

.lil-gui-dragging.lil-gui-vertical * {
  cursor: ns-resize !important;
}

.lil-gui .title {
  height: var(--title-height);
  font-weight: 600;
  padding: 0 var(--padding);
  width: 100%;
  text-align: left;
  background: none;
  text-decoration-skip: objects;
}
.lil-gui .title:before {
  font-family: "lil-gui";
  content: "▾";
  padding-right: 2px;
  display: inline-block;
}
.lil-gui .title:active {
  background: var(--title-background-color);
  opacity: 0.75;
}
@media (hover: hover) {
  body:not(.lil-gui-dragging) .lil-gui .title:hover {
    background: var(--title-background-color);
    opacity: 0.85;
  }
  .lil-gui .title:focus {
    text-decoration: underline var(--focus-color);
  }
}
.lil-gui.root > .title:focus {
  text-decoration: none !important;
}
.lil-gui.closed > .title:before {
  content: "▸";
}
.lil-gui.closed > .children {
  transform: translateY(-7px);
  opacity: 0;
}
.lil-gui.closed:not(.transition) > .children {
  display: none;
}
.lil-gui.transition > .children {
  transition-duration: 300ms;
  transition-property: height, opacity, transform;
  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);
  overflow: hidden;
  pointer-events: none;
}
.lil-gui .children:empty:before {
  content: "Empty";
  padding: 0 var(--padding);
  margin: var(--spacing) 0;
  display: block;
  height: var(--widget-height);
  font-style: italic;
  line-height: var(--widget-height);
  opacity: 0.5;
}
.lil-gui.root > .children > .lil-gui > .title {
  border: 0 solid var(--widget-color);
  border-width: 1px 0;
  transition: border-color 300ms;
}
.lil-gui.root > .children > .lil-gui.closed > .title {
  border-bottom-color: transparent;
}
.lil-gui + .controller {
  border-top: 1px solid var(--widget-color);
  margin-top: 0;
  padding-top: var(--spacing);
}
.lil-gui .lil-gui .lil-gui > .title {
  border: none;
}
.lil-gui .lil-gui .lil-gui > .children {
  border: none;
  margin-left: var(--folder-indent);
  border-left: 2px solid var(--widget-color);
}
.lil-gui .lil-gui .controller {
  border: none;
}

.lil-gui label, .lil-gui input, .lil-gui button {
  -webkit-tap-highlight-color: transparent;
}
.lil-gui input {
  border: 0;
  outline: none;
  font-family: var(--font-family);
  font-size: var(--input-font-size);
  border-radius: var(--widget-border-radius);
  height: var(--widget-height);
  background: var(--widget-color);
  color: var(--text-color);
  width: 100%;
}
@media (hover: hover) {
  .lil-gui input:hover {
    background: var(--hover-color);
  }
  .lil-gui input:active {
    background: var(--focus-color);
  }
}
.lil-gui input:disabled {
  opacity: 1;
}
.lil-gui input[type=text],
.lil-gui input[type=number] {
  padding: var(--widget-padding);
  -moz-appearance: textfield;
}
.lil-gui input[type=text]:focus,
.lil-gui input[type=number]:focus {
  background: var(--focus-color);
}
.lil-gui input[type=checkbox] {
  appearance: none;
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  border-radius: var(--widget-border-radius);
  text-align: center;
  cursor: pointer;
}
.lil-gui input[type=checkbox]:checked:before {
  font-family: "lil-gui";
  content: "✓";
  font-size: var(--checkbox-size);
  line-height: var(--checkbox-size);
}
@media (hover: hover) {
  .lil-gui input[type=checkbox]:focus {
    box-shadow: inset 0 0 0 1px var(--focus-color);
  }
}
.lil-gui button {
  outline: none;
  cursor: pointer;
  font-family: var(--font-family);
  font-size: var(--font-size);
  color: var(--text-color);
  width: 100%;
  border: none;
}
.lil-gui .controller button {
  height: var(--widget-height);
  text-transform: none;
  background: var(--widget-color);
  border-radius: var(--widget-border-radius);
}
@media (hover: hover) {
  .lil-gui .controller button:hover {
    background: var(--hover-color);
  }
  .lil-gui .controller button:focus {
    box-shadow: inset 0 0 0 1px var(--focus-color);
  }
}
.lil-gui .controller button:active {
  background: var(--focus-color);
}

@font-face {
  font-family: "lil-gui";
  src: url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff");
}`;function nM(r){const e=document.createElement("style");e.innerHTML=r;const t=document.querySelector("head link[rel=stylesheet], head style");t?document.head.insertBefore(e,t):document.head.appendChild(e)}let vp=!1;class dl{constructor({parent:e,autoPlace:t=e===void 0,container:i,width:n,title:s="Controls",closeFolders:o=!1,injectStyles:a=!0,touchStyles:l=!0}={}){if(this.parent=e,this.root=e?e.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("button"),this.$title.classList.add("title"),this.$title.setAttribute("aria-expanded",!0),this.$title.addEventListener("click",()=>this.openAnimated(this._closed)),this.$title.addEventListener("touchstart",()=>{},{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(s),this.parent){this.parent.children.push(this),this.parent.folders.push(this),this.parent.$children.appendChild(this.domElement);return}this.domElement.classList.add("root"),l&&this.domElement.classList.add("allow-touch-styles"),!vp&&a&&(nM(iM),vp=!0),i?i.appendChild(this.domElement):t&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),n&&this.domElement.style.setProperty("--width",n+"px"),this._closeFolders=o}add(e,t,i,n,s){if(Object(i)===i)return new mp(this,e,t,i);const o=e[t];switch(typeof o){case"number":return new pp(this,e,t,i,n,s);case"boolean":return new dp(this,e,t);case"string":return new gp(this,e,t);case"function":return new ul(this,e,t)}console.error(`gui.add failed
	property:`,t,`
	object:`,e,`
	value:`,o)}addColor(e,t,i=1){return new fp(this,e,t,i)}addFolder(e){const t=new dl({parent:this,title:e});return this.root._closeFolders&&t.close(),t}load(e,t=!0){return e.controllers&&this.controllers.forEach(i=>{i instanceof ul||i._name in e.controllers&&i.load(e.controllers[i._name])}),t&&e.folders&&this.folders.forEach(i=>{i._title in e.folders&&i.load(e.folders[i._title])}),this}save(e=!0){const t={controllers:{},folders:{}};return this.controllers.forEach(i=>{if(!(i instanceof ul)){if(i._name in t.controllers)throw new Error(`Cannot save GUI with duplicate property "${i._name}"`);t.controllers[i._name]=i.save()}}),e&&this.folders.forEach(i=>{if(i._title in t.folders)throw new Error(`Cannot save GUI with duplicate folder "${i._title}"`);t.folders[i._title]=i.save()}),t}open(e=!0){return this._setClosed(!e),this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}_setClosed(e){this._closed!==e&&(this._closed=e,this._callOnOpenClose(this))}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(e=!0){return this._setClosed(!e),this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame(()=>{const t=this.$children.clientHeight;this.$children.style.height=t+"px",this.domElement.classList.add("transition");const i=s=>{s.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",i))};this.$children.addEventListener("transitionend",i);const n=e?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!e),requestAnimationFrame(()=>{this.$children.style.height=n+"px"})}),this}title(e){return this._title=e,this.$title.textContent=e,this}reset(e=!0){return(e?this.controllersRecursive():this.controllers).forEach(i=>i.reset()),this}onChange(e){return this._onChange=e,this}_callOnChange(e){this.parent&&this.parent._callOnChange(e),this._onChange!==void 0&&this._onChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(e){this.parent&&this.parent._callOnFinishChange(e),this._onFinishChange!==void 0&&this._onFinishChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onOpenClose(e){return this._onOpenClose=e,this}_callOnOpenClose(e){this.parent&&this.parent._callOnOpenClose(e),this._onOpenClose!==void 0&&this._onOpenClose.call(this,e)}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach(e=>e.destroy())}controllersRecursive(){let e=Array.from(this.controllers);return this.folders.forEach(t=>{e=e.concat(t.controllersRecursive())}),e}foldersRecursive(){let e=Array.from(this.folders);return this.folders.forEach(t=>{e=e.concat(t.foldersRecursive())}),e}}const sM=Object.freeze(Object.defineProperty({__proto__:null,BooleanController:dp,ColorController:fp,Controller:_i,FunctionController:ul,GUI:dl,NumberController:pp,OptionController:mp,StringController:gp,default:dl},Symbol.toStringTag,{value:"Module"}));class Wr extends wn{constructor(e){super(),this.sources=e,this.items={},this.toLoad=this.sources.length,this.loaded=0,this.textureLoader={loaded:!1},this.startLoading()}async startLoading(){for(const e of this.sources)if(e.type==="textureLoader"){if(this.textureLoader.loaded===!1)try{const t=await Oe(()=>Promise.resolve().then(()=>Fw),void 0,k&&k.tagName.toUpperCase()==="SCRIPT"&&k.src||new URL("app.js",document.baseURI).href);this.textureLoader.loader=new t.TextureLoader,this.textureLoader.loaded=!0}catch(t){console.error("Error loading TextureLoader:",t);continue}await this.loadTexture(e)}}async loadTexture(e){await this.textureLoader.loader.load(e.url,t=>{t.colorSpace=an,this.sourceLoaded(e,t)})}sourceLoaded(e,t){this.items[e.name]=t,this.loaded++,this.loaded===this.toLoad&&this.trigger("ready")}}var rM=`varying vec2 vUv;
varying vec2 screenUv;

void main()
{
    vUv = uv;
    vec4 modelPoisition = modelMatrix * vec4(position, 1.0);

    
    gl_Position = projectionMatrix * viewMatrix * modelPoisition;

    screenUv = vec2(gl_Position.xy / gl_Position.w) * 0.5 + 0.5;
}`,oM=`uniform sampler2D uTexture;
uniform sampler2D uFluid;
uniform vec3 uColor;
uniform vec2 uRes;
uniform vec2 uSize;
uniform vec2 uAspect;
uniform float uLoading;
uniform float uTranslateY;

varying vec2 vUv;
varying vec2 screenUv;

void main()
{
    vec2 uv = vUv;

    
    
    

    float maskY = uTranslateY - (uLoading * uTranslateY);
    float mask = step(maskY, 1.0 - uv.y);
    float translateOffset = uTranslateY * (1.0 - uLoading);

    vec2 translatedUV = uv;
    translatedUV.y += translateOffset;

    mask = smoothstep(maskY - 0.01, maskY + 0.01, 1.0 - uv.y);

    vec4 color = texture2D(uTexture, translatedUV);
    float cursor = texture2D(uFluid, screenUv).r;
    float oldCursor = cursor;
    cursor = smoothstep(0.2, 1.0, cursor);
    cursor = clamp(cursor, 0.0, 1.0);
    cursor = pow(cursor, 2.5); 

    color.rgb = mix(color.rgb, uColor, cursor);
    color.a *= mask; 

    gl_FragColor = color;
}`;let Xr=class{constructor(e,t,i,n,s,o){this.app=e,this.gl=t,this.scene=i,this.item=n,this.texture=s,this.index=o,this.sizes=this.app.sizes,this.time=this.app.time,this.init()}init(){this.setMaterial(),this.setMesh()}setMaterial(){this.material=new _t({vertexShader:rM,fragmentShader:oM,transparent:!0,depthTest:!1,uniforms:{uTexture:new N(this.texture),uRes:new N(new G(this.sizes.width,this.sizes.height)),uAspect:new N(new G(16,9)),uSize:new N(new G(0,0)),uFluid:new N(null),uColor:new N(new le(255/255,118/255,162/255)),uLoading:new N(0),uTranslateY:new N(1.2)}})}setMesh(){this.rect=this.item.getBoundingClientRect(),this.geometry=new pt(this.rect.width,this.rect.height,1,1),this.material.uniforms.uSize.value.set(this.rect.width,this.rect.height),this.material.uniforms.uAspect.value.set(this.rect.width,this.rect.height),this.mesh=new rt(this.geometry,this.material),this.mesh.renderOrder=10,this.mesh.rotation.x=-Math.PI/2,this.scene.add(this.mesh),this.setPosition();const e=gsap.timeline({paused:!0,defaults:{duration:1.4,ease:"power2"}});e.to(this.material.uniforms.uLoading,{value:1},this.index*.3),e.to(this.mesh.rotation,{y:0,x:0},this.index*.3),e.to(this.mesh.position,{z:0},this.index*.3),ScrollTrigger.create({trigger:this.item,start:"top 80%",onEnter:()=>e.restart()})}setPosition(){this.rect=this.item.getBoundingClientRect(),this.mesh.position.x=this.rect.left+this.rect.width/2-this.sizes.width/2,this.mesh.position.y=-this.rect.top-this.rect.height/2+this.sizes.height/2}resize(){this.rect=this.item.getBoundingClientRect(),xi(this.mesh,new pt(this.rect.width,this.rect.height,1,1)),this.mesh.material.uniforms.uSize.value.set(this.rect.width,this.rect.height)}update(){this.material.uniforms.uFluid.value=this.gl.fluidTexture}destroy(){this.material.dispose(),this.geometry.dispose(),this.scene.remove(this.mesh)}};var aM=`uniform vec2 uMouse;
uniform vec2 uRes;
uniform float uTime;

varying vec2 vUv;
varying vec2 screenUv;

#define PI 3.14159265359

vec3 deformationCurve(vec3 position, vec2 uv, vec2 offset)
{
    vec3 deformedPos = position;

    deformedPos.x += sin(uv.y * PI) * offset.x;
    deformedPos.y += sin(uv.x * PI) * offset.y;

    return deformedPos;
}

void main()
{
    vUv = uv;

    
    vec4 modelPosition = modelMatrix * vec4(position, 1.0);
    vec4 viewPosition = viewMatrix * modelPosition;
    vec4 projectedPosition = projectionMatrix * viewPosition;

    
    vec2 largeUv = vec2(projectedPosition.xy / projectedPosition.w) * 0.5 + 0.5;

    
    vec3 deformedPosition = vec3(position.x, position.y, position.z);
    deformedPosition.x = deformationCurve(position, largeUv, uMouse).x;
    deformedPosition.y = deformationCurve(position, uv, uMouse).y;

    
    modelPosition = modelMatrix * vec4(deformedPosition, 1.0);
    gl_Position = projectionMatrix * viewMatrix * modelPosition;

    
    screenUv = vec2(gl_Position.xy / gl_Position.w) * 0.5 + 0.5;
}`,lM=`uniform sampler2D uTexture;
uniform sampler2D uFluid;
uniform vec3 uColor;
uniform vec2 uRes;
uniform vec2 uSize;
uniform vec2 uAspect;
uniform float uBorder;
uniform float uHovered;
uniform float uOpacity;

varying vec2 vUv;
varying vec2 screenUv;

vec2 getCoverUv(vec2 uv, vec2 uTextureResolution, vec2 uItemSizes)
{
    vec2 tempUv = uv - vec2(0.5);

    float quadAspectRatio = uItemSizes.x / uItemSizes.y;
    float textureAspectRatio = uTextureResolution.x / uTextureResolution.y;

    if (quadAspectRatio < textureAspectRatio) {
        tempUv = tempUv * vec2(quadAspectRatio / textureAspectRatio, 1.0);
    } else {
        tempUv = tempUv * vec2(1.0, textureAspectRatio / quadAspectRatio);
    }

    return tempUv + vec2(0.5);
}
float getAlpha(vec2 uRes, float uBorder, vec2 uv)
{
    vec2 aspect = uRes / max(uRes.x, uRes.y);

    vec2 alphaUv = uv - 0.5;

    float borderRadius = min(uBorder, min(uRes.x, uRes.y) * 0.5);

    vec2 offset = vec2(borderRadius) / uRes;
    vec2 alphaXY = smoothstep(vec2(0.5 - offset), vec2(0.5 - offset - 0.001), abs(alphaUv));
    float alpha = min(1.0, alphaXY.x + alphaXY.y);

    vec2 aplhaUV2 = abs(uv - 0.5);
    float radius = borderRadius / max(uRes.x, uRes.y);
    aplhaUV2 = (aplhaUV2 - 0.5) * aspect + radius;
    float roundedAlpha = smoothstep(radius + 0.001, radius, length(aplhaUV2));

    return alpha = min(1.0, alpha + roundedAlpha);
}
vec4 applyBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float total = 0.0;
    for(int x = -2; x <= 2; x++) {
        for(int y = -2; y <= 2; y++) {
            vec2 offset = vec2(float(x), float(y)) * texelSize * blurAmount;
            color += texture2D(tex, uv + offset);
            total += 1.0;
        }
    }

    return color / total;
}

vec4 fastGaussianBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float weights[5] = float[](0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

    
    color += texture2D(tex, uv) * weights[0];
    for(int i = 1; i < 5; i++) {
        vec2 offset = vec2(float(i) * texelSize.x * blurAmount, 0.0);
        color += texture2D(tex, uv + offset) * weights[i];
        color += texture2D(tex, uv - offset) * weights[i];
    }

    return color;
}

vec4 fakeBlur(sampler2D tex, vec2 uv, float blurAmount) {
    
    vec2 noise = vec2(
        fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453),
        fract(sin(dot(uv, vec2(93.9898, 67.345))) * 43758.5453)
    ) - 0.5;

    vec2 offset = noise * blurAmount * 0.01;
    return texture2D(tex, uv + offset);
}
vec3 applyTint(vec3 originalColor, vec3 tintColor, float strength) {
    return mix(originalColor, originalColor * tintColor, strength);
}

vec3 applyOverlayTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 overlay = mix(originalColor, tintColor, 0.5);
    return mix(originalColor, overlay, strength);
}

vec3 applyMultiplyTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 multiplied = originalColor * tintColor;
    return mix(originalColor, multiplied, strength);
}

void main()
{
    vec2 uv = vUv;
    vec2 coverUv = getCoverUv(uv, uAspect, uSize);
    float cursor = texture2D(uFluid, screenUv).r;
    float border = getAlpha(uSize, uBorder, uv);

    vec4 color = texture2D(uTexture, coverUv);
    color.a *= border - uHovered * 0.5;

    float tintAmount = smoothstep(0.0, 1.0, cursor) * 0.1;

    color.rgb = applyOverlayTint(color.rgb, uColor, tintAmount);
    vec3 blurColor = fastGaussianBlur(uTexture, coverUv, cursor * 5.).rgb;
    color.rgb = mix(color.rgb, blurColor, cursor);
    vec3 fakeBlurColor = fakeBlur(uTexture, coverUv, uHovered * 10.).rgb;
    color.rgb = mix(color.rgb, fakeBlurColor, uHovered);

    color.a *= uOpacity;

    gl_FragColor = color;
}`;let cM=class{constructor(e,t,i,n,s){this.app=e,this.gl=t,this.scene=i,this.main=n,this.resources=s.items,this.sizes=this.app.sizes,this.time=this.app.time,this.items=this.main.querySelectorAll(".hero_image, .hero_video"),this.mouse=new G(0,0),this.offset=new G(0,0),this.outputOffset=new G(0,0),this.mouseEnabled=!1,this.offsetQuicks={x:gsap.quickTo(this.outputOffset,"x",{duration:.6,ease:"power2.out",onUpdate:()=>{this.mouseEnabled&&this.meshs.forEach(({material:o})=>o.uniforms.uMouse.value.set(this.outputOffset.x,this.outputOffset.y))}}),y:gsap.quickTo(this.outputOffset,"y",{duration:.6,ease:"power2.out"})},this.app.on("homeAnimationComplete",()=>{this.mouseEnabled=!0}),this.init()}init(){this.setMaterial(),this.setMesh(),this.debug()}debug(){if(!this.app.debug.active)return;this.app.debug.gui.addFolder("Home/Hero")}setMaterial(){this.material=new _t({vertexShader:aM,fragmentShader:lM,transparent:!0,depthTest:!1,uniforms:{uTexture:new N(null),uRes:new N(new G(this.sizes.width,this.sizes.height)),uAspect:new N(new G(16,9)),uSize:new N(new G(0,0)),uBorder:new N(0),uTime:new N(0),uFluid:new N(null),uHovered:new N(0),uColor:new N(new le(255/255,118/255,162/255)),uMouse:new N(this.mouse),uOpacity:new N(0)}})}setMesh(){this.group=new Fn,this.scene.add(this.group),this.meshs=[...this.items].map((e,t)=>{const n=[...this.items].filter(v=>v.querySelector("img")).indexOf(e),s=window.getComputedStyle(e).getPropertyValue("border-radius"),o=e.getBoundingClientRect(),l=/^((?!chrome|android).)*safari/i.test(navigator.userAgent)?20:30,c=new pt(o.width,o.height,l,l),h=this.material.clone();h.uniforms.uSize.value.set(o.width,o.height),h.uniforms.uBorder.value=parseFloat(s)||0;const d=e.querySelector("img"),u=e.querySelector("video");if(u)if(u._videoLoaderInstance){const v=u._videoLoaderInstance;if(v.isLoaded){const g=new at(u);h.uniforms.uTexture.value=g,h.uniforms.uAspect.value.set(v.width||u.videoWidth,v.height||u.videoHeight)}else v.on("loaded",()=>{const g=new at(u);h.uniforms.uTexture.value=g,h.uniforms.uAspect.value.set(v.width,v.height)})}else{const v=new Yt(u,{lazyLoad:!1});v.on("loaded",()=>{const g=new at(u);h.uniforms.uTexture.value=g,h.uniforms.uAspect.value.set(v.width,v.height)})}else if(d){h.uniforms.uTexture.value=this.resources[n];const v=d.getAttribute("src"),g=new Image;g.src=v,g.crossOrigin="anonymous",g.onload=()=>{h.uniforms.uAspect.value.set(g.width,g.height)}}const f=new rt(c,h),m=gsap.timeline({paused:!0});return m.to(f.material.uniforms.uHovered,{value:1,duration:.4,ease:"power1.inOut"}),this.group.add(f),e.style.setProperty("opacity","0"),this.app.observer.instance.observe(e),{mesh:f,item:e,material:h,tl:m}}),this.meshs.forEach(({item:e},t)=>{e.addEventListener("mouseenter",()=>{this.meshs.forEach(({tl:i},n)=>{n!=t&&i.play()})}),e.addEventListener("mouseleave",()=>{this.meshs.forEach(({tl:i},n)=>{i.reverse()})})}),this.setPosition()}setPosition(){this.meshs.forEach(({mesh:e,item:t})=>{if(t.dataset.visible=="false")return;const i=t.getBoundingClientRect();e.position.x=i.left+i.width/2-this.sizes.width/2,e.position.y=-i.top-i.height/2+this.sizes.height/2})}onMouseMove(e){this.mouseEnabled&&(this.mouse.x=e.clientX-window.innerWidth/2,this.mouse.y=e.clientY-window.innerHeight/2,this.offset.x=this.lerp(this.offset.x,this.mouse.x,.1),this.offset.y=this.lerp(this.offset.y,this.mouse.y,.1),this.offsetQuicks.x(-(this.mouse.x-this.offset.x)*.1),this.offsetQuicks.y((this.mouse.y-this.offset.y)*.02))}resize(){this.meshs.forEach(({mesh:e,item:t})=>{const i=t.getBoundingClientRect();xi(e,new pt(i.width,i.height,50,50)),e.material.uniforms.uSize.value.set(i.width,i.height);const n=window.getComputedStyle(t).getPropertyValue("border-radius");e.material.uniforms.uBorder.value=parseFloat(n)||0})}update(){this.meshs.forEach(({mesh:e,material:t})=>{t.uniforms.uFluid.value=this.gl.fluidTexture}),this.offsetQuicks.x(0),this.offsetQuicks.y(0)}destroy(){this.meshs.forEach(({mesh:e,material:t})=>{t.dispose(),e.geometry.dispose(),this.group.remove(e)}),this.group&&this.scene.remove(this.group)}lerp(e,t,i){return e*(1-i)+t*i}};var hM=`varying vec2 vUv;
varying vec2 screenUv;

void main()
{
    vUv = uv;
    vec4 modelPoisition = modelMatrix * vec4(position, 1.0);

    
    gl_Position = projectionMatrix * viewMatrix * modelPoisition;

    screenUv = vec2(gl_Position.xy / gl_Position.w) * 0.5 + 0.5;
}`,uM=`uniform sampler2D uTexture;
uniform sampler2D uFluid;
uniform vec3 uColor;
uniform vec2 uRes;
uniform vec2 uSize;
uniform vec2 uAspect;
uniform float uBorder;
uniform float uReveal;
uniform float uRotate;
uniform float uRotateX;
uniform float uRotateY;
uniform float uRadius; 
uniform float uZoom;
uniform float uParallax;
uniform float uAlpha;

varying vec2 vUv;
varying vec2 screenUv;

vec2 getCoverUv(vec2 uv, vec2 uTextureResolution, vec2 uItemSizes)
{
    vec2 tempUv = uv - vec2(0.5);

    float quadAspectRatio = uItemSizes.x / uItemSizes.y;
    float textureAspectRatio = uTextureResolution.x / uTextureResolution.y;

    if (quadAspectRatio < textureAspectRatio) {
        tempUv = tempUv * vec2(quadAspectRatio / textureAspectRatio, 1.0);
    } else {
        tempUv = tempUv * vec2(1.0, textureAspectRatio / quadAspectRatio);
    }

    return tempUv + vec2(0.5);
}
float getAlpha(vec2 uRes, float uBorder, vec2 uv)
{
    vec2 aspect = uRes / max(uRes.x, uRes.y);

    vec2 alphaUv = uv - 0.5;

    float borderRadius = min(uBorder, min(uRes.x, uRes.y) * 0.5);

    vec2 offset = vec2(borderRadius) / uRes;
    vec2 alphaXY = smoothstep(vec2(0.5 - offset), vec2(0.5 - offset - 0.001), abs(alphaUv));
    float alpha = min(1.0, alphaXY.x + alphaXY.y);

    vec2 aplhaUV2 = abs(uv - 0.5);
    float radius = borderRadius / max(uRes.x, uRes.y);
    aplhaUV2 = (aplhaUV2 - 0.5) * aspect + radius;
    float roundedAlpha = smoothstep(radius + 0.001, radius, length(aplhaUV2));

    return alpha = min(1.0, alpha + roundedAlpha);
}
vec2 rotateUV(vec2 uv, float angle) {
    vec2 center = vec2(0.5);
    uv -= center;

    float cosAngle = cos(angle);
    float sinAngle = sin(angle);

    vec2 rotated;
    rotated.x = uv.x * cosAngle - uv.y * sinAngle;
    rotated.y = uv.x * sinAngle + uv.y * cosAngle;

    return rotated + center;
}

vec2 rotateUVX(vec2 uv, float angleX) {
    vec2 center = vec2(0.5);
    uv -= center;

    
    vec3 pos = vec3(uv.x, uv.y, 0.0);

    
    float cosX = cos(angleX);
    float sinX = sin(angleX);

    vec3 rotated;
    rotated.x = pos.x;
    rotated.y = pos.y * cosX - pos.z * sinX;
    rotated.z = pos.y * sinX + pos.z * cosX;

    
    float perspective = 1.0 / (1.0 - rotated.z * 0.5);
    vec2 result = vec2(rotated.x, rotated.y) * perspective;

    return result + center;
}

vec2 rotateUVY(vec2 uv, float angleY) {
    vec2 center = vec2(0.5);
    uv -= center;

    
    vec3 pos = vec3(uv.x, uv.y, 0.0);

    
    float cosY = cos(angleY);
    float sinY = sin(angleY);

    vec3 rotated;
    rotated.x = pos.x * cosY + pos.z * sinY;
    rotated.y = pos.y;
    rotated.z = -pos.x * sinY + pos.z * cosY;

    
    float perspective = 1.0 / (1.0 - rotated.z * 0.5);
    vec2 result = vec2(rotated.x, rotated.y) * perspective;

    return result + center;
}
vec4 applyBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float total = 0.0;
    for(int x = -2; x <= 2; x++) {
        for(int y = -2; y <= 2; y++) {
            vec2 offset = vec2(float(x), float(y)) * texelSize * blurAmount;
            color += texture2D(tex, uv + offset);
            total += 1.0;
        }
    }

    return color / total;
}

vec4 fastGaussianBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float weights[5] = float[](0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

    
    color += texture2D(tex, uv) * weights[0];
    for(int i = 1; i < 5; i++) {
        vec2 offset = vec2(float(i) * texelSize.x * blurAmount, 0.0);
        color += texture2D(tex, uv + offset) * weights[i];
        color += texture2D(tex, uv - offset) * weights[i];
    }

    return color;
}

vec4 fakeBlur(sampler2D tex, vec2 uv, float blurAmount) {
    
    vec2 noise = vec2(
        fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453),
        fract(sin(dot(uv, vec2(93.9898, 67.345))) * 43758.5453)
    ) - 0.5;

    vec2 offset = noise * blurAmount * 0.01;
    return texture2D(tex, uv + offset);
}
vec3 applyTint(vec3 originalColor, vec3 tintColor, float strength) {
    return mix(originalColor, originalColor * tintColor, strength);
}

vec3 applyOverlayTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 overlay = mix(originalColor, tintColor, 0.5);
    return mix(originalColor, overlay, strength);
}

vec3 applyMultiplyTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 multiplied = originalColor * tintColor;
    return mix(originalColor, multiplied, strength);
}

float roundedRect(vec2 uv, vec2 size, float radius) {
    vec2 center = vec2(0.5);
    vec2 pos = abs(uv - center) - (size * 0.5 - radius);
    return length(max(pos, 0.0)) + min(max(pos.x, pos.y), 0.0) - radius;
}

void main()
{
    vec2 uv = vUv;
    vec2 coverUv = getCoverUv(uv, uAspect, uSize);

    coverUv -= 0.5;
    coverUv *= 0.9;
    coverUv += 0.5;

    
    coverUv.y -= uParallax * - 1.0;

    vec2 rotatedUv = rotateUV(uv, uRotate);
    rotatedUv = rotateUVX(rotatedUv, uRotateX);
    rotatedUv = rotateUVY(rotatedUv, uRotateY);

    vec4 color = texture2D(uTexture, coverUv);
    float alpha = getAlpha(uSize, uBorder, uv);
    float cursor = texture2D(uFluid, screenUv).r;

    float maxDistance = 0.5;
    float reveal = maxDistance * uReveal;
    vec2 areaSize = vec2(reveal * 2.0);

    
    float sdf = roundedRect(rotatedUv, areaSize, uRadius);
    float area = 1.0 - smoothstep(-0.001, 0.001, sdf);

    color.a *= alpha * area;

    float tintAmount = smoothstep(0.0, 1.0, cursor) * 0.1;

    color.rgb = applyOverlayTint(color.rgb, uColor, tintAmount);
    vec3 blurColor = fastGaussianBlur(uTexture, coverUv, cursor * 5.).rgb;
    color.rgb = mix(color.rgb, blurColor, cursor * 0.5);

    
    color.a *= uAlpha;

    gl_FragColor = color;
}`;let dM=class{constructor(e,t,i,n){this.app=e,this.gl=t,this.scene=i,this.main=n,this.sizes=this.app.sizes,this.time=this.app.time,this.items=this.main.querySelectorAll(".preview_img, .talk_full"),this.init()}init(){this.setMaterial(),this.setMesh(),this.debug()}debug(){if(!this.app.debug.active)return;const e=this.app.debug.gui;this.folder=e.addFolder("Home/Video"),this.folder.add(this.material.uniforms.uReveal,"value",0,1,.01).name("uReveal").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uReveal.value=t)}),this.folder.add(this.material.uniforms.uRotate,"value",0,2,.01).name("uRotate").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uRotate.value=t)}),this.folder.add(this.material.uniforms.uRadius,"value",0,1,.01).name("uRadius").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uRadius.value=t)}),this.folder.add(this.material.uniforms.uRotateX,"value",-1,1,.01).name("uRotateX").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uRotateX.value=t)}),this.folder.add(this.material.uniforms.uRotateY,"value",-1,1,.01).name("uRotateY").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uRotateY.value=t)}),this.folder.add(this.material.uniforms.uZoom,"value",-1,1,.01).name("uZoom").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uZoom.value=t)}),this.folder.add(this.material.uniforms.uAlpha,"value",0,1,.01).name("uAlpha").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uAlpha.value=t)})}setMaterial(){this.material=new _t({vertexShader:hM,fragmentShader:uM,transparent:!0,depthTest:!1,uniforms:{uTexture:new N(null),uRes:new N(new G(this.sizes.width,this.sizes.height)),uAspect:new N(new G(16,9)),uSize:new N(new G(0,0)),uBorder:new N(0),uReveal:new N(0),uRotate:new N(0),uRotateX:new N(0),uRotateY:new N(0),uRadius:new N(.02),uZoom:new N(.55),uTime:new N(0),uFluid:new N(null),uParallax:new N(0),uColor:new N(new le(255/255,118/255,162/255)),uAlpha:new N(1)}})}setMesh(){this.meshs=[...this.items].map((e,t)=>{const i=window.getComputedStyle(e).getPropertyValue("border-radius").split("px"),n=e.getBoundingClientRect(),s=new pt(n.width,n.height,1,1),o=this.material.clone();o.uniforms.uSize.value.set(n.width,n.height),o.uniforms.uBorder.value=parseFloat(i[0]);const a=new rt(s,o),l=e.querySelector("video");if(l)if(l._videoLoaderInstance){const h=l._videoLoaderInstance;if(h.isLoaded){const d=new at(l);o.uniforms.uTexture.value=d,o.uniforms.uAspect.value.set(h.width||l.videoWidth,h.height||l.videoHeight)}else h.on("loaded",()=>{const d=new at(l);o.uniforms.uTexture.value=d,o.uniforms.uAspect.value.set(h.width,h.height)})}else{const h=new Yt(l,{lazyLoad:!1});h.on("loaded",()=>{const d=new at(l);o.uniforms.uTexture.value=d,o.uniforms.uAspect.value.set(h.width,h.height)})}this.scene.add(a),this.app.observer.instance.observe(e);const c=gsap.timeline({paused:!0,defaults:{duration:1,ease:"power3.out"}});return e.classList.contains("talk_full")?(a.scale.set(.3,.3,.3),c.to(o.uniforms.uReveal,{value:1,duration:.1}).to(a.scale,{x:1,y:1,z:1,duration:1.2,ease:"back.out(1.2)"},"<0.1").fromTo(o.uniforms.uRotate,{value:-.3},{value:0},"<0.1").fromTo(o.uniforms.uRotateY,{value:.8},{value:0},"<0.1").fromTo(o.uniforms.uRotateX,{value:-.8},{value:0},"<0.1").fromTo(o.uniforms.uRadius,{value:0},{value:.02,duration:.2},"<0.8")):c.to(o.uniforms.uReveal,{value:1}).fromTo(o.uniforms.uRotate,{value:-.3},{value:0},"<").fromTo(o.uniforms.uRotateY,{value:.8},{value:0},"<").fromTo(o.uniforms.uRotateX,{value:-.8},{value:0},"<").fromTo(o.uniforms.uRadius,{value:0},{value:.02,duration:.2},"<"),ScrollTrigger.create({trigger:e,start:"top 90%",onEnter:()=>c.play()}),ScrollTrigger.create({trigger:e,start:"top bottom",onLeaveBack:()=>c.pause(0)}),{mesh:a,item:e,material:o}}),this.setPosition()}setPosition(){this.meshs.forEach(({mesh:e,item:t})=>{if(t.dataset.visible=="false"){e.visible=!1;return}e.visible=!0;const i=t.getBoundingClientRect();e.position.x=i.left+i.width/2-this.sizes.width/2,e.position.y=-i.top-i.height/2+this.sizes.height/2})}resize(){this.meshs.forEach(({mesh:e,item:t})=>{const i=t.getBoundingClientRect();xi(e,new pt(i.width,i.height,1,1)),e.material.uniforms.uSize.value.set(i.width,i.height);const n=window.getComputedStyle(t).getPropertyValue("border-radius").split("px");e.material.uniforms.uBorder.value=parseFloat(n[0])})}update(){this.meshs.forEach(({mesh:e,material:t})=>{t.uniforms.uFluid.value=this.gl.fluidTexture})}destroy(){this.meshs.forEach(({mesh:e,material:t})=>{t.dispose(),e.geometry.dispose(),this.scene.remove(e)})}};var fM=`varying vec2 vUv;
varying vec2 screenUv;

void main()
{
    vUv = uv;
    vec4 modelPoisition = modelMatrix * vec4(position, 1.0);

    
    gl_Position = projectionMatrix * viewMatrix * modelPoisition;

    screenUv = vec2(gl_Position.xy / gl_Position.w) * 0.5 + 0.5;
}`,pM=`uniform sampler2D uTexture;
uniform sampler2D uFluid;
uniform vec3 uColor;
uniform vec2 uRes;
uniform vec2 uSize;
uniform vec2 uAspect;
uniform float uReveal;
uniform float uRotate;
uniform float uRotateX;
uniform float uRotateY;
uniform float uRadius; 
uniform float uZoom;

varying vec2 vUv;
varying vec2 screenUv;

vec2 getCoverUv(vec2 uv, vec2 uTextureResolution, vec2 uItemSizes)
{
    vec2 tempUv = uv - vec2(0.5);

    float quadAspectRatio = uItemSizes.x / uItemSizes.y;
    float textureAspectRatio = uTextureResolution.x / uTextureResolution.y;

    if (quadAspectRatio < textureAspectRatio) {
        tempUv = tempUv * vec2(quadAspectRatio / textureAspectRatio, 1.0);
    } else {
        tempUv = tempUv * vec2(1.0, textureAspectRatio / quadAspectRatio);
    }

    return tempUv + vec2(0.5);
}
float getAlpha(vec2 uRes, float uBorder, vec2 uv)
{
    vec2 aspect = uRes / max(uRes.x, uRes.y);

    vec2 alphaUv = uv - 0.5;

    float borderRadius = min(uBorder, min(uRes.x, uRes.y) * 0.5);

    vec2 offset = vec2(borderRadius) / uRes;
    vec2 alphaXY = smoothstep(vec2(0.5 - offset), vec2(0.5 - offset - 0.001), abs(alphaUv));
    float alpha = min(1.0, alphaXY.x + alphaXY.y);

    vec2 aplhaUV2 = abs(uv - 0.5);
    float radius = borderRadius / max(uRes.x, uRes.y);
    aplhaUV2 = (aplhaUV2 - 0.5) * aspect + radius;
    float roundedAlpha = smoothstep(radius + 0.001, radius, length(aplhaUV2));

    return alpha = min(1.0, alpha + roundedAlpha);
}
vec2 rotateUV(vec2 uv, float angle) {
    vec2 center = vec2(0.5);
    uv -= center;

    float cosAngle = cos(angle);
    float sinAngle = sin(angle);

    vec2 rotated;
    rotated.x = uv.x * cosAngle - uv.y * sinAngle;
    rotated.y = uv.x * sinAngle + uv.y * cosAngle;

    return rotated + center;
}

vec2 rotateUVX(vec2 uv, float angleX) {
    vec2 center = vec2(0.5);
    uv -= center;

    
    vec3 pos = vec3(uv.x, uv.y, 0.0);

    
    float cosX = cos(angleX);
    float sinX = sin(angleX);

    vec3 rotated;
    rotated.x = pos.x;
    rotated.y = pos.y * cosX - pos.z * sinX;
    rotated.z = pos.y * sinX + pos.z * cosX;

    
    float perspective = 1.0 / (1.0 - rotated.z * 0.5);
    vec2 result = vec2(rotated.x, rotated.y) * perspective;

    return result + center;
}

vec2 rotateUVY(vec2 uv, float angleY) {
    vec2 center = vec2(0.5);
    uv -= center;

    
    vec3 pos = vec3(uv.x, uv.y, 0.0);

    
    float cosY = cos(angleY);
    float sinY = sin(angleY);

    vec3 rotated;
    rotated.x = pos.x * cosY + pos.z * sinY;
    rotated.y = pos.y;
    rotated.z = -pos.x * sinY + pos.z * cosY;

    
    float perspective = 1.0 / (1.0 - rotated.z * 0.5);
    vec2 result = vec2(rotated.x, rotated.y) * perspective;

    return result + center;
}
vec4 applyBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float total = 0.0;
    for(int x = -2; x <= 2; x++) {
        for(int y = -2; y <= 2; y++) {
            vec2 offset = vec2(float(x), float(y)) * texelSize * blurAmount;
            color += texture2D(tex, uv + offset);
            total += 1.0;
        }
    }

    return color / total;
}

vec4 fastGaussianBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float weights[5] = float[](0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

    
    color += texture2D(tex, uv) * weights[0];
    for(int i = 1; i < 5; i++) {
        vec2 offset = vec2(float(i) * texelSize.x * blurAmount, 0.0);
        color += texture2D(tex, uv + offset) * weights[i];
        color += texture2D(tex, uv - offset) * weights[i];
    }

    return color;
}

vec4 fakeBlur(sampler2D tex, vec2 uv, float blurAmount) {
    
    vec2 noise = vec2(
        fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453),
        fract(sin(dot(uv, vec2(93.9898, 67.345))) * 43758.5453)
    ) - 0.5;

    vec2 offset = noise * blurAmount * 0.01;
    return texture2D(tex, uv + offset);
}
vec3 applyTint(vec3 originalColor, vec3 tintColor, float strength) {
    return mix(originalColor, originalColor * tintColor, strength);
}

vec3 applyOverlayTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 overlay = mix(originalColor, tintColor, 0.5);
    return mix(originalColor, overlay, strength);
}

vec3 applyMultiplyTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 multiplied = originalColor * tintColor;
    return mix(originalColor, multiplied, strength);
}

float roundedRect(vec2 uv, vec2 size, float radius) {
    vec2 center = vec2(0.5);
    vec2 pos = abs(uv - center) - (size * 0.5 - radius);
    return length(max(pos, 0.0)) + min(max(pos.x, pos.y), 0.0) - radius;
}

void main()
{
    vec2 uv = vUv;
    vec2 coverUv = getCoverUv(uv, uAspect, uSize);
    vec2 zoomedUv = coverUv - uZoom;
    zoomedUv *= 1.0 - uZoom * (1.0 - smoothstep(0.0, 1.0, uReveal));
    zoomedUv += uZoom;
    vec2 rotatedUv = rotateUV(uv, uRotate);
    rotatedUv = rotateUVX(rotatedUv, uRotateX);
    rotatedUv = rotateUVY(rotatedUv, uRotateY);

    vec4 color = texture2D(uTexture, zoomedUv);
    float cursor = texture2D(uFluid, screenUv).r;

    float maxDistance = 0.5;
    float reveal = maxDistance * uReveal;
    vec2 areaSize = vec2(reveal * 2.0);

    
    float sdf = roundedRect(rotatedUv, areaSize, uRadius);
    float area = 1.0 - smoothstep(-0.001, 0.001, sdf);

    color.a *= area;

    float tintAmount = smoothstep(0.0, 1.0, cursor) * 0.1;

    color.rgb = applyOverlayTint(color.rgb, uColor, tintAmount);
    vec3 blurColor = fastGaussianBlur(uTexture, coverUv, cursor * 5.).rgb;
    color.rgb = mix(color.rgb, blurColor, cursor * 0.5);

    float fadeArea = smoothstep(0.0, 0.5, uv.y);
    color.rgb = mix(color.rgb * 0.2, color.rgb, fadeArea);

    gl_FragColor = color;
}`;let mM=class{constructor(e,t,i,n){this.app=e,this.gl=t,this.scene=i,this.main=n,this.sizes=this.app.sizes,this.time=this.app.time,this.items=this.main.querySelectorAll(".full_item"),this.init()}init(){this.setMaterial(),this.setMesh()}setMaterial(){this.material=new _t({vertexShader:fM,fragmentShader:pM,transparent:!0,depthTest:!1,uniforms:{uTexture:new N(null),uRes:new N(new G(this.sizes.width,this.sizes.height)),uAspect:new N(new G(16,9)),uSize:new N(new G(0,0)),uReveal:new N(0),uRotate:new N(0),uRotateX:new N(0),uRotateY:new N(0),uRadius:new N(.02),uZoom:new N(.55),uTime:new N(0),uFluid:new N(null),uColor:new N(new le(255/255,118/255,162/255))}})}setMesh(){this.meshs=[...this.items].map((e,t)=>{const i=e.getBoundingClientRect(),n=new pt(i.width,i.height,1,1),s=this.material.clone();s.uniforms.uSize.value.set(i.width,i.height),s.uniforms.uTexture.value=this.gl.gradientTexture;const o=new rt(n,s),a=e.querySelector("video");if(a)if(a._videoLoaderInstance){const c=a._videoLoaderInstance;if(c.isLoaded){const h=new at(a);s.uniforms.uTexture.value=h,s.uniforms.uAspect.value.set(c.width||a.videoWidth,c.height||a.videoHeight)}else c.on("loaded",()=>{const h=new at(a);s.uniforms.uTexture.value=h,s.uniforms.uAspect.value.set(c.width,c.height)})}else{const c=new Yt(a,{lazyLoad:!1});c.on("loaded",()=>{const h=new at(a);s.uniforms.uTexture.value=h,s.uniforms.uAspect.value.set(c.width,c.height)})}o.renderOrder=t,this.scene.add(o),this.app.observer.instance.observe(e);const l=gsap.timeline({paused:!0,defaults:{duration:1,ease:"power3.out"}});return l.to(s.uniforms.uReveal,{value:1}).fromTo(s.uniforms.uRotate,{value:-.3},{value:0},"<").fromTo(s.uniforms.uRotateY,{value:.8},{value:0},"<").fromTo(s.uniforms.uRotateX,{value:-.8},{value:0},"<"),{mesh:o,item:e,material:s,tl:l}}),this.setPosition()}setPosition(){this.meshs.forEach(({mesh:e,item:t})=>{if(t.dataset.visible=="false"){e.visible=!1;return}e.visible=!0;const i=t.getBoundingClientRect();e.position.x=i.left+i.width/2-this.sizes.width/2,e.position.y=-i.top-i.height/2+this.sizes.height/2})}resize(){this.meshs.forEach(({mesh:e,item:t})=>{const i=t.getBoundingClientRect();xi(e,new pt(i.width,i.height,1,1)),e.material.uniforms.uSize.value.set(i.width,i.height)})}update(){this.meshs.forEach(({mesh:e,material:t})=>{t.uniforms.uFluid.value=this.gl.fluidTexture})}destroy(){this.meshs.forEach(({mesh:e,material:t})=>{t.dispose(),e.geometry.dispose(),this.scene.remove(e)})}};const gM=Object.freeze(Object.defineProperty({__proto__:null,default:class{constructor(e,t,i,n,s){this.gl=e,this.app=t,this.scene=i,this.main=n,this.index=s,this.sizes=this.app.sizes,this.renderer=this.gl.renderer.instance,this.camera=this.gl.camera.instance,this.scene=i,this.load()}load(){this.count=0,this.items=this.main.querySelectorAll(".hero_image, .hero_video"),this.footerLogo=this.main.querySelector(".footer_logo"),this.nowText=this.main.querySelector(".now_texture"),this.testimonials=this.main.querySelector(".testimonials"),this.sources=[...this.items].filter(e=>e.querySelector("img")).map((e,t)=>({type:"textureLoader",url:e.querySelector("img").getAttribute("src"),name:t})),this.footerLogo&&(this.getTextureAttributes(this.footerLogo).forEach(({value:t},i)=>{this.sources.push({type:"textureLoader",url:t,name:`footer-${i}`})}),gsap.set(this.footerLogo,{opacity:0})),this.nowText&&this.getTextureAttributes(this.nowText).forEach(({value:t},i)=>{this.sources.push({type:"textureLoader",url:t,name:`nowText-${i}`})}),this.resources=new Wr(this.sources),this.resources.on("ready",()=>this.init())}init(){if(this.gl.loaded=!0,this.video=new dM(this.app,this.gl,this.scene,this.main),this.full=new mM(this.app,this.gl,this.scene,this.main),this.hero=new cM(this.app,this.gl,this.scene,this.main,this.resources),this.footerLogo){this.footerMeshs=[];const e=this.getTextureAttributes(this.footerLogo);this.footerTextures=e.map((t,i)=>{const n=`footer-${i}`;return this.resources.items[n]}),this.footerTextures.forEach((t,i)=>{this.footerMeshs[i]=new Xr(this.app,this.gl,this.scene,this.footerLogo,t,i)})}if(this.nowText){this.nowMeshs=[];const e=this.getTextureAttributes(this.nowText);this.nowTextTextures=e.map((t,i)=>{const n=`nowText-${i}`;return this.resources.items[n]}),this.nowTextTextures.forEach((t,i)=>{this.nowMeshs[i]=new Xr(this.app,this.gl,this.scene,this.nowText,t,i)})}this.app.trigger("loadedWorld"),this.app.onceLoaded||(this.app.globalLoader.tl.play(),this.app.page.triggerLoad())}setScroll(e){var t,i,n,s,o;(t=this.video)==null||t.setPosition(),(i=this.full)==null||i.setPosition(),(n=this.hero)==null||n.setPosition(),(s=this.footerMeshs)==null||s.forEach(a=>a.setPosition()),(o=this.nowMeshs)==null||o.forEach(a=>a.setPosition())}update(){var e,t,i,n,s;(e=this.video)==null||e.update(),(t=this.full)==null||t.update(),(i=this.hero)==null||i.update(),(n=this.footerMeshs)==null||n.forEach(o=>o.update()),(s=this.nowMeshs)==null||s.forEach(o=>o.update())}createTexture(e){return this.renderer.setRenderTarget(e),this.renderer.render(this.scene,this.camera),this.renderer.setRenderTarget(null),e.texture}resize(){var e,t,i,n,s;(e=this.video)==null||e.resize(),(t=this.full)==null||t.resize(),(i=this.hero)==null||i.resize(),(n=this.footerMeshs)==null||n.forEach(o=>o.resize()),(s=this.nowMeshs)==null||s.forEach(o=>o.resize())}onMouseMove(e,t){var i;(i=this.hero)==null||i.onMouseMove(e,t)}destroy(){var e,t,i,n,s;(e=this.video)==null||e.destroy(),(t=this.full)==null||t.destroy(),(i=this.hero)==null||i.destroy(),(n=this.footerMeshs)==null||n.forEach(o=>o.destroy()),(s=this.nowMeshs)==null||s.forEach(o=>o.destroy())}getTextureAttributes(e){return e.getAttributeNames().filter(t=>t.startsWith("data-texture-")).map(t=>({name:t,value:e.getAttribute(t),number:parseInt(t.split("-")[2])})).sort((t,i)=>t.number-i.number)}}},Symbol.toStringTag,{value:"Module"}));var vM=`uniform float uOffset;

varying vec2 vUv;
varying vec2 screenUv;

#define PI 3.14159265359

vec3 deformationCurve(vec3 position, vec2 uv, float offset)
{
    vec3 deformedPos = position;

    deformedPos.x += sin(uv.y * PI) * offset;

    return deformedPos;
}

void main()
{
    vUv = uv;

    
    vec4 modelPosition = modelMatrix * vec4(position, 1.0);
    vec4 viewPosition = viewMatrix * modelPosition;
    vec4 projectedPosition = projectionMatrix * viewPosition;

    
    vec2 largeUv = vec2(projectedPosition.xy / projectedPosition.w) * 0.5 + 0.5;

    
    vec3 deformedPosition = vec3(position.x, position.y, position.z);
    deformedPosition.x = deformationCurve(position, largeUv, uOffset).x;

    
    modelPosition = modelMatrix * vec4(deformedPosition, 1.0);
    gl_Position = projectionMatrix * viewMatrix * modelPosition;

    screenUv = vec2(gl_Position.xy / gl_Position.w) * 0.5 + 0.5;
}`,yM=`uniform sampler2D uTexture;
uniform sampler2D uFluid;
uniform vec3 uColor;
uniform vec2 uRes;
uniform vec2 uSize;
uniform vec2 uAspect;
uniform float uBorder;
uniform float uParallax;
uniform float uLoading;

varying vec2 vUv;
varying vec2 screenUv;

vec2 getCoverUv(vec2 uv, vec2 uTextureResolution, vec2 uItemSizes)
{
    vec2 tempUv = uv - vec2(0.5);

    float quadAspectRatio = uItemSizes.x / uItemSizes.y;
    float textureAspectRatio = uTextureResolution.x / uTextureResolution.y;

    if (quadAspectRatio < textureAspectRatio) {
        tempUv = tempUv * vec2(quadAspectRatio / textureAspectRatio, 1.0);
    } else {
        tempUv = tempUv * vec2(1.0, textureAspectRatio / quadAspectRatio);
    }

    return tempUv + vec2(0.5);
}
float getAlpha(vec2 uRes, float uBorder, vec2 uv)
{
    vec2 aspect = uRes / max(uRes.x, uRes.y);

    vec2 alphaUv = uv - 0.5;

    float borderRadius = min(uBorder, min(uRes.x, uRes.y) * 0.5);

    vec2 offset = vec2(borderRadius) / uRes;
    vec2 alphaXY = smoothstep(vec2(0.5 - offset), vec2(0.5 - offset - 0.001), abs(alphaUv));
    float alpha = min(1.0, alphaXY.x + alphaXY.y);

    vec2 aplhaUV2 = abs(uv - 0.5);
    float radius = borderRadius / max(uRes.x, uRes.y);
    aplhaUV2 = (aplhaUV2 - 0.5) * aspect + radius;
    float roundedAlpha = smoothstep(radius + 0.001, radius, length(aplhaUV2));

    return alpha = min(1.0, alpha + roundedAlpha);
}
vec4 applyBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float total = 0.0;
    for(int x = -2; x <= 2; x++) {
        for(int y = -2; y <= 2; y++) {
            vec2 offset = vec2(float(x), float(y)) * texelSize * blurAmount;
            color += texture2D(tex, uv + offset);
            total += 1.0;
        }
    }

    return color / total;
}

vec4 fastGaussianBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float weights[5] = float[](0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

    
    color += texture2D(tex, uv) * weights[0];
    for(int i = 1; i < 5; i++) {
        vec2 offset = vec2(float(i) * texelSize.x * blurAmount, 0.0);
        color += texture2D(tex, uv + offset) * weights[i];
        color += texture2D(tex, uv - offset) * weights[i];
    }

    return color;
}

vec4 fakeBlur(sampler2D tex, vec2 uv, float blurAmount) {
    
    vec2 noise = vec2(
        fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453),
        fract(sin(dot(uv, vec2(93.9898, 67.345))) * 43758.5453)
    ) - 0.5;

    vec2 offset = noise * blurAmount * 0.01;
    return texture2D(tex, uv + offset);
}
vec3 applyTint(vec3 originalColor, vec3 tintColor, float strength) {
    return mix(originalColor, originalColor * tintColor, strength);
}

vec3 applyOverlayTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 overlay = mix(originalColor, tintColor, 0.5);
    return mix(originalColor, overlay, strength);
}

vec3 applyMultiplyTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 multiplied = originalColor * tintColor;
    return mix(originalColor, multiplied, strength);
}

void main()
{
    vec2 uv = vUv;
    vec2 coverUv = getCoverUv(uv, uAspect, uSize);

    coverUv -= 0.5;
    coverUv *= 0.9;
    coverUv += 0.5;

    coverUv.x += uParallax;

    vec4 color = texture2D(uTexture, coverUv);
    float alpha = getAlpha(uSize, uBorder, uv);
    float cursor = texture2D(uFluid, screenUv).r;
    float oldCursor = cursor;
    cursor = smoothstep(0.2, 1.0, cursor);
    cursor = clamp(cursor, 0.0, 1.0);
    cursor = pow(cursor, 2.5); 

    color.a *= alpha * uLoading;

    float tintAmount = smoothstep(0.0, 1.0, cursor) * 0.1;

    color.rgb = applyOverlayTint(color.rgb, uColor, tintAmount);
    vec3 blurColor = fastGaussianBlur(uTexture, coverUv, cursor * 5.).rgb;
    color.rgb = mix(color.rgb, blurColor, cursor * 0.5);

    
    float fadeArea = smoothstep(0.0, 0.3, uv.y);
    vec3 gradientColor = mix(color.rgb * 0.2, color.rgb, fadeArea);
    color.rgb = gradientColor;

    gl_FragColor = color;
}`;let xM=class{constructor(e,t,i,n,s,o,a){this.app=e,this.gl=t,this.scene=i,this.main=n,this.resources=s,this.videoTextures=o,this.items=a,this.sizes=this.app.sizes,this.time=this.app.time,this.velocity={value:0},this.quick=gsap.quickTo(this.velocity,"value",{duration:.5,ease:"power2"}),this.init()}init(){this.setMaterial(),this.setMesh(),this.debug()}debug(){if(!this.app.debug.active)return;const t=this.app.debug.gui.addFolder("Home/Video");t.add(this.material.uniforms.uReveal,"value",0,1,.01).name("uReveal").onChange(i=>{this.meshs.forEach(({material:n})=>n.uniforms.uReveal.value=i)}),t.add(this.material.uniforms.uRotate,"value",0,2,.01).name("uRotate").onChange(i=>{this.meshs.forEach(({material:n})=>n.uniforms.uRotate.value=i)}),t.add(this.material.uniforms.uRadius,"value",0,1,.01).name("uRadius").onChange(i=>{this.meshs.forEach(({material:n})=>n.uniforms.uRadius.value=i)}),t.add(this.material.uniforms.uRotateX,"value",-1,1,.01).name("uRotateX").onChange(i=>{this.meshs.forEach(({material:n})=>n.uniforms.uRotateX.value=i)}),t.add(this.material.uniforms.uRotateY,"value",-1,1,.01).name("uRotateY").onChange(i=>{this.meshs.forEach(({material:n})=>n.uniforms.uRotateY.value=i)}),t.add(this.material.uniforms.uZoom,"value",-1,1,.01).name("uZoom").onChange(i=>{this.meshs.forEach(({material:n})=>n.uniforms.uZoom.value=i)})}setMaterial(){this.material=new _t({vertexShader:vM,fragmentShader:yM,transparent:!0,depthTest:!1,uniforms:{uTexture:new N(null),uRes:new N(new G(this.sizes.width,this.sizes.height)),uAspect:new N(new G(16,9)),uSize:new N(new G(0,0)),uBorder:new N(0),uReveal:new N(0),uRotate:new N(0),uRotateX:new N(0),uRotateY:new N(0),uRadius:new N(.02),uZoom:new N(.55),uLoading:new N(0),uTime:new N(0),uFluid:new N(null),uOffset:new N(null),uParallax:new N(0),uColor:new N(new le(255/255,118/255,162/255))}})}setMesh(){this.meshs=[...this.items].map((e,t)=>{const i=window.getComputedStyle(e).getPropertyValue("border-radius").split("px"),n=e.querySelector(".f-28"),s=n?n.textContent.trim()||`case-${t}`:`case-${t}`,o=e.querySelector(".cases_video_wrapper");let a=null,l=0,c=0;if(o.classList.contains("w-condition-invisible")){a=this.resources[s];const m=new Image;m.src=e.querySelector("img").getAttribute("src"),m.onload=()=>{u.uniforms.uAspect.value.set(m.width,m.height)}}else{const m=this.videoTextures.find(v=>v.name===s);a=m.texture,l=m.width,c=m.height}const h=e.getBoundingClientRect(),d=new pt(h.width,h.height,200,200),u=this.material.clone();u.uniforms.uSize.value.set(h.width,h.height),u.uniforms.uTexture.value=a,u.uniforms.uBorder.value=parseFloat(i[0]),u.uniforms.uAspect.value.set(l,c);const f=new rt(d,u);return this.scene.add(f),{mesh:f,item:e,material:u}}),this.setPosition(null)}setPosition(e){this.meshs.forEach(({mesh:t,item:i})=>{if(i.dataset.visible=="false"){t.visible=!1;return}t.visible=!0;const n=i.getBoundingClientRect();t.position.x=n.left+n.width/2-this.sizes.width/2,t.position.y=-n.top-n.height/2+this.sizes.height/2}),e&&(this.quick(-e.velocity*1.5),this.meshs.forEach(({material:t})=>t.uniforms.uOffset.value=this.velocity.value))}resize(){this.meshs.forEach(({mesh:e,item:t})=>{const i=t.getBoundingClientRect();xi(e,new pt(i.width,i.height,200,200)),e.material.uniforms.uSize.value.set(i.width,i.height);const n=window.getComputedStyle(t).getPropertyValue("border-radius").split("px");e.material.uniforms.uBorder.value=parseFloat(n[0])})}update(){this.destroyed||this.meshs.forEach(({mesh:e,material:t})=>{t.uniforms.uFluid.value=this.gl.fluidTexture})}destroy(){this.meshs.forEach(({mesh:e,material:t})=>{t.dispose(),e.geometry.dispose(),this.scene.remove(e),this.destroyed=!0})}};const _M=Object.freeze(Object.defineProperty({__proto__:null,default:class{constructor(e,t,i,n){this.gl=e,this.app=t,this.scene=i,this.main=n,this.sizes=this.app.sizes,this.renderer=this.gl.renderer.instance,this.camera=this.gl.camera.instance,this.scene=i,this.load()}load(){this.videosLength=this.main.querySelectorAll(".cases_video_wrapper:not(.w-condition-invisible)").length,this.videoTexetures=[],this.count=0,this.videoLoaded=!1,this.itemElements=this.main.querySelectorAll(".cases_item"),this.sources=[...this.itemElements].map(e=>{const t=e.querySelector(".f-28").textContent.trim(),i=e.querySelector("img");return i.classList.contains("w-condition-invisible")?null:{type:"textureLoader",url:i.getAttribute("src"),name:t}}).filter(Boolean),this.resources=new Wr(this.sources),this.videosToLoadCount=0,this.itemElements.forEach(e=>{const t=e.querySelector(".f-28").textContent.trim(),i=e.querySelector(".cases_video_wrapper");if(!i||i.classList.contains("w-condition-invisible"))return;const n=i.querySelector("video");if(!n)return;this.videosToLoadCount+=1;const s=n.readyState>=2&&n.videoWidth>0&&n.videoHeight>0;if(n._videoLoaderInstance){const o=n._videoLoaderInstance;if(s||o.isLoaded){const a=new at(n);this.videoTexetures.push({name:t,texture:a,width:o.width||n.videoWidth,height:o.height||n.videoHeight}),this.checkLoaded()}else o.startLoading&&o.startLoading(),o.once("loaded",()=>{const a=new at(n);this.videoTexetures.push({name:t,texture:a,width:o.width||n.videoWidth,height:o.height||n.videoHeight}),this.checkLoaded()}),setTimeout(()=>{if(!o.isLoaded&&n.readyState>=2&&n.videoWidth>0){const a=new at(n);this.videoTexetures.push({name:t,texture:a,width:n.videoWidth,height:n.videoHeight}),this.checkLoaded()}else o.isLoaded||(console.error(`[Cases World] Video "${t}" failed to load, counting anyway`),this.checkLoaded())},5e3)}else{const o=new Yt(n,{lazyLoad:!1});o.on("loaded",()=>{const a=new at(n);this.videoTexetures.push({name:t,texture:a,width:o.width,height:o.height}),this.checkLoaded()})}}),this.resources.on("ready",()=>this.checkLoaded())}checkLoaded(){this.count+=1,this.count>=this.videosToLoadCount+1&&this.init()}init(){this.gl.loaded=!0,this.items=new xM(this.app,this.gl,this.scene,this.main,this.resources.items,this.videoTexetures,this.itemElements),this.app.trigger("loadedWorld"),this.app.onceLoaded||(this.app.globalLoader.tl.play(),this.app.page.triggerLoad())}setScroll(e){var t;(t=this.items)==null||t.setPosition(e)}update(){var e;(e=this.items)==null||e.update()}createTexture(e){return this.renderer.setRenderTarget(e),this.renderer.render(this.scene,this.camera),this.renderer.setRenderTarget(null),e.texture}resize(){var e;(e=this.items)==null||e.resize()}onMouseMove(e,t){}destroy(){var e;(e=this.items)==null||e.destroy()}}},Symbol.toStringTag,{value:"Module"}));var bM=`uniform float uOffset;

varying vec2 vUv;
varying vec2 screenUv;

#define PI 3.14159265359

vec3 deformationCurve(vec3 position, vec2 uv, float offset)
{
    vec3 deformedPos = position;

    deformedPos.x += sin(uv.y * PI) * offset;

    return deformedPos;
}

void main()
{
    vUv = uv;

    
    vec4 modelPosition = modelMatrix * vec4(position, 1.0);
    vec4 viewPosition = viewMatrix * modelPosition;
    vec4 projectedPosition = projectionMatrix * viewPosition;

    
    vec2 largeUv = vec2(projectedPosition.xy / projectedPosition.w) * 0.5 + 0.5;

    
    vec3 deformedPosition = vec3(position.x, position.y, position.z);
    deformedPosition.x = deformationCurve(position, largeUv, uOffset).x;

    
    modelPosition = modelMatrix * vec4(deformedPosition, 1.0);
    gl_Position = projectionMatrix * viewMatrix * modelPosition;

    screenUv = vec2(gl_Position.xy / gl_Position.w) * 0.5 + 0.5;
}`,wM=`uniform sampler2D uTexture;
uniform sampler2D uFluid;
uniform vec3 uColor;
uniform vec2 uRes;
uniform vec2 uSize;
uniform vec2 uAspect;
uniform float uBorder;
uniform float uParallax;
uniform float uScroll;

varying vec2 vUv;
varying vec2 screenUv;

vec2 getCoverUv(vec2 uv, vec2 uTextureResolution, vec2 uItemSizes)
{
    vec2 tempUv = uv - vec2(0.5);

    float quadAspectRatio = uItemSizes.x / uItemSizes.y;
    float textureAspectRatio = uTextureResolution.x / uTextureResolution.y;

    if (quadAspectRatio < textureAspectRatio) {
        tempUv = tempUv * vec2(quadAspectRatio / textureAspectRatio, 1.0);
    } else {
        tempUv = tempUv * vec2(1.0, textureAspectRatio / quadAspectRatio);
    }

    return tempUv + vec2(0.5);
}
float getAlpha(vec2 uRes, float uBorder, vec2 uv)
{
    vec2 aspect = uRes / max(uRes.x, uRes.y);

    vec2 alphaUv = uv - 0.5;

    float borderRadius = min(uBorder, min(uRes.x, uRes.y) * 0.5);

    vec2 offset = vec2(borderRadius) / uRes;
    vec2 alphaXY = smoothstep(vec2(0.5 - offset), vec2(0.5 - offset - 0.001), abs(alphaUv));
    float alpha = min(1.0, alphaXY.x + alphaXY.y);

    vec2 aplhaUV2 = abs(uv - 0.5);
    float radius = borderRadius / max(uRes.x, uRes.y);
    aplhaUV2 = (aplhaUV2 - 0.5) * aspect + radius;
    float roundedAlpha = smoothstep(radius + 0.001, radius, length(aplhaUV2));

    return alpha = min(1.0, alpha + roundedAlpha);
}
vec4 applyBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float total = 0.0;
    for(int x = -2; x <= 2; x++) {
        for(int y = -2; y <= 2; y++) {
            vec2 offset = vec2(float(x), float(y)) * texelSize * blurAmount;
            color += texture2D(tex, uv + offset);
            total += 1.0;
        }
    }

    return color / total;
}

vec4 fastGaussianBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float weights[5] = float[](0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

    
    color += texture2D(tex, uv) * weights[0];
    for(int i = 1; i < 5; i++) {
        vec2 offset = vec2(float(i) * texelSize.x * blurAmount, 0.0);
        color += texture2D(tex, uv + offset) * weights[i];
        color += texture2D(tex, uv - offset) * weights[i];
    }

    return color;
}

vec4 fakeBlur(sampler2D tex, vec2 uv, float blurAmount) {
    
    vec2 noise = vec2(
        fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453),
        fract(sin(dot(uv, vec2(93.9898, 67.345))) * 43758.5453)
    ) - 0.5;

    vec2 offset = noise * blurAmount * 0.01;
    return texture2D(tex, uv + offset);
}
vec3 applyTint(vec3 originalColor, vec3 tintColor, float strength) {
    return mix(originalColor, originalColor * tintColor, strength);
}

vec3 applyOverlayTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 overlay = mix(originalColor, tintColor, 0.5);
    return mix(originalColor, overlay, strength);
}

vec3 applyMultiplyTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 multiplied = originalColor * tintColor;
    return mix(originalColor, multiplied, strength);
}

void main()
{
    vec2 uv = vUv;
    vec2 coverUv = getCoverUv(uv, uAspect, uSize);

    coverUv -= 0.5;
    coverUv *= 0.9 + (1. - uScroll) * 0.1;
    coverUv += 0.5;

    coverUv.y -= uScroll * 0.1;

    vec4 color = texture2D(uTexture, coverUv);
    float alpha = getAlpha(uSize, uBorder, uv);
    float cursor = texture2D(uFluid, screenUv).r;
    float oldCursor = cursor;
    cursor = smoothstep(0.2, 1.0, cursor);
    cursor = clamp(cursor, 0.0, 1.0);
    cursor = pow(cursor, 2.5); 

    color.a *= alpha;

    float tintAmount = smoothstep(0.0, 1.0, cursor) * 0.1;

    
    
    vec3 blurColor = fastGaussianBlur(uTexture, coverUv, oldCursor * 5.).rgb;
    blurColor = applyOverlayTint(blurColor, uColor, cursor);
    color.rgb = mix(color.rgb, blurColor, cursor * 2.0);

    float fadeArea = smoothstep(0.0, 0.5, uv.y);
    color.rgb = mix(color.rgb * 0.2, color.rgb, fadeArea);

    float alphaFade = step(uScroll, uv.y);
    color.a *= alphaFade;

    gl_FragColor = color;
}`;let SM=class{constructor(e,t,i,n,s){this.app=e,this.gl=t,this.scene=i,this.main=n,this.item=s,this.sizes=this.app.sizes,this.time=this.app.time,this.rect=this.item.getBoundingClientRect(),this.init()}init(){this.setMaterial(),this.setMesh()}setMaterial(){this.material=new _t({vertexShader:bM,fragmentShader:wM,transparent:!0,depthTest:!1,uniforms:{uTexture:new N(null),uRes:new N(new G(this.sizes.width,this.sizes.height)),uAspect:new N(new G(16,9)),uSize:new N(new G(0,0)),uBorder:new N(0),uReveal:new N(0),uRotate:new N(0),uRotateX:new N(0),uRotateY:new N(0),uRadius:new N(.02),uScroll:new N(0),uZoom:new N(.55),uTime:new N(0),uFluid:new N(null),uOffset:new N(null),uParallax:new N(0),uColor:new N(new le(255/255,118/255,162/255))}})}setMesh(){this.geometry=new pt(this.rect.width,this.rect.height,1,1),this.mesh=new rt(this.geometry,this.material),this.material.uniforms.uSize.value.set(this.rect.width,this.rect.height);const e=this.item.querySelector("video");e&&this.setupVideoTexture(e),this.scene.add(this.mesh),this.setPosition()}setupVideoTexture(e){if(e._videoLoaderInstance){const t=e._videoLoaderInstance;if(t.isLoaded){const i=new at(e);this.material.uniforms.uTexture.value=i,this.material.uniforms.uAspect.value.set(t.width||e.videoWidth,t.height||e.videoHeight)}else t.on("loaded",()=>{const i=new at(e);this.material.uniforms.uTexture.value=i,this.material.uniforms.uAspect.value.set(t.width,t.height)})}else{const t=new Yt(e,{lazyLoad:!1});t.on("loaded",()=>{const i=new at(e);this.material.uniforms.uTexture.value=i,this.material.uniforms.uAspect.value.set(t.width,t.height)})}}setPosition(e){this.rect=this.item.getBoundingClientRect(),this.mesh.position.x=this.rect.left+this.rect.width/2-this.sizes.width/2,this.mesh.position.y=-this.rect.top-this.rect.height/2+this.sizes.height/2}resize(){this.rect=this.item.getBoundingClientRect(),xi(this.mesh,new pt(this.rect.width,this.rect.height,1,1)),this.material.uniforms.uSize.value.set(this.rect.width,this.rect.height),this.material.uniforms.uRes.value.set(this.sizes.width,this.sizes.height)}update(){this.material.uniforms.uFluid.value=this.gl.fluidTexture}destroy(){this.material.dispose(),this.mesh.geometry.dispose(),this.scene.remove(this.mesh)}};const MM=Object.freeze(Object.defineProperty({__proto__:null,default:class{constructor(e,t,i,n){this.gl=e,this.app=t,this.scene=i,this.main=n,this.sizes=this.app.sizes,this.renderer=this.gl.renderer.instance,this.camera=this.gl.camera.instance,this.scene=i,this.load()}load(){this.hero=this.main.querySelector(".h-services"),this.item=this.hero.querySelector(".h-services_bg"),this.footerLogo=this.main.querySelector(".footer_logo"),this.sources=[],this.footerLogo&&(this.getTextureAttributes(this.footerLogo).forEach(({value:t},i)=>{this.sources.push({type:"textureLoader",url:t,name:`footer-${i}`})}),gsap.set(this.footerLogo,{opacity:0})),this.resources=new Wr(this.sources),this.resources.on("ready",()=>this.init())}init(){if(this.gl.loaded=!0,this.hero=new SM(this.app,this.gl,this.scene,this.main,this.item),this.footerLogo){this.footerMeshs=[];const e=this.getTextureAttributes(this.footerLogo);this.footerTextures=e.map((t,i)=>{const n=`footer-${i}`;return this.resources.items[n]}),this.footerTextures.forEach((t,i)=>{this.footerMeshs[i]=new Xr(this.app,this.gl,this.scene,this.footerLogo,t,i)})}this.app.trigger("loadedWorld"),this.app.onceLoaded||(this.app.globalLoader.tl.play(),this.app.page.triggerLoad())}setScroll(e){var t,i;(t=this.hero)==null||t.setPosition(e),(i=this.footerMeshs)==null||i.forEach(n=>n.setPosition())}update(){var e,t;(e=this.hero)==null||e.update(),(t=this.footerMeshs)==null||t.forEach(i=>i.update())}createTexture(e){return this.renderer.setRenderTarget(e),this.renderer.render(this.scene,this.camera),this.renderer.setRenderTarget(null),e.texture}resize(){var e,t;(e=this.hero)==null||e.resize(),(t=this.footerMeshs)==null||t.forEach(i=>i.resize())}onMouseMove(e,t){}destroy(){var e,t;(e=this.hero)==null||e.destroy(),(t=this.footerMeshs)==null||t.forEach(i=>i.destroy())}getTextureAttributes(e){return e.getAttributeNames().filter(t=>t.startsWith("data-texture-")).map(t=>({name:t,value:e.getAttribute(t),number:parseInt(t.split("-")[2])})).sort((t,i)=>t.number-i.number)}}},Symbol.toStringTag,{value:"Module"}));var TM=`uniform float uOffset;

varying vec2 vUv;
varying vec2 screenUv;

#define PI 3.14159265359

vec3 deformationCurve(vec3 position, vec2 uv, float offset)
{
    vec3 deformedPos = position;

    deformedPos.x += sin(uv.y * PI) * offset;

    return deformedPos;
}

void main()
{
    vUv = uv;

    
    vec4 modelPosition = modelMatrix * vec4(position, 1.0);
    vec4 viewPosition = viewMatrix * modelPosition;
    vec4 projectedPosition = projectionMatrix * viewPosition;

    
    vec2 largeUv = vec2(projectedPosition.xy / projectedPosition.w) * 0.5 + 0.5;

    
    vec3 deformedPosition = vec3(position.x, position.y, position.z);
    deformedPosition.x = deformationCurve(position, largeUv, uOffset).x;

    
    modelPosition = modelMatrix * vec4(deformedPosition, 1.0);
    gl_Position = projectionMatrix * viewMatrix * modelPosition;

    screenUv = vec2(gl_Position.xy / gl_Position.w) * 0.5 + 0.5;
}`,AM=`uniform sampler2D uTexture;
uniform sampler2D uFluid;
uniform vec3 uColor;
uniform vec2 uRes;
uniform vec2 uSize;
uniform vec2 uAspect;
uniform float uBorder;
uniform float uParallax;
uniform float uScroll;

varying vec2 vUv;
varying vec2 screenUv;

vec2 getCoverUv(vec2 uv, vec2 uTextureResolution, vec2 uItemSizes)
{
    vec2 tempUv = uv - vec2(0.5);

    float quadAspectRatio = uItemSizes.x / uItemSizes.y;
    float textureAspectRatio = uTextureResolution.x / uTextureResolution.y;

    if (quadAspectRatio < textureAspectRatio) {
        tempUv = tempUv * vec2(quadAspectRatio / textureAspectRatio, 1.0);
    } else {
        tempUv = tempUv * vec2(1.0, textureAspectRatio / quadAspectRatio);
    }

    return tempUv + vec2(0.5);
}
float getAlpha(vec2 uRes, float uBorder, vec2 uv)
{
    vec2 aspect = uRes / max(uRes.x, uRes.y);

    vec2 alphaUv = uv - 0.5;

    float borderRadius = min(uBorder, min(uRes.x, uRes.y) * 0.5);

    vec2 offset = vec2(borderRadius) / uRes;
    vec2 alphaXY = smoothstep(vec2(0.5 - offset), vec2(0.5 - offset - 0.001), abs(alphaUv));
    float alpha = min(1.0, alphaXY.x + alphaXY.y);

    vec2 aplhaUV2 = abs(uv - 0.5);
    float radius = borderRadius / max(uRes.x, uRes.y);
    aplhaUV2 = (aplhaUV2 - 0.5) * aspect + radius;
    float roundedAlpha = smoothstep(radius + 0.001, radius, length(aplhaUV2));

    return alpha = min(1.0, alpha + roundedAlpha);
}
vec4 applyBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float total = 0.0;
    for(int x = -2; x <= 2; x++) {
        for(int y = -2; y <= 2; y++) {
            vec2 offset = vec2(float(x), float(y)) * texelSize * blurAmount;
            color += texture2D(tex, uv + offset);
            total += 1.0;
        }
    }

    return color / total;
}

vec4 fastGaussianBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float weights[5] = float[](0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

    
    color += texture2D(tex, uv) * weights[0];
    for(int i = 1; i < 5; i++) {
        vec2 offset = vec2(float(i) * texelSize.x * blurAmount, 0.0);
        color += texture2D(tex, uv + offset) * weights[i];
        color += texture2D(tex, uv - offset) * weights[i];
    }

    return color;
}

vec4 fakeBlur(sampler2D tex, vec2 uv, float blurAmount) {
    
    vec2 noise = vec2(
        fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453),
        fract(sin(dot(uv, vec2(93.9898, 67.345))) * 43758.5453)
    ) - 0.5;

    vec2 offset = noise * blurAmount * 0.01;
    return texture2D(tex, uv + offset);
}
vec3 applyTint(vec3 originalColor, vec3 tintColor, float strength) {
    return mix(originalColor, originalColor * tintColor, strength);
}

vec3 applyOverlayTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 overlay = mix(originalColor, tintColor, 0.5);
    return mix(originalColor, overlay, strength);
}

vec3 applyMultiplyTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 multiplied = originalColor * tintColor;
    return mix(originalColor, multiplied, strength);
}

void main()
{
    vec2 uv = vUv;
    vec2 coverUv = getCoverUv(uv, uAspect, uSize);

    coverUv -= 0.5;
    coverUv *= 0.9 + (1. - uScroll) * 0.1;
    coverUv += 0.5;

    coverUv.y -= uScroll * 0.1;

    vec4 color = texture2D(uTexture, coverUv);
    float alpha = getAlpha(uSize, uBorder, uv);
    float cursor = texture2D(uFluid, screenUv).r;

    color.a *= alpha;

    float tintAmount = smoothstep(0.0, 1.0, cursor) * 0.1;

    color.rgb = applyOverlayTint(color.rgb, uColor, tintAmount);
    vec3 blurColor = fastGaussianBlur(uTexture, coverUv, cursor * 5.).rgb;
    color.rgb = mix(color.rgb, blurColor, cursor * 0.5);

    float fadeArea = smoothstep(0.0, 0.5, uv.y);
    color.rgb = mix(color.rgb * 0.2, color.rgb, fadeArea);

    float alphaFade = step(uScroll, uv.y);
    color.a *= alphaFade;

    gl_FragColor = color;
}`;let EM=class{constructor(e,t,i,n,s){this.app=e,this.gl=t,this.scene=i,this.main=n,this.item=s,this.sizes=this.app.sizes,this.time=this.app.time,this.rect=this.item.getBoundingClientRect(),this.init()}init(){this.setMaterial(),this.setMesh()}setMaterial(){this.material=new _t({vertexShader:TM,fragmentShader:AM,transparent:!0,depthTest:!1,uniforms:{uTexture:new N(null),uRes:new N(new G(this.sizes.width,this.sizes.height)),uAspect:new N(new G(16,9)),uSize:new N(new G(0,0)),uBorder:new N(0),uReveal:new N(0),uRotate:new N(0),uRotateX:new N(0),uRotateY:new N(0),uRadius:new N(.02),uScroll:new N(0),uZoom:new N(.55),uTime:new N(0),uFluid:new N(null),uOffset:new N(null),uParallax:new N(0),uColor:new N(new le(255/255,118/255,162/255))}})}setMesh(){this.geometry=new pt(this.rect.width,this.rect.height,1,1),this.mesh=new rt(this.geometry,this.material),this.material.uniforms.uSize.value.set(this.rect.width,this.rect.height);const e=this.item.querySelector("video");if(e)if(e.style.opacity=0,e._videoLoaderInstance){const t=e._videoLoaderInstance;if(t.isLoaded){const i=new at(e);this.material.uniforms.uTexture.value=i,this.material.uniforms.uAspect.value.set(t.width||e.videoWidth,t.height||e.videoHeight)}else t.on("loaded",()=>{const i=new at(e);this.material.uniforms.uTexture.value=i,this.material.uniforms.uAspect.value.set(t.width,t.height)})}else{const t=new Yt(e,{lazyLoad:!1});t.on("loaded",()=>{const i=new at(e);this.material.uniforms.uTexture.value=i,this.material.uniforms.uAspect.value.set(t.width,t.height)})}this.scene.add(this.mesh),this.setPosition()}setPosition(e){this.rect=this.item.getBoundingClientRect(),this.mesh.position.x=this.rect.left+this.rect.width/2-this.sizes.width/2,this.mesh.position.y=-this.rect.top-this.rect.height/2+this.sizes.height/2}resize(){this.rect=this.item.getBoundingClientRect(),xi(this.mesh,new pt(this.rect.width,this.rect.height,1,1)),this.material.uniforms.uSize.value.set(this.rect.width,this.rect.height),this.material.uniforms.uRes.value.set(this.sizes.width,this.sizes.height)}update(){this.material.uniforms.uFluid.value=this.gl.fluidTexture}destroy(){this.material.dispose(),this.mesh.geometry.dispose(),this.scene.remove(this.mesh)}};var CM=`varying vec2 vUv;
varying vec2 screenUv;

void main()
{
    vUv = uv;
    vec4 modelPoisition = modelMatrix * vec4(position, 1.0);

    
    gl_Position = projectionMatrix * viewMatrix * modelPoisition;

    screenUv = vec2(gl_Position.xy / gl_Position.w) * 0.5 + 0.5;
}`,RM=`uniform sampler2D uTexture;
uniform sampler2D uFluid;
uniform vec3 uColor;
uniform vec2 uRes;
uniform vec2 uSize;
uniform vec2 uAspect;
uniform float uBorder;
uniform float uReveal;
uniform float uRotate;
uniform float uRotateX;
uniform float uRotateY;
uniform float uRadius; 
uniform float uZoom;
uniform float uParallax;

varying vec2 vUv;
varying vec2 screenUv;

vec2 getCoverUv(vec2 uv, vec2 uTextureResolution, vec2 uItemSizes)
{
    vec2 tempUv = uv - vec2(0.5);

    float quadAspectRatio = uItemSizes.x / uItemSizes.y;
    float textureAspectRatio = uTextureResolution.x / uTextureResolution.y;

    if (quadAspectRatio < textureAspectRatio) {
        tempUv = tempUv * vec2(quadAspectRatio / textureAspectRatio, 1.0);
    } else {
        tempUv = tempUv * vec2(1.0, textureAspectRatio / quadAspectRatio);
    }

    return tempUv + vec2(0.5);
}
float getAlpha(vec2 uRes, float uBorder, vec2 uv)
{
    vec2 aspect = uRes / max(uRes.x, uRes.y);

    vec2 alphaUv = uv - 0.5;

    float borderRadius = min(uBorder, min(uRes.x, uRes.y) * 0.5);

    vec2 offset = vec2(borderRadius) / uRes;
    vec2 alphaXY = smoothstep(vec2(0.5 - offset), vec2(0.5 - offset - 0.001), abs(alphaUv));
    float alpha = min(1.0, alphaXY.x + alphaXY.y);

    vec2 aplhaUV2 = abs(uv - 0.5);
    float radius = borderRadius / max(uRes.x, uRes.y);
    aplhaUV2 = (aplhaUV2 - 0.5) * aspect + radius;
    float roundedAlpha = smoothstep(radius + 0.001, radius, length(aplhaUV2));

    return alpha = min(1.0, alpha + roundedAlpha);
}
vec2 rotateUV(vec2 uv, float angle) {
    vec2 center = vec2(0.5);
    uv -= center;

    float cosAngle = cos(angle);
    float sinAngle = sin(angle);

    vec2 rotated;
    rotated.x = uv.x * cosAngle - uv.y * sinAngle;
    rotated.y = uv.x * sinAngle + uv.y * cosAngle;

    return rotated + center;
}

vec2 rotateUVX(vec2 uv, float angleX) {
    vec2 center = vec2(0.5);
    uv -= center;

    
    vec3 pos = vec3(uv.x, uv.y, 0.0);

    
    float cosX = cos(angleX);
    float sinX = sin(angleX);

    vec3 rotated;
    rotated.x = pos.x;
    rotated.y = pos.y * cosX - pos.z * sinX;
    rotated.z = pos.y * sinX + pos.z * cosX;

    
    float perspective = 1.0 / (1.0 - rotated.z * 0.5);
    vec2 result = vec2(rotated.x, rotated.y) * perspective;

    return result + center;
}

vec2 rotateUVY(vec2 uv, float angleY) {
    vec2 center = vec2(0.5);
    uv -= center;

    
    vec3 pos = vec3(uv.x, uv.y, 0.0);

    
    float cosY = cos(angleY);
    float sinY = sin(angleY);

    vec3 rotated;
    rotated.x = pos.x * cosY + pos.z * sinY;
    rotated.y = pos.y;
    rotated.z = -pos.x * sinY + pos.z * cosY;

    
    float perspective = 1.0 / (1.0 - rotated.z * 0.5);
    vec2 result = vec2(rotated.x, rotated.y) * perspective;

    return result + center;
}
vec4 applyBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float total = 0.0;
    for(int x = -2; x <= 2; x++) {
        for(int y = -2; y <= 2; y++) {
            vec2 offset = vec2(float(x), float(y)) * texelSize * blurAmount;
            color += texture2D(tex, uv + offset);
            total += 1.0;
        }
    }

    return color / total;
}

vec4 fastGaussianBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float weights[5] = float[](0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

    
    color += texture2D(tex, uv) * weights[0];
    for(int i = 1; i < 5; i++) {
        vec2 offset = vec2(float(i) * texelSize.x * blurAmount, 0.0);
        color += texture2D(tex, uv + offset) * weights[i];
        color += texture2D(tex, uv - offset) * weights[i];
    }

    return color;
}

vec4 fakeBlur(sampler2D tex, vec2 uv, float blurAmount) {
    
    vec2 noise = vec2(
        fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453),
        fract(sin(dot(uv, vec2(93.9898, 67.345))) * 43758.5453)
    ) - 0.5;

    vec2 offset = noise * blurAmount * 0.01;
    return texture2D(tex, uv + offset);
}
vec3 applyTint(vec3 originalColor, vec3 tintColor, float strength) {
    return mix(originalColor, originalColor * tintColor, strength);
}

vec3 applyOverlayTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 overlay = mix(originalColor, tintColor, 0.5);
    return mix(originalColor, overlay, strength);
}

vec3 applyMultiplyTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 multiplied = originalColor * tintColor;
    return mix(originalColor, multiplied, strength);
}

float roundedRect(vec2 uv, vec2 size, float radius) {
    vec2 center = vec2(0.5);
    vec2 pos = abs(uv - center) - (size * 0.5 - radius);
    return length(max(pos, 0.0)) + min(max(pos.x, pos.y), 0.0) - radius;
}

void main()
{
    vec2 uv = vUv;
    vec2 coverUv = getCoverUv(uv, uAspect, uSize);

    coverUv -= 0.5;
    coverUv *= uZoom;
    coverUv += 0.5;

    
    coverUv.y -= uParallax * - 1.0;

    vec2 rotatedUv = rotateUV(uv, uRotate);
    rotatedUv = rotateUVX(rotatedUv, uRotateX);
    rotatedUv = rotateUVY(rotatedUv, uRotateY);

    vec4 color = texture2D(uTexture, coverUv);
    float alpha = getAlpha(uSize, uBorder, uv);
    float cursor = texture2D(uFluid, screenUv).r;

    float maxDistance = 0.5;
    float reveal = maxDistance * uReveal;
    vec2 areaSize = vec2(reveal * 2.0);

    
    float sdf = roundedRect(rotatedUv, areaSize, uRadius);
    float area = 1.0 - smoothstep(-0.001, 0.001, sdf);

    color.a *= alpha * area;

    float tintAmount = smoothstep(0.0, 1.0, cursor) * 0.1;

    color.rgb = applyOverlayTint(color.rgb, uColor, tintAmount);
    vec3 blurColor = fastGaussianBlur(uTexture, coverUv, cursor * 5.).rgb;
    color.rgb = mix(color.rgb, blurColor, cursor * 0.5);

    gl_FragColor = color;
}`;let PM=class{constructor(e,t,i,n){this.app=e,this.gl=t,this.scene=i,this.main=n,this.sizes=this.app.sizes,this.time=this.app.time,this.items=this.main.querySelectorAll(".cases_video, .double-video"),this.init()}init(){this.setMaterial(),this.setMesh(),this.debug()}debug(){if(!this.app.debug.active)return;const e=this.app.debug.gui;this.folder=e.addFolder("Fintech/Video"),this.folder.add(this.material.uniforms.uReveal,"value",0,1,.01).name("uReveal").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uReveal.value=t)}),this.folder.add(this.material.uniforms.uRotate,"value",0,2,.01).name("uRotate").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uRotate.value=t)}),this.folder.add(this.material.uniforms.uRadius,"value",0,1,.01).name("uRadius").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uRadius.value=t)}),this.folder.add(this.material.uniforms.uRotateX,"value",-1,1,.01).name("uRotateX").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uRotateX.value=t)}),this.folder.add(this.material.uniforms.uRotateY,"value",-1,1,.01).name("uRotateY").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uRotateY.value=t)}),this.folder.add(this.material.uniforms.uZoom,"value",-1,1,.01).name("uZoom").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uZoom.value=t)})}setMaterial(){this.material=new _t({vertexShader:CM,fragmentShader:RM,transparent:!0,depthTest:!1,uniforms:{uTexture:new N(null),uRes:new N(new G(this.sizes.width,this.sizes.height)),uAspect:new N(new G(16,9)),uSize:new N(new G(0,0)),uBorder:new N(0),uReveal:new N(0),uRotate:new N(0),uRotateX:new N(0),uRotateY:new N(0),uRadius:new N(.02),uZoom:new N(.55),uTime:new N(0),uFluid:new N(null),uParallax:new N(0),uColor:new N(new le(255/255,118/255,162/255))}})}setMesh(){this.meshs=[...this.items].map((e,t)=>{const i=window.getComputedStyle(e).getPropertyValue("border-radius").split("px"),n=e.getBoundingClientRect(),s=new pt(n.width,n.height,1,1),o=this.material.clone();o.uniforms.uSize.value.set(n.width,n.height),o.uniforms.uBorder.value=parseFloat(i[0]);const a=e.classList.contains("double-video");o.uniforms.uZoom.value=a?1:.9;const l=new rt(s,o);e.classList.contains("cases_video")&&(l.visible=!1);const c=e.querySelector("video");if(c)if(c._videoLoaderInstance){const d=c._videoLoaderInstance;if(d.isLoaded){const u=new at(c);o.uniforms.uTexture.value=u,o.uniforms.uAspect.value.set(d.width||c.videoWidth,d.height||c.videoHeight)}else d.on("loaded",()=>{const u=new at(c);o.uniforms.uTexture.value=u,o.uniforms.uAspect.value.set(d.width,d.height)})}else{const d=new Yt(c,{lazyLoad:!1});d.on("loaded",()=>{const u=new at(c);o.uniforms.uTexture.value=u,o.uniforms.uAspect.value.set(d.width,d.height)})}this.scene.add(l),this.app.observer.instance.observe(e);const h=gsap.timeline({paused:!0,defaults:{duration:1,ease:"power3.out"}});return h.to(o.uniforms.uReveal,{value:1}).fromTo(o.uniforms.uRotate,{value:-.3},{value:0},"<").fromTo(o.uniforms.uRotateY,{value:.8},{value:0},"<").fromTo(o.uniforms.uRotateX,{value:-.8},{value:0},"<").fromTo(o.uniforms.uRadius,{value:0},{value:.02,duration:.2},"<"),ScrollTrigger.create({trigger:e,start:"top 90%",onEnter:()=>h.play()}),ScrollTrigger.create({trigger:e,start:"top bottom",onLeaveBack:()=>h.pause(0)}),{mesh:l,item:e,material:o}}),this.setPosition()}setPosition(){this.meshs.forEach(({mesh:e,item:t})=>{if(t.dataset.visible=="false"||t.classList.contains("cases_video")){e.visible=!1;return}e.visible=!0;const i=t.getBoundingClientRect();e.position.x=i.left+i.width/2-this.sizes.width/2,e.position.y=-i.top-i.height/2+this.sizes.height/2})}resize(){this.meshs.forEach(({mesh:e,item:t})=>{const i=t.getBoundingClientRect();xi(e,new pt(i.width,i.height,1,1)),e.material.uniforms.uSize.value.set(i.width,i.height);const n=window.getComputedStyle(t).getPropertyValue("border-radius").split("px");e.material.uniforms.uBorder.value=parseFloat(n[0])})}update(){this.meshs.forEach(({mesh:e,material:t})=>{t.uniforms.uFluid.value=this.gl.fluidTexture})}destroy(){this.meshs.forEach(({mesh:e,material:t})=>{t.dispose(),e.geometry.dispose(),this.scene.remove(e)})}};const IM=Object.freeze(Object.defineProperty({__proto__:null,default:class{constructor(e,t,i,n){this.gl=e,this.app=t,this.scene=i,this.main=n,this.sizes=this.app.sizes,this.renderer=this.gl.renderer.instance,this.camera=this.gl.camera.instance,this.scene=i,this.load()}load(){this.heroInner=this.main.querySelector(".inner-hero"),this.heroItem=this.heroInner.querySelector(".inner-hero_bg"),this.footerLogo=this.main.querySelector(".footer_logo"),this.sources=[],this.footerLogo&&(this.getTextureAttributes(this.footerLogo).forEach(({value:t},i)=>{this.sources.push({type:"textureLoader",url:t,name:`footer-${i}`})}),gsap.set(this.footerLogo,{opacity:0})),this.resources=new Wr(this.sources),this.resources.on("ready",()=>this.init())}init(){this.gl.loaded=!0,this.hero=new EM(this.app,this.gl,this.scene,this.main,this.heroItem),this.items=new PM(this.app,this.gl,this.scene,this.main),this.footerMeshs=[];const e=this.getTextureAttributes(this.footerLogo);this.footerTextures=e.map((t,i)=>{const n=`footer-${i}`;return this.resources.items[n]}),this.footerTextures.forEach((t,i)=>{this.footerMeshs[i]=new Xr(this.app,this.gl,this.scene,this.footerLogo,t,i)}),this.app.trigger("loadedWorld"),this.app.onceLoaded||(this.app.globalLoader.tl.play(),this.app.page.triggerLoad())}setScroll(e){var t,i,n;(t=this.items)==null||t.setPosition(e),(i=this.hero)==null||i.setPosition(e),(n=this.footerMeshs)==null||n.forEach(s=>s.setPosition())}update(){var e,t,i;(e=this.items)==null||e.update(),(t=this.hero)==null||t.update(),(i=this.footerMeshs)==null||i.forEach(n=>n.update())}createTexture(e){return this.renderer.setRenderTarget(e),this.renderer.render(this.scene,this.camera),this.renderer.setRenderTarget(null),e.texture}resize(){var e,t,i;(e=this.items)==null||e.resize(),(t=this.hero)==null||t.resize(),(i=this.footerMeshs)==null||i.forEach(n=>n.resize())}onMouseMove(e,t){}destroy(){var e,t,i;(e=this.items)==null||e.destroy(),(t=this.hero)==null||t.destroy(),(i=this.footerMeshs)==null||i.forEach(n=>n.destroy())}getTextureAttributes(e){return e.getAttributeNames().filter(t=>t.startsWith("data-texture-")).map(t=>({name:t,value:e.getAttribute(t),number:parseInt(t.split("-")[2])})).sort((t,i)=>t.number-i.number)}}},Symbol.toStringTag,{value:"Module"}));var LM=`uniform float uOffset;

varying vec2 vUv;
varying vec2 screenUv;

#define PI 3.14159265359

vec3 deformationCurve(vec3 position, vec2 uv, float offset)
{
    vec3 deformedPos = position;

    deformedPos.x += sin(uv.y * PI) * offset;

    return deformedPos;
}

void main()
{
    vUv = uv;

    
    vec4 modelPosition = modelMatrix * vec4(position, 1.0);
    vec4 viewPosition = viewMatrix * modelPosition;
    vec4 projectedPosition = projectionMatrix * viewPosition;

    
    vec2 largeUv = vec2(projectedPosition.xy / projectedPosition.w) * 0.5 + 0.5;

    
    vec3 deformedPosition = vec3(position.x, position.y, position.z);
    deformedPosition.x = deformationCurve(position, largeUv, uOffset).x;

    
    modelPosition = modelMatrix * vec4(deformedPosition, 1.0);
    gl_Position = projectionMatrix * viewMatrix * modelPosition;

    screenUv = vec2(gl_Position.xy / gl_Position.w) * 0.5 + 0.5;
}`,UM=`uniform sampler2D uTexture;
uniform sampler2D uFluid;
uniform vec3 uColor;
uniform vec2 uRes;
uniform vec2 uSize;
uniform vec2 uAspect;
uniform float uBorder;
uniform float uParallax;
uniform float uScroll;

varying vec2 vUv;
varying vec2 screenUv;

vec2 getCoverUv(vec2 uv, vec2 uTextureResolution, vec2 uItemSizes)
{
    vec2 tempUv = uv - vec2(0.5);

    float quadAspectRatio = uItemSizes.x / uItemSizes.y;
    float textureAspectRatio = uTextureResolution.x / uTextureResolution.y;

    if (quadAspectRatio < textureAspectRatio) {
        tempUv = tempUv * vec2(quadAspectRatio / textureAspectRatio, 1.0);
    } else {
        tempUv = tempUv * vec2(1.0, textureAspectRatio / quadAspectRatio);
    }

    return tempUv + vec2(0.5);
}
float getAlpha(vec2 uRes, float uBorder, vec2 uv)
{
    vec2 aspect = uRes / max(uRes.x, uRes.y);

    vec2 alphaUv = uv - 0.5;

    float borderRadius = min(uBorder, min(uRes.x, uRes.y) * 0.5);

    vec2 offset = vec2(borderRadius) / uRes;
    vec2 alphaXY = smoothstep(vec2(0.5 - offset), vec2(0.5 - offset - 0.001), abs(alphaUv));
    float alpha = min(1.0, alphaXY.x + alphaXY.y);

    vec2 aplhaUV2 = abs(uv - 0.5);
    float radius = borderRadius / max(uRes.x, uRes.y);
    aplhaUV2 = (aplhaUV2 - 0.5) * aspect + radius;
    float roundedAlpha = smoothstep(radius + 0.001, radius, length(aplhaUV2));

    return alpha = min(1.0, alpha + roundedAlpha);
}
vec4 applyBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float total = 0.0;
    for(int x = -2; x <= 2; x++) {
        for(int y = -2; y <= 2; y++) {
            vec2 offset = vec2(float(x), float(y)) * texelSize * blurAmount;
            color += texture2D(tex, uv + offset);
            total += 1.0;
        }
    }

    return color / total;
}

vec4 fastGaussianBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float weights[5] = float[](0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

    
    color += texture2D(tex, uv) * weights[0];
    for(int i = 1; i < 5; i++) {
        vec2 offset = vec2(float(i) * texelSize.x * blurAmount, 0.0);
        color += texture2D(tex, uv + offset) * weights[i];
        color += texture2D(tex, uv - offset) * weights[i];
    }

    return color;
}

vec4 fakeBlur(sampler2D tex, vec2 uv, float blurAmount) {
    
    vec2 noise = vec2(
        fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453),
        fract(sin(dot(uv, vec2(93.9898, 67.345))) * 43758.5453)
    ) - 0.5;

    vec2 offset = noise * blurAmount * 0.01;
    return texture2D(tex, uv + offset);
}
vec3 applyTint(vec3 originalColor, vec3 tintColor, float strength) {
    return mix(originalColor, originalColor * tintColor, strength);
}

vec3 applyOverlayTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 overlay = mix(originalColor, tintColor, 0.5);
    return mix(originalColor, overlay, strength);
}

vec3 applyMultiplyTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 multiplied = originalColor * tintColor;
    return mix(originalColor, multiplied, strength);
}

void main()
{
    vec2 uv = vUv;
    vec2 coverUv = getCoverUv(uv, uAspect, uSize);

    coverUv -= 0.5;
    coverUv *= 0.9 + (1. - uScroll) * 0.1;
    coverUv += 0.5;

    coverUv.y -= uScroll * 0.1;

    vec4 color = texture2D(uTexture, coverUv);
    float alpha = getAlpha(uSize, uBorder, uv);
    float cursor = texture2D(uFluid, screenUv).r;

    
    
    
    

    color.a *= alpha;

    float tintAmount = smoothstep(0.0, 1.0, cursor) * 0.1;

    color.rgb = applyOverlayTint(color.rgb, uColor, tintAmount);
    vec3 blurColor = fastGaussianBlur(uTexture, coverUv, cursor * 5.).rgb;
    color.rgb = mix(color.rgb, blurColor, cursor * 0.5);

    
    

    float alphaFade = step(uScroll, uv.y);
    color.a *= alphaFade;

    gl_FragColor = color;
}`;let DM=class{constructor(e,t,i,n,s,o){this.app=e,this.gl=t,this.scene=i,this.main=n,this.item=s,this.resources=(o==null?void 0:o.items)||null,this.sizes=this.app.sizes,this.time=this.app.time,this.rect=this.item.getBoundingClientRect(),this.init()}init(){this.setMaterial(),this.setMesh()}setMaterial(){this.material=new _t({vertexShader:LM,fragmentShader:UM,transparent:!0,depthTest:!1,uniforms:{uTexture:new N(null),uRes:new N(new G(this.sizes.width,this.sizes.height)),uAspect:new N(new G(16,9)),uSize:new N(new G(0,0)),uBorder:new N(0),uReveal:new N(0),uRotate:new N(0),uRotateX:new N(0),uRotateY:new N(0),uRadius:new N(.02),uScroll:new N(0),uZoom:new N(.55),uTime:new N(0),uFluid:new N(null),uOffset:new N(null),uParallax:new N(0),uColor:new N(new le(255/255,118/255,162/255))}})}setMesh(){this.geometry=new pt(this.rect.width,this.rect.height,1,1),this.mesh=new rt(this.geometry,this.material),this.material.uniforms.uSize.value.set(this.rect.width,this.rect.height);const e=this.item.querySelector("video");if(e&&!e.parentElement.classList.contains("w-condition-invisible"))if(e.style.opacity=0,e._videoLoaderInstance){const t=e._videoLoaderInstance;if(t.isLoaded){const i=new at(e);this.material.uniforms.uTexture.value=i,this.material.uniforms.uAspect.value.set(t.width||e.videoWidth,t.height||e.videoHeight)}else t.on("loaded",()=>{const i=new at(e);this.material.uniforms.uTexture.value=i,this.material.uniforms.uAspect.value.set(t.width,t.height)})}else{const t=new Yt(e,{lazyLoad:!1});t.on("loaded",()=>{const i=new at(e);this.material.uniforms.uTexture.value=i,this.material.uniforms.uAspect.value.set(t.width,t.height)})}this.scene.add(this.mesh),this.setPosition()}setPosition(){this.rect=this.item.getBoundingClientRect(),this.mesh.position.x=this.rect.left+this.rect.width/2-this.sizes.width/2,this.mesh.position.y=-this.rect.top-this.rect.height/2+this.sizes.height/2}resize(){this.rect=this.item.getBoundingClientRect(),xi(this.mesh,new pt(this.rect.width,this.rect.height,1,1)),this.material.uniforms.uSize.value.set(this.rect.width,this.rect.height),this.material.uniforms.uRes.value.set(this.sizes.width,this.sizes.height)}update(){this.material.uniforms.uFluid.value=this.gl.fluidTexture}destroy(){this.material.dispose(),this.mesh.geometry.dispose(),this.scene.remove(this.mesh)}};var NM=`varying vec2 vUv;
varying vec2 screenUv;

void main()
{
    vUv = uv;
    vec4 modelPoisition = modelMatrix * vec4(position, 1.0);

    
    gl_Position = projectionMatrix * viewMatrix * modelPoisition;

    screenUv = vec2(gl_Position.xy / gl_Position.w) * 0.5 + 0.5;
}`,OM=`uniform sampler2D uTexture;
uniform sampler2D uFluid;
uniform vec3 uColor;
uniform vec2 uRes;
uniform vec2 uSize;
uniform vec2 uAspect;
uniform float uBorder;
uniform float uReveal;
uniform float uRotate;
uniform float uRotateX;
uniform float uRotateY;
uniform float uRadius; 
uniform float uZoom;
uniform float uParallax;

varying vec2 vUv;
varying vec2 screenUv;

vec2 getCoverUv(vec2 uv, vec2 uTextureResolution, vec2 uItemSizes)
{
    vec2 tempUv = uv - vec2(0.5);

    float quadAspectRatio = uItemSizes.x / uItemSizes.y;
    float textureAspectRatio = uTextureResolution.x / uTextureResolution.y;

    if (quadAspectRatio < textureAspectRatio) {
        tempUv = tempUv * vec2(quadAspectRatio / textureAspectRatio, 1.0);
    } else {
        tempUv = tempUv * vec2(1.0, textureAspectRatio / quadAspectRatio);
    }

    return tempUv + vec2(0.5);
}
float getAlpha(vec2 uRes, float uBorder, vec2 uv)
{
    vec2 aspect = uRes / max(uRes.x, uRes.y);

    vec2 alphaUv = uv - 0.5;

    float borderRadius = min(uBorder, min(uRes.x, uRes.y) * 0.5);

    vec2 offset = vec2(borderRadius) / uRes;
    vec2 alphaXY = smoothstep(vec2(0.5 - offset), vec2(0.5 - offset - 0.001), abs(alphaUv));
    float alpha = min(1.0, alphaXY.x + alphaXY.y);

    vec2 aplhaUV2 = abs(uv - 0.5);
    float radius = borderRadius / max(uRes.x, uRes.y);
    aplhaUV2 = (aplhaUV2 - 0.5) * aspect + radius;
    float roundedAlpha = smoothstep(radius + 0.001, radius, length(aplhaUV2));

    return alpha = min(1.0, alpha + roundedAlpha);
}
vec2 rotateUV(vec2 uv, float angle) {
    vec2 center = vec2(0.5);
    uv -= center;

    float cosAngle = cos(angle);
    float sinAngle = sin(angle);

    vec2 rotated;
    rotated.x = uv.x * cosAngle - uv.y * sinAngle;
    rotated.y = uv.x * sinAngle + uv.y * cosAngle;

    return rotated + center;
}

vec2 rotateUVX(vec2 uv, float angleX) {
    vec2 center = vec2(0.5);
    uv -= center;

    
    vec3 pos = vec3(uv.x, uv.y, 0.0);

    
    float cosX = cos(angleX);
    float sinX = sin(angleX);

    vec3 rotated;
    rotated.x = pos.x;
    rotated.y = pos.y * cosX - pos.z * sinX;
    rotated.z = pos.y * sinX + pos.z * cosX;

    
    float perspective = 1.0 / (1.0 - rotated.z * 0.5);
    vec2 result = vec2(rotated.x, rotated.y) * perspective;

    return result + center;
}

vec2 rotateUVY(vec2 uv, float angleY) {
    vec2 center = vec2(0.5);
    uv -= center;

    
    vec3 pos = vec3(uv.x, uv.y, 0.0);

    
    float cosY = cos(angleY);
    float sinY = sin(angleY);

    vec3 rotated;
    rotated.x = pos.x * cosY + pos.z * sinY;
    rotated.y = pos.y;
    rotated.z = -pos.x * sinY + pos.z * cosY;

    
    float perspective = 1.0 / (1.0 - rotated.z * 0.5);
    vec2 result = vec2(rotated.x, rotated.y) * perspective;

    return result + center;
}
vec4 applyBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float total = 0.0;
    for(int x = -2; x <= 2; x++) {
        for(int y = -2; y <= 2; y++) {
            vec2 offset = vec2(float(x), float(y)) * texelSize * blurAmount;
            color += texture2D(tex, uv + offset);
            total += 1.0;
        }
    }

    return color / total;
}

vec4 fastGaussianBlur(sampler2D tex, vec2 uv, float blurAmount) {
    vec2 texelSize = 1.0 / uRes;
    vec4 color = vec4(0.0);

    
    float weights[5] = float[](0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

    
    color += texture2D(tex, uv) * weights[0];
    for(int i = 1; i < 5; i++) {
        vec2 offset = vec2(float(i) * texelSize.x * blurAmount, 0.0);
        color += texture2D(tex, uv + offset) * weights[i];
        color += texture2D(tex, uv - offset) * weights[i];
    }

    return color;
}

vec4 fakeBlur(sampler2D tex, vec2 uv, float blurAmount) {
    
    vec2 noise = vec2(
        fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453),
        fract(sin(dot(uv, vec2(93.9898, 67.345))) * 43758.5453)
    ) - 0.5;

    vec2 offset = noise * blurAmount * 0.01;
    return texture2D(tex, uv + offset);
}
vec3 applyTint(vec3 originalColor, vec3 tintColor, float strength) {
    return mix(originalColor, originalColor * tintColor, strength);
}

vec3 applyOverlayTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 overlay = mix(originalColor, tintColor, 0.5);
    return mix(originalColor, overlay, strength);
}

vec3 applyMultiplyTint(vec3 originalColor, vec3 tintColor, float strength) {
    vec3 multiplied = originalColor * tintColor;
    return mix(originalColor, multiplied, strength);
}

float roundedRect(vec2 uv, vec2 size, float radius) {
    vec2 center = vec2(0.5);
    vec2 pos = abs(uv - center) - (size * 0.5 - radius);
    return length(max(pos, 0.0)) + min(max(pos.x, pos.y), 0.0) - radius;
}

void main()
{
    vec2 uv = vUv;
    vec2 coverUv = getCoverUv(uv, uAspect, uSize);

    coverUv -= 0.5;
    coverUv *= uZoom;
    coverUv += 0.5;

    
    coverUv.y -= uParallax * - 1.0;

    vec2 rotatedUv = rotateUV(uv, uRotate);
    rotatedUv = rotateUVX(rotatedUv, uRotateX);
    rotatedUv = rotateUVY(rotatedUv, uRotateY);

    vec4 color = texture2D(uTexture, coverUv);
    float alpha = getAlpha(uSize, uBorder, uv);
    float cursor = texture2D(uFluid, screenUv).r;

    float maxDistance = 0.5;
    float reveal = maxDistance * uReveal;
    vec2 areaSize = vec2(reveal * 2.0);

    
    float sdf = roundedRect(rotatedUv, areaSize, uRadius);
    float area = 1.0 - smoothstep(-0.001, 0.001, sdf);

    color.a *= alpha * area;

    float tintAmount = smoothstep(0.0, 1.0, cursor) * 0.1;

    color.rgb = applyOverlayTint(color.rgb, uColor, tintAmount);
    vec3 blurColor = fastGaussianBlur(uTexture, coverUv, cursor * 5.).rgb;
    color.rgb = mix(color.rgb, blurColor, cursor * 0.5);

    gl_FragColor = color;
}`;class FM{constructor(e,t,i,n){this.app=e,this.gl=t,this.scene=i,this.main=n,this.sizes=this.app.sizes,this.time=this.app.time,this.items=this.main.querySelectorAll(".double-video, .cases_video"),this.init()}init(){this.setMaterial(),this.setMesh()}debug(){if(!this.app.debug.active)return;const e=this.app.debug.gui;this.folder=e.addFolder("Home/Video"),this.folder.add(this.material.uniforms.uReveal,"value",0,1,.01).name("uReveal").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uReveal.value=t)}),this.folder.add(this.material.uniforms.uRotate,"value",0,2,.01).name("uRotate").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uRotate.value=t)}),this.folder.add(this.material.uniforms.uRadius,"value",0,1,.01).name("uRadius").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uRadius.value=t)}),this.folder.add(this.material.uniforms.uRotateX,"value",-1,1,.01).name("uRotateX").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uRotateX.value=t)}),this.folder.add(this.material.uniforms.uRotateY,"value",-1,1,.01).name("uRotateY").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uRotateY.value=t)}),this.folder.add(this.material.uniforms.uZoom,"value",-1,1,.01).name("uZoom").onChange(t=>{this.meshs.forEach(({material:i})=>i.uniforms.uZoom.value=t)})}setMaterial(){this.material=new _t({vertexShader:NM,fragmentShader:OM,transparent:!0,depthTest:!1,uniforms:{uTexture:new N(null),uRes:new N(new G(this.sizes.width,this.sizes.height)),uAspect:new N(new G(16,9)),uSize:new N(new G(0,0)),uBorder:new N(0),uReveal:new N(0),uRotate:new N(0),uRotateX:new N(0),uRotateY:new N(0),uRadius:new N(.02),uZoom:new N(.55),uTime:new N(0),uFluid:new N(null),uParallax:new N(0),uColor:new N(new le(255/255,118/255,162/255))}})}setMesh(){this.meshs=[...this.items].map((e,t)=>{const i=window.getComputedStyle(e).getPropertyValue("border-radius").split("px"),n=e.getBoundingClientRect(),s=new pt(n.width,n.height,1,1),o=this.material.clone();o.uniforms.uSize.value.set(n.width,n.height),o.uniforms.uBorder.value=parseFloat(i[0]);const a=e.classList.contains("cases_video"),l=e.classList.contains("double-video");a?o.uniforms.uZoom.value=.55:l?o.uniforms.uZoom.value=1:o.uniforms.uZoom.value=.9;const c=new rt(s,o);e.classList.contains("cases_video")&&(c.visible=!1);const h=e.querySelector("video");if(h)if(h._videoLoaderInstance){const u=h._videoLoaderInstance;if(u.isLoaded){const f=new at(h);o.uniforms.uTexture.value=f,o.uniforms.uAspect.value.set(u.width||h.videoWidth,u.height||h.videoHeight)}else u.on("loaded",()=>{const f=new at(h);o.uniforms.uTexture.value=f,o.uniforms.uAspect.value.set(u.width,u.height)})}else{const u=new Yt(h,{lazyLoad:!1});u.on("loaded",()=>{const f=new at(h);o.uniforms.uTexture.value=f,o.uniforms.uAspect.value.set(u.width,u.height)})}this.scene.add(c),this.app.observer.instance.observe(e);const d=gsap.timeline({paused:!0,defaults:{duration:1,ease:"power3.out"}});return e.classList.contains("talk_full")?(c.scale.set(.3,.3,.3),d.to(o.uniforms.uReveal,{value:1,duration:.1}).to(c.scale,{x:1,y:1,z:1,duration:1.2,ease:"back.out(1.2)"},"<0.1").fromTo(o.uniforms.uRotate,{value:-.3},{value:0},"<0.1").fromTo(o.uniforms.uRotateY,{value:.8},{value:0},"<0.1").fromTo(o.uniforms.uRotateX,{value:-.8},{value:0},"<0.1").fromTo(o.uniforms.uRadius,{value:0},{value:.02,duration:.2},"<0.8")):d.to(o.uniforms.uReveal,{value:1}).fromTo(o.uniforms.uRotate,{value:-.3},{value:0},"<").fromTo(o.uniforms.uRotateY,{value:.8},{value:0},"<").fromTo(o.uniforms.uRotateX,{value:-.8},{value:0},"<").fromTo(o.uniforms.uRadius,{value:0},{value:.02,duration:.2},"<"),ScrollTrigger.create({trigger:e,start:"top 90%",onEnter:()=>d.play()}),ScrollTrigger.create({trigger:e,start:"top bottom",onLeaveBack:()=>d.pause(0)}),e.classList.contains("preview_img")&&ScrollTrigger.create({trigger:e,start:"top bottom",end:"bottom top",onUpdate:u=>{const f=u.progress,m=gsap.utils.mapRange(0,1,-.2,.2,f);o.uniforms.uParallax.value=m}}),{mesh:c,item:e,material:o}}),this.setPosition()}setPosition(){this.meshs.forEach(({mesh:e,item:t})=>{if(t.dataset.visible=="false"||t.classList.contains("cases_video")){e.visible=!1;return}//! HERE FOR POSITION
e.visible=!0;const i=t.getBoundingClientRect();e.position.x=i.left+i.width/2-this.sizes.width/2,e.position.y=-i.top-i.height/2+this.sizes.height/2})}resize(){this.meshs.forEach(({mesh:e,item:t})=>{const i=t.getBoundingClientRect();xi(e,new pt(i.width,i.height,1,1)),e.material.uniforms.uSize.value.set(i.width,i.height);const n=window.getComputedStyle(t).getPropertyValue("border-radius").split("px");e.material.uniforms.uBorder.value=parseFloat(n[0])})}update(){this.meshs.forEach(({material:e})=>{e.uniforms.uFluid.value=this.gl.fluidTexture})}destroy(){this.meshs.forEach(({mesh:e,material:t})=>{t.dispose(),e.geometry.dispose(),this.scene.remove(e)})}}class zM{constructor(e,t,i,n){this.gl=e,this.app=t,this.scene=i,this.main=n,this.sizes=this.app.sizes,this.renderer=this.gl.renderer.instance,this.camera=this.gl.camera.instance,this.scene=i,this.load()}load(){this.isCasesPage=document.querySelector("main").dataset.transitionPage==="case-inner",this.heroInner=this.main.querySelector(".inner-hero"),this.heroItem=this.heroInner.querySelector(".inner-hero_bg"),this.footerLogo=this.main.querySelector(".footer_logo"),this.sources=[],this.footerLogo&&(this.getTextureAttributes(this.footerLogo).forEach(({value:t},i)=>{this.sources.push({type:"textureLoader",url:t,name:`footer-${i}`})}),gsap.set(this.footerLogo,{opacity:0})),this.resources=new Wr(this.sources),this.resources.on("ready",()=>this.init())}init(){if(this.gl.loaded=!0,this.video=new FM(this.app,this.gl,this.scene,this.main),this.footerLogo){this.footerMeshs=[];const e=this.getTextureAttributes(this.footerLogo);this.footerTextures=e.map((t,i)=>{const n=`footer-${i}`;return this.resources.items[n]}),this.footerTextures.forEach((t,i)=>{this.footerMeshs[i]=new Xr(this.app,this.gl,this.scene,this.footerLogo,t,i)})}this.isCasesPage&&(this.hero=new DM(this.app,this.gl,this.scene,this.main,this.heroItem)),this.app.trigger("loadedWorld"),this.app.onceLoaded||(this.app.globalLoader.tl.play(),this.app.page.triggerLoad())}setScroll(e){var t,i,n;(t=this.video)==null||t.setPosition(),(i=this.hero)==null||i.setPosition(e),(n=this.footerMeshs)==null||n.forEach(s=>s.setPosition(e))}update(){var e,t,i;(e=this.video)==null||e.update(),(t=this.hero)==null||t.update(),(i=this.footerMeshs)==null||i.forEach(n=>n.update())}createTexture(e){return this.renderer.setRenderTarget(e),this.renderer.render(this.scene,this.camera),this.renderer.setRenderTarget(null),e.texture}resize(){var e,t,i;(e=this.video)==null||e.resize(),(t=this.hero)==null||t.resize(),(i=this.footerMeshs)==null||i.forEach(n=>n.resize())}onMouseMove(e,t){}destroy(){var e,t,i;(e=this.video)==null||e.destroy(),(t=this.hero)==null||t.destroy(),(i=this.footerMeshs)==null||i.forEach(n=>n.destroy())}getTextureAttributes(e){return e.getAttributeNames().filter(t=>t.startsWith("data-texture-")).map(t=>({name:t,value:e.getAttribute(t),number:parseInt(t.split("-")[2])})).sort((t,i)=>t.number-i.number)}}const BM=Object.freeze(Object.defineProperty({__proto__:null,default:zM},Symbol.toStringTag,{value:"Module"}))})();
