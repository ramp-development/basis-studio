class h{constructor(e,s,t){this.element=e,this.main=s,this.app=t,this.destroyed=!1,this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){const e=this.getCustomAspectRatio();this.element.style.aspectRatio=e.ratio}resize(){this.destroyed}destroy(){this.destroyed||(this.destroyed=!0)}getCustomAspectRatio(){const e=this.element.dataset.aspectMobile,s=this.element.dataset.aspect;let t,i;if(this.isMobile&&e?(t=e,i="data-aspect-mobile"):s&&(t=s,i="data-aspect"),t){const r=this.parseAspectRatio(t);if(r)return{width:r.width,height:r.height,ratio:r.ratio,source:i}}const o=this.getAspectRatioFromCSS(this.element);return o?{width:o.width,height:o.height,ratio:o.ratio,source:"CSS aspect-ratio"}:null}parseAspectRatio(e){if(!e)return null;if(e.includes(":")){const[t,i]=e.split(":").map(Number);if(t&&i)return{width:t,height:i,ratio:t/i}}if(e.includes("/")){const[t,i]=e.split("/").map(Number);if(t&&i)return{width:t,height:i,ratio:t/i}}const s=parseFloat(e);return!isNaN(s)&&s>0?{ratio:s,width:null,height:null}:null}}export{h as default};
