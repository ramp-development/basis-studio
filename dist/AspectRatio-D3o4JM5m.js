import{A as h}from"./app.js";const a=h.getInstance();class c{constructor(t,i){this.element=t,this.main=i,this.destroyed=!1,this.init(),a.on("resize",()=>this.resize()),a.on("destroy",()=>this.destroy())}init(){const t=this.getCustomAspectRatio();t&&t.ratio?this.element.style.aspectRatio=t.ratio:this.element.style.aspectRatio="auto"}resize(){this.destroyed}destroy(){this.destroyed||(this.destroyed=!0)}getCustomAspectRatio(){const t=this.element.dataset.aspectMobile,i=this.element.dataset.aspect;let e,s;if(this.isMobile&&t?(e=t,s="data-aspect-mobile"):i&&(e=i,s="data-aspect"),e){if(e==="auto")return null;const r=this.parseAspectRatio(e);if(r)return{width:r.width,height:r.height,ratio:r.ratio,source:s}}const o=this.getAspectRatioFromCSS(this.element);return o?{width:o.width,height:o.height,ratio:o.ratio,source:"CSS aspect-ratio"}:null}parseAspectRatio(t){if(!t)return null;if(t.includes(":")){const[e,s]=t.split(":").map(Number);if(e&&s)return{width:e,height:s,ratio:e/s}}if(t.includes("/")){const[e,s]=t.split("/").map(Number);if(e&&s)return{width:e,height:s,ratio:e/s}}const i=parseFloat(t);return!isNaN(i)&&i>0?{ratio:i,width:null,height:null}:null}}export{c as default};
