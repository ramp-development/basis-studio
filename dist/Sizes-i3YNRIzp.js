import{E as d}from"./app.js";class v extends d{constructor(){super(),this.body=document.querySelector("body"),this.canvasContainer=document.querySelector(".canvas-container"),this.width=this.canvasContainer?this.canvasContainer.offsetWidth:window.innerWidth,this.height=this.canvasContainer?this.canvasContainer.offsetHeight:window.innerHeight,this.pixelRatio=Math.min(window.devicePixelRatio,2),this.aspect=this.width/this.height,this.aspectV=this.height/this.width,this.initWidth=this.width;let i=this.canvasContainer?this.canvasContainer.offsetWidth:window.innerWidth,e=this.canvasContainer?this.canvasContainer.offsetHeight:window.innerHeight,s=i;const h=()=>{(this.initWidth>=991&&window.innerWidth<991||this.initWidth<991&&window.innerWidth>=991)&&window.location.reload();let n=this.canvasContainer?this.canvasContainer.offsetWidth:window.innerWidth,t=this.canvasContainer?this.canvasContainer.offsetHeight:window.innerHeight;(i!==n||s>=991&&e!==t)&&(this.width=this.canvasContainer?this.canvasContainer.offsetWidth:window.innerWidth,this.height=this.canvasContainer?this.canvasContainer.offsetHeight:window.innerHeight,this.pixelRatio=Math.min(window.devicePixelRatio,2),this.aspect=this.width/this.height,this.aspectV=this.height/this.width,this.trigger("resize")),i=this.canvasContainer?this.canvasContainer.offsetWidth:window.innerWidth};function a(n){let t;const o=window.innerWidth<991?150:300;return function(r){t&&clearTimeout(t),t=setTimeout(n,o,r)}}window.addEventListener("resize",a(function(n){h()}))}observerResize(i){for(const e of i)e.target===this.body&&this.trigger("resize")}}export{v as default};
