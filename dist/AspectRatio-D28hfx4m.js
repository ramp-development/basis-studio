class h{constructor(t,s,e){this.element=t,this.main=s,this.app=e,this.destroyed=!1,this.init(),this.app.on("resize",()=>this.resize()),this.app.on("destroy",()=>this.destroy())}init(){const t=this.getCustomAspectRatio();t&&t.ratio?this.element.style.aspectRatio=t.ratio:this.element.style.aspectRatio="auto"}resize(){this.destroyed}destroy(){this.destroyed||(this.destroyed=!0)}getCustomAspectRatio(){const t=this.element.dataset.aspectMobile,s=this.element.dataset.aspect;let e,i;if(this.isMobile&&t?(e=t,i="data-aspect-mobile"):s&&(e=s,i="data-aspect"),e){if(e==="auto")return null;const r=this.parseAspectRatio(e);if(r)return{width:r.width,height:r.height,ratio:r.ratio,source:i}}const o=this.getAspectRatioFromCSS(this.element);return o?{width:o.width,height:o.height,ratio:o.ratio,source:"CSS aspect-ratio"}:null}parseAspectRatio(t){if(!t)return null;if(t.includes(":")){const[e,i]=t.split(":").map(Number);if(e&&i)return{width:e,height:i,ratio:e/i}}if(t.includes("/")){const[e,i]=t.split("/").map(Number);if(e&&i)return{width:e,height:i,ratio:e/i}}const s=parseFloat(t);return!isNaN(s)&&s>0?{ratio:s,width:null,height:null}:null}}export{h as default};
